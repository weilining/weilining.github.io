<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ln&#39;s Blog</title>
  
  <subtitle>有朋自远方来，不亦乐乎</subtitle>
  <link href="https://weilining.github.io/atom.xml" rel="self"/>
  
  <link href="https://weilining.github.io/"/>
  <updated>2021-11-06T10:01:41.000Z</updated>
  <id>https://weilining.github.io/</id>
  
  <author>
    <name>Lining Wei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>最有效centos下载</title>
    <link href="https://weilining.github.io/350.html"/>
    <id>https://weilining.github.io/350.html</id>
    <published>2021-11-06T10:01:41.000Z</published>
    <updated>2021-11-06T10:01:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="谷歌搜索centos第一个链接"><a href="#谷歌搜索centos第一个链接" class="headerlink" title="谷歌搜索centos第一个链接"></a>谷歌搜索<code>centos</code>第一个链接</h3><p> <span class="exturl" data-url="aHR0cHM6Ly93d3cuY2VudG9zLm9yZy9kb3dubG9hZC8jdGFiLTI=">Download (centos.org)<i class="fa fa-external-link-alt"></i></span></p><h3 id="找自己国家的镜像"><a href="#找自己国家的镜像" class="headerlink" title="找自己国家的镜像"></a>找自己国家的镜像</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY2VudG9zLm9yZy9kb3dubG9hZC9taXJyb3JzLw==">Mirror List (centos.org)<i class="fa fa-external-link-alt"></i></span></p><h3 id="清华大学开源镜像站"><a href="#清华大学开源镜像站" class="headerlink" title="清华大学开源镜像站"></a>清华大学开源镜像站</h3><p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2NlbnRvcy8=">Index of /centos/ | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror<i class="fa fa-external-link-alt"></i></span></p><h3 id="以centos7-9为例"><a href="#以centos7-9为例" class="headerlink" title="以centos7.9为例"></a>以centos7.9为例</h3><p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2NlbnRvcy83LjkuMjAwOS9pc29zL3g4Nl82NC8=">Index of /centos/7.9.2009/isos/x86_64/ | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror<i class="fa fa-external-link-alt"></i></span></p><p>桌面版</p><p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2NlbnRvcy83LjkuMjAwOS9pc29zL3g4Nl82NC9DZW50T1MtNy14ODZfNjQtRFZELTIwMDkuaXNv">CentOS-7-x86_64-DVD-2009.iso<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效GitHub读源码</title>
    <link href="https://weilining.github.io/349.html"/>
    <id>https://weilining.github.io/349.html</id>
    <published>2021-11-04T11:51:11.000Z</published>
    <updated>2021-11-04T11:51:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>地址是这个：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NwcmluZy1wcm9qZWN0cy9zcHJpbmctYm9vdA==">https://github.com/spring-projects/spring-boot<i class="fa fa-external-link-alt"></i></span></p><p>打开之后很普通，没啥不同的</p><p>但是在 com变dev，你就会发现新大陆了</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuZGV2L3NwcmluZy1wcm9qZWN0cy9zcHJpbmctYm9vdA==">https://github.dev/spring-projects/spring-boot<i class="fa fa-external-link-alt"></i></span> </p><p>在<code>repo</code>直接点击`.即可</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmltemp3LmNuL3Bvc3RzL2dpdGh1YjFzLw==">另一种方式在 GitHub 上阅读源码 | 小嘉的部落格 (imzjw.cn)<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效GitHub Action 创建Release</title>
    <link href="https://weilining.github.io/348.html"/>
    <id>https://weilining.github.io/348.html</id>
    <published>2021-11-02T10:26:14.000Z</published>
    <updated>2021-11-02T10:26:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dlaWxpbmluZy9Ib3N0bG9jQXV0b0dldFBvaW50cw==">weilining/HostlocAutoGetPoints: 腾讯云函数和GitHub Action测试通过<i class="fa fa-external-link-alt"></i></span></p><h3 id="GitHub-Action"><a href="#GitHub-Action" class="headerlink" title="GitHub Action"></a>GitHub Action</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">name: CI</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    # Sequence of patterns matched against refs&#x2F;tags</span><br><span class="line">    tags:</span><br><span class="line">      - &quot;v*&quot; # Push events to matching v*, i.e. v1.0, v20.15.10</span><br><span class="line">jobs:</span><br><span class="line">  build:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line"></span><br><span class="line">    steps:</span><br><span class="line">      - name: Checkout source</span><br><span class="line">        uses: actions&#x2F;checkout@v1</span><br><span class="line">      - name: Build normal</span><br><span class="line">        run: |</span><br><span class="line"></span><br><span class="line">          zip -r mjjscf.zip .&#x2F;*</span><br><span class="line">      - name: Create Release</span><br><span class="line">        id: create_release</span><br><span class="line">        uses: monkeyWie&#x2F;create-release@master</span><br><span class="line">        env:</span><br><span class="line">          GITHUB_TOKEN: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class="line">        with:</span><br><span class="line">          tag_name: $&#123;&#123; github.ref &#125;&#125;</span><br><span class="line">          release_name: Release $&#123;&#123; github.ref &#125;&#125;</span><br><span class="line">          draft: false</span><br><span class="line">          prerelease: false</span><br><span class="line"></span><br><span class="line">      - name: Upload Release normal windows</span><br><span class="line">        uses: actions&#x2F;upload-release-asset@v1.0.1</span><br><span class="line">        env:</span><br><span class="line">          GITHUB_TOKEN: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class="line">        with:</span><br><span class="line">          upload_url: $&#123;&#123; steps.create_release.outputs.upload_url &#125;&#125; # This pulls from the CREATE RELEASE step above, referencing it&#39;s ID to get its outputs object, which include a &#96;upload_url&#96;. See this blog post for more info: https:&#x2F;&#x2F;jasonet.co&#x2F;posts&#x2F;new-features-of-github-actions&#x2F;#passing-data-to-future-steps</span><br><span class="line">          asset_path: .&#x2F;mjjscf.zip</span><br><span class="line">          asset_name: normal-$&#123;&#123; steps.create_release.outputs.tag &#125;&#125;-mjjscf.zip</span><br><span class="line">          asset_content_type: application&#x2F;zip</span><br></pre></td></tr></table></figure><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;main&quot;</span><br><span class="line">git pull origin main</span><br><span class="line">git push origin main</span><br><span class="line"># 创建tag名为v1.0.8，并添加描述</span><br><span class="line">git tag -a &quot;v1.0.8&quot; -m &#39;发布v1.0.8版本</span><br><span class="line">修复了以下bug:</span><br><span class="line">1. xxxxx</span><br><span class="line">2. xxxxx&#39;</span><br><span class="line"># 把tag推到github上</span><br><span class="line">git push --tags</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMDg3Mzg2MA==">Github Actions 尝鲜 - SegmentFault 思否<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效Python3本地模拟GitHub Actions secrets</title>
    <link href="https://weilining.github.io/347.html"/>
    <id>https://weilining.github.io/347.html</id>
    <published>2021-11-02T07:24:05.000Z</published>
    <updated>2021-11-02T07:24:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实测"><a href="#实测" class="headerlink" title="实测"></a>实测</h2><p>GitHub Action 本地测试模拟</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HOSTLOC_USERNAME&#x3D;daydayup</span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">usernames &#x3D; os.environ[&#39;HOSTLOC_USERNAME&#39;]</span><br></pre></td></tr></table></figure><p>本地运行正常</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbHVvY29kZXMvcC8xMDY5MDI0Ni5odG1s">python设置环境变量(临时和永久) - LuoSpider - 博客园 (cnblogs.com)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC81ZTU5Zjk5MzkyMmM=">Linux 设置永久环境变量 - 简书 (jianshu.com)<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效更新Python</title>
    <link href="https://weilining.github.io/346.html"/>
    <id>https://weilining.github.io/346.html</id>
    <published>2021-11-02T00:01:46.000Z</published>
    <updated>2021-11-02T00:01:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv">Download Python | Python.org<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Defaulting to user installation because normal site-packages is not writeable</title>
    <link href="https://weilining.github.io/345.html"/>
    <id>https://weilining.github.io/345.html</id>
    <published>2021-11-01T20:15:46.000Z</published>
    <updated>2021-11-01T20:15:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>Python 3:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install [package_name]</span><br></pre></td></tr></table></figure><p>Python 2:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install [package_name]</span><br></pre></td></tr></table></figure><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -i https:&#x2F;&#x2F;pypi.python.org&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">pip install -i https:&#x2F;&#x2F;pypi.python.org&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p><img data-src="/345/image-20211102041659816.png" alt="image-20211102041659816" loading="lazy"></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install -i https:&#x2F;&#x2F;pypi.python.org&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">python -m pip install -i https:&#x2F;&#x2F;pypi.python.org&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTk5OTcwNjUvcGlwLXB5dGhvbi1ub3JtYWwtc2l0ZS1wYWNrYWdlcy1pcy1ub3Qtd3JpdGVhYmxlLzY1MjkwNjM4">pip/python: normal site-packages is not writeable - Stack Overflow<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效Python模块安装在文件</title>
    <link href="https://weilining.github.io/344.html"/>
    <id>https://weilining.github.io/344.html</id>
    <published>2021-11-01T19:29:01.000Z</published>
    <updated>2021-11-01T19:29:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文以安装 <code>numpy</code> 库为例：</p><ol><li>在本地终端中执行 <code>mkdir test-package</code> 命令，创建一个目录用于存放函数代码和依赖库。</li><li>执行以下命令，在该目录下安装 <code>numpy</code> 依赖库。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd test-package</span><br><span class="line">pip install numpy -t .</span><br></pre></td></tr></table></figure><ul><li>您可以使用 <code>pip freeze &gt; requirements.txt</code> 生成本地环境下所有依赖的 <code>requirements.txt</code> 文件。</li><li>在 IDE 的终端中执行 <code>pip install -r requirements.txt -t .</code> 即可根据 <code>requirements.txt</code> 的配置安装依赖包。</li></ul>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效python批量安装模块</title>
    <link href="https://weilining.github.io/343.html"/>
    <id>https://weilining.github.io/343.html</id>
    <published>2021-11-01T17:22:22.000Z</published>
    <updated>2021-11-01T17:22:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>我相信很多小伙伴带有一个困扰，换了电脑或者重新装了系统之后，自己之前搭建的python环境和模块等等，都需要重新部署，特别费劲。有没有什么简单的方法呢？答案显而易见，请看下面介绍!</p><h1 id="1-创建requirements-txt文件，把所需要安装的模块都写进去"><a href="#1-创建requirements-txt文件，把所需要安装的模块都写进去" class="headerlink" title="1.创建requirements.txt文件，把所需要安装的模块都写进去"></a>1.创建requirements.txt文件，把所需要安装的模块都写进去</h1><p><img data-src="https://upload-images.jianshu.io/upload_images/18158347-7713e17d91dc65d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/719/format/webp" alt="img" loading="lazy"></p><p>当然，版本号可以为空，为空时自动最新版本</p><h1 id="2-执行命令安装requirements-txt中的模块"><a href="#2-执行命令安装requirements-txt中的模块" class="headerlink" title="2.执行命令安装requirements.txt中的模块"></a>2.执行命令安装requirements.txt中的模块</h1><blockquote><p>pip install -r requirements.txt </p></blockquote><p>等待系统自动下载安装，简单快速</p><h1 id="3-已安装模块的导出"><a href="#3-已安装模块的导出" class="headerlink" title="3.已安装模块的导出"></a>3.已安装模块的导出</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">您可以使用 pip freeze &gt; requirements.txt 生成本地环境下所有依赖的 requirements.txt 文件。</span><br><span class="line">在 IDE 的终端中执行 pip install -r requirements.txt -t . 即可根据 requirements.txt 的配置安装依赖包。</span><br></pre></td></tr></table></figure><p>当然，会有一些小伙伴说，我模块安装的太多，一个一个写出来也挺费劲呢，有没有简单的方法呢？请看下面：</p><p>在终端执行命令：</p><blockquote><p>pip3 freeze &gt;requirements.txt</p></blockquote><p><img data-src="/343/image-20211102012409686.png" alt="image-20211102012409686" loading="lazy"></p><p>生成已安装的模块requirements.txt</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效Heroku Yes</title>
    <link href="https://weilining.github.io/342.html"/>
    <id>https://weilining.github.io/342.html</id>
    <published>2021-10-31T18:38:15.000Z</published>
    <updated>2021-10-31T18:38:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p><span class="exturl" data-url="aHR0cHM6Ly9zaWdudXAuaGVyb2t1LmNvbS9hY2NvdW50">Heroku | Sign up<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The domain qq.com has been blocked.</span><br></pre></td></tr></table></figure><p><code>qq</code>邮箱不行，用<code>yandex</code>邮箱</p><p><span class="exturl" data-url="aHR0cHM6Ly9wYXNzcG9ydC55YW5kZXguY29tL3JlZ2lzdHJhdGlvbg==">Registration (yandex.com)<i class="fa fa-external-link-alt"></i></span></p><h3 id="Fork"><a href="#Fork" class="headerlink" title="Fork"></a>Fork</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JjbHN3bDA4MjcvdjJyYXktaGVyb2t1">bclswl0827/v2ray-heroku: 用于在 Heroku 上部署 V2Ray WebSocket。 (github.com)<i class="fa fa-external-link-alt"></i></span></p><p><img data-src="/342/image-20211101030612448.png" alt="image-20211101030612448" loading="lazy"></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;dashboard.heroku.com&#x2F;new?template&#x3D;https:&#x2F;&#x2F;github.com&#x2F;w6l&#x2F;daydayup</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://dashboard.heroku.com/new?template=https://github.com/w6l/daydayup"><img data-src="/342/button.png" alt="Deploy" loading="lazy"></a></p></blockquote><h3 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h3><p>打开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;yourapp.herokuapp.com&#x2F;</span><br></pre></td></tr></table></figure><p>返回</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bad Request</span><br></pre></td></tr></table></figure><h3 id="套cloudflare"><a href="#套cloudflare" class="headerlink" title="套cloudflare"></a>套cloudflare</h3><p>CloudFlare Workers反代代码（可分别用两个账号的应用程序名（<code>PROTOCOL</code>、<code>UUID</code>、<code>WS_PATH</code>保持一致），单双号天分别执行，那一个月就有550+550小时）</p><p><span class="exturl" data-url="aHR0cHM6Ly9kYXNoLmNsb3VkZmxhcmUuY29tL2xvZ2lu">Cloudflare - Web Performance &amp; Security<i class="fa fa-external-link-alt"></i></span></p><p>创建<code>Worker</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">const SingleDay &#x3D; &#39;app0.herokuapp.com&#39;</span><br><span class="line">const DoubleDay &#x3D; &#39;app1.herokuapp.com&#39;</span><br><span class="line">addEventListener(</span><br><span class="line">    &quot;fetch&quot;,event &#x3D;&gt; &#123;</span><br><span class="line">    </span><br><span class="line">        let nd &#x3D; new Date();</span><br><span class="line">        if (nd.getDate()%2) &#123;</span><br><span class="line">            host &#x3D; SingleDay</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            host &#x3D; DoubleDay</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        let url&#x3D;new URL(event.request.url);</span><br><span class="line">        url.hostname&#x3D;host;</span><br><span class="line">        let request&#x3D;new Request(url,event.request);</span><br><span class="line">        event. respondWith(</span><br><span class="line">            fetch(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="反代成功"><a href="#反代成功" class="headerlink" title="反代成功"></a>反代成功</h3><p> 进阶</p><p>heorku可以绑卡（应用一直在线，不扣费），绑定域名，套cf，<span class="exturl" data-url="aHR0cHM6Ly91cHRpbWVyb2JvdC5jb20v">uptimerobot<i class="fa fa-external-link-alt"></i></span> 定时访问防止休眠（只监控CF Workers反代地址好了，不然几个账户一起监控没几天就到期了）</p><h3 id="CloudFlare-Workers反代代码（可分别用两个账号的应用程序名（PROTOCOL、UUID、WS-PATH保持一致），单双号天分别执行，那一个月就有550-550小时）"><a href="#CloudFlare-Workers反代代码（可分别用两个账号的应用程序名（PROTOCOL、UUID、WS-PATH保持一致），单双号天分别执行，那一个月就有550-550小时）" class="headerlink" title="CloudFlare Workers反代代码（可分别用两个账号的应用程序名（PROTOCOL、UUID、WS_PATH保持一致），单双号天分别执行，那一个月就有550+550小时）"></a>CloudFlare Workers反代代码（可分别用两个账号的应用程序名（<code>PROTOCOL</code>、<code>UUID</code>、<code>WS_PATH</code>保持一致），单双号天分别执行，那一个月就有550+550小时）</h3><p>CloudFlare Workers单账户反代代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(</span><br><span class="line">    &quot;fetch&quot;,event &#x3D;&gt; &#123;</span><br><span class="line">        let url&#x3D;new URL(event.request.url);</span><br><span class="line">        url.hostname&#x3D;&quot;appname.herokuapp.com&quot;;</span><br><span class="line">        let request&#x3D;new Request(url,event.request);</span><br><span class="line">        event. respondWith(</span><br><span class="line">            fetch(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>CloudFlare Workers单双日轮换反代代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">const SingleDay &#x3D; &#39;app0.herokuapp.com&#39;</span><br><span class="line">const DoubleDay &#x3D; &#39;app1.herokuapp.com&#39;</span><br><span class="line">addEventListener(</span><br><span class="line">    &quot;fetch&quot;,event &#x3D;&gt; &#123;</span><br><span class="line">    </span><br><span class="line">        let nd &#x3D; new Date();</span><br><span class="line">        if (nd.getDate()%2) &#123;</span><br><span class="line">            host &#x3D; SingleDay</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            host &#x3D; DoubleDay</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        let url&#x3D;new URL(event.request.url);</span><br><span class="line">        url.hostname&#x3D;host;</span><br><span class="line">        let request&#x3D;new Request(url,event.request);</span><br><span class="line">        event. respondWith(</span><br><span class="line">            fetch(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>CloudFlare Workers每五天轮换一遍式反代代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">const Day0 &#x3D; &#39;app0.herokuapp.com&#39;</span><br><span class="line">const Day1 &#x3D; &#39;app1.herokuapp.com&#39;</span><br><span class="line">const Day2 &#x3D; &#39;app2.herokuapp.com&#39;</span><br><span class="line">const Day3 &#x3D; &#39;app3.herokuapp.com&#39;</span><br><span class="line">const Day4 &#x3D; &#39;app4.herokuapp.com&#39;</span><br><span class="line">addEventListener(</span><br><span class="line">    &quot;fetch&quot;,event &#x3D;&gt; &#123;</span><br><span class="line">    </span><br><span class="line">        let nd &#x3D; new Date();</span><br><span class="line">        let day &#x3D; nd.getDate() % 5;</span><br><span class="line">        if (day &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">            host &#x3D; Day0</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 1) &#123;</span><br><span class="line">            host &#x3D; Day1</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 2) &#123;</span><br><span class="line">            host &#x3D; Day2</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 3)&#123;</span><br><span class="line">            host &#x3D; Day3</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 4)&#123;</span><br><span class="line">            host &#x3D; Day4</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            host &#x3D; Day1</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        let url&#x3D;new URL(event.request.url);</span><br><span class="line">        url.hostname&#x3D;host;</span><br><span class="line">        let request&#x3D;new Request(url,event.request);</span><br><span class="line">        event. respondWith(</span><br><span class="line">            fetch(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>CloudFlare Workers一周轮换反代代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">const Day0 &#x3D; &#39;app0.herokuapp.com&#39;</span><br><span class="line">const Day1 &#x3D; &#39;app1.herokuapp.com&#39;</span><br><span class="line">const Day2 &#x3D; &#39;app2.herokuapp.com&#39;</span><br><span class="line">const Day3 &#x3D; &#39;app3.herokuapp.com&#39;</span><br><span class="line">const Day4 &#x3D; &#39;app4.herokuapp.com&#39;</span><br><span class="line">const Day5 &#x3D; &#39;app5.herokuapp.com&#39;</span><br><span class="line">const Day6 &#x3D; &#39;app6.herokuapp.com&#39;</span><br><span class="line">addEventListener(</span><br><span class="line">    &quot;fetch&quot;,event &#x3D;&gt; &#123;</span><br><span class="line">    </span><br><span class="line">        let nd &#x3D; new Date();</span><br><span class="line">        let day &#x3D; nd.getDay();</span><br><span class="line">        if (day &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">            host &#x3D; Day0</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 1) &#123;</span><br><span class="line">            host &#x3D; Day1</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 2) &#123;</span><br><span class="line">            host &#x3D; Day2</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 3)&#123;</span><br><span class="line">            host &#x3D; Day3</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 4) &#123;</span><br><span class="line">            host &#x3D; Day4</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 5) &#123;</span><br><span class="line">            host &#x3D; Day5</span><br><span class="line">        &#125; else if (day &#x3D;&#x3D;&#x3D; 6) &#123;</span><br><span class="line">            host &#x3D; Day6</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            host &#x3D; Day1</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        let url&#x3D;new URL(event.request.url);</span><br><span class="line">        url.hostname&#x3D;host;</span><br><span class="line">        let request&#x3D;new Request(url,event.request);</span><br><span class="line">        event. respondWith(</span><br><span class="line">            fetch(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="heroku还有这些有趣的项目"><a href="#heroku还有这些有趣的项目" class="headerlink" title="heroku还有这些有趣的项目"></a>heroku还有这些有趣的项目</h2><p>在线vscode：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JwbWN0L2RlcGxveS1jb2RlLXNlcnZlci9ibG9iL21haW4vZ3VpZGVzL2hlcm9rdS5tZA==">https://github.com/bpmct/deploy-code-server/blob/main/guides/heroku.md<i class="fa fa-external-link-alt"></i></span>  <strong>试过</strong><br>bitwarden： <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvbXV0b3V4aWEvYml0d2FyZGVucnNfaGVyb2t1">https://elements.heroku.com/buttons/mutouxia/bitwardenrs_heroku<i class="fa fa-external-link-alt"></i></span> <strong>试过</strong><br>搭建自己的搜索引擎（基于Google）： <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvYmVuYnVzYnkvd2hvb2dsZS1zZWFyY2g=">https://elements.heroku.com/buttons/benbusby/whoogle-search<i class="fa fa-external-link-alt"></i></span>  <strong>试过</strong><br>万能镜像站（可镜像几乎所有网站，部分网站支持登录）： <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvYmluYXJ5LXBlcnNvbi93b21naW54">https://elements.heroku.com/buttons/binary-person/womginx<i class="fa fa-external-link-alt"></i></span>  <strong>试过</strong><br>wordpress博客： <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvcGhpbGlwcGhldWVyL3dvcmRwcmVzcy1oZXJva3U=">https://elements.heroku.com/buttons/philippheuer/wordpress-heroku<i class="fa fa-external-link-alt"></i></span>  <strong>试过</strong><br>onemanager： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3FrcXB0dGdmL09uZU1hbmFnZXItcGhw">https://github.com/qkqpttgf/OneManager-php<i class="fa fa-external-link-alt"></i></span>    <strong>试过</strong><br>hostloc签到： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xhb2d1aTIwMDgvaGVyb2t1X2hvc3Rsb2NfZ2V0X3BvaW50czI=">https://github.com/laogui2008/heroku_hostloc_get_points2<i class="fa fa-external-link-alt"></i></span><br>Office 全局管理程序(PHP) ： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Rlc3Rub2JvZHkvb2ZmaWNlX2FkbWluX2hlcm9rdQ==">https://github.com/testnobody/office_admin_heroku<i class="fa fa-external-link-alt"></i></span><br>cloudreve ： <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvdXNlYmx1ZS9jbG91ZHJldmUtaGVyb2t1">https://elements.heroku.com/buttons/useblue/cloudreve-heroku<i class="fa fa-external-link-alt"></i></span><br>mega网盘挂载： <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvZGV2ZWxvcGVyYW5hei9tZWdhLm56LXJjbG9uZS1pbmRleC1oZXJva3U=">https://elements.heroku.com/buttons/developeranaz/mega.nz-rclone-index-heroku<i class="fa fa-external-link-alt"></i></span><br>我的世界服务器： <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvamt1dG5lci9oZXJva3UtYnVpbGRwYWNrLW1pbmVjcmFmdA==">https://elements.heroku.com/buttons/jkutner/heroku-buildpack-minecraft<i class="fa fa-external-link-alt"></i></span><br>rsshub： <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvZGl5Z29kL3Jzc2h1Yg==">https://elements.heroku.com/buttons/diygod/rsshub<i class="fa fa-external-link-alt"></i></span><br>有图比-dl（下载ytb视频）： <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvYW5kcmV3c3RlY2gvJUU2JTlDJTg5JUU1JTlCJUJFJUU2JUFGJTk0LWRsLWFwaS1zZXJ2ZXI=">https://elements.heroku.com/buttons/andrewstech/有图比-dl-api-server<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">干货插眼</span><br><span class="line"></span><br><span class="line">hostloc签到Python脚本 之 Heroku 篇</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;laogui2008&#x2F;heroku_hostloc_get_points2</span><br><span class="line">Office 全局管理程序(PHP) Heroku 一键部署</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;testnobody&#x2F;office_admin_heroku</span><br><span class="line">用heroku搭建一个随机&quot;色图&quot;</span><br><span class="line">https:&#x2F;&#x2F;dashboard.heroku.com&#x2F;new ... 4740&#x2F;randpic-heroku</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50cy5oZXJva3UuY29tL2J1dHRvbnMvc3Vpa2FyZW1pbGlhL2hlcm9rdS12MnJheQ==">suikaremilia/Heroku-v2ray - Buttons - Heroku Elements<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效国内外网站测速及性能分析工具</title>
    <link href="https://weilining.github.io/341.html"/>
    <id>https://weilining.github.io/341.html</id>
    <published>2021-10-31T17:17:13.000Z</published>
    <updated>2021-10-31T17:17:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYm9jZS5jb20v">boce.com:网站测速-ping检测-域名污染-域名被墙-dns查询-IPv6网站测试-路由跟踪查询-劫持检测<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucGluZy5jbi8=">Ping.cn:网站测速-ping检测-dns查询-ipv6网站测试-路由跟踪查询<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuMTdjZS5jb20vZ2V0">GET测试 网站速度测试 17CE<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly90b29sLmNoaW5hei5jb20vc2l0ZXNwZWVk">网站测速工具 - 站长工具 (chinaz.com)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWljZXN1LmNuLw==">测速网,网站测速,在线网页测速工具,网络宽带测速-谷歌测速网 (aicesu.cn)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc3BlZWQvcGFnZXNwZWVkL2luc2lnaHRzLz9obD16aC1jbg==">PageSpeed Insights (google.com)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cDovL3d3dy53ZWJrYWthLmNvbS8=">网速测试,测网速,网速检测,网站速度测试—卡卡网 www.webkaka.com<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuMzZjZS5uZXQv">网站测速工具-网速测试-测网站打开速度 (36ce.net)<i class="fa fa-external-link-alt"></i></span></p><p>站长，尤其是SEOer，都明白网站的访问速度对用户体验和搜索引擎排名的重要性。</p><p>早在2012年，<em>The Google Gospel of Speed</em> 中就提到，对于Google自身的搜索结果页，每400毫秒的延迟就会导致整体搜索量下降0.44%。</p><p>对于移动端，就更可怕了：谷歌2018年的最新研究表明，当移动端页面加载时间从1秒增加到3秒时，跳出率会增加32%；从1秒增加到5秒，跳出率会增加90%；如果从1秒增加到超过10秒，跳出率会增加123%。</p><p>就在这个月，Zac给国内的SEOer们更新了这个消息：<span class="exturl" data-url="aHR0cHM6Ly93d3cuc2VvemFjLmNvbS9tb2JpbGUtc2VvL21vYmlsZS1zcGVlZC11cGRhdGUv">Google正式上线：页面速度影响移动搜索排名<i class="fa fa-external-link-alt"></i></span><br>而百度和谷歌各自正大力推广的MIP和AMP，也都在不断告诉我们网站访问速度的重要性。</p><p><img data-src="/341/3437537680.jpg" alt="常用国内外网站测速及性能分析工具" loading="lazy"></p><p>怎样让网站速度变快？这涉及到网络环境、服务器位置和配置、DNS解析、CDN、网站结构和代码优化等诸多方面，不可谓不复杂，普通玩家今天不打算展开，而是对网站速度优化的基础：网站测速及性能分析，做一些常用网站、工具的梳理。</p><p>根据普通玩家自己的理解，“网站测速” 这个概念，总的来说可以分为三种情况：</p><h2 id="测试多地访问网站的速度"><a href="#测试多地访问网站的速度" class="headerlink" title="测试多地访问网站的速度"></a>测试多地访问网站的速度</h2><p>网站多地测速工具/网站，通常是<strong>同时测试并列出众多监测点到网站的主要速度指标</strong>(如解析时间、连接时间、下载速度等)，一般<strong>不用于</strong>检测网站代码及服务器性能优化的情况，而是主要用于选购服务器/VPS、服务器/CDN在各地的网速排查、CDN部署等。</p><ul><li><a href="https://www.17ce.com/"><strong>17ce</strong></a> <em>(国内网站)</em><ul><li>60+个国内及香港监测点,适用于<strong>国内</strong>各地访问网站的速度测试</li><li>提供 Get, Ping, 路由追踪, Dns, Cdn等多维度速度测试</li><li>提供监控API(付费)</li></ul></li><li><a href="http://www.webkaka.com/"><strong>卡卡网 Webkaka</strong></a> <em>(国内网站)</em><ul><li>60+个国内监测点, 30+个海外监测点，适用于<strong>国内</strong>或<strong>全球</strong>各地访问网站的速度测试</li><li>提供 Get, ping, 路由追踪, Dns等多维度速度测试</li><li>提供网站速度诊断功能</li></ul></li><li><a href="https://performance.sucuri.net/"><strong>Sucuri Load Time Tester</strong></a> <em>(国外网站)</em><ul><li>15+个全球监测点, 适用于<strong>全球</strong>各地访问网站(如外贸网站)的速度测试</li><li>提供网页连接时间、首字节时间、总时间等数据</li></ul></li><li><a href="https://www.dotcom-tools.com/website-speed-test.aspx"><strong>Dotcom-Tools Website Speed Test</strong></a> <em>(国外网站)</em><ul><li>20+个全球监测点, 适用于<strong>全球</strong>各地访问网站(如外贸网站)的速度测试</li><li>提供两次(首次及重复访问)网页加载速度，且可按节点查看详细信息</li></ul></li></ul><h2 id="测试及分析网站速度性能"><a href="#测试及分析网站速度性能" class="headerlink" title="测试及分析网站速度性能"></a>测试及分析网站速度性能</h2><p>网站性能测试工具/网站，有的同样可以测试<strong>本地</strong>或<strong>单个监测点</strong>访问网站的速度，但其主要作用，是对网站进行全方位的代码及部署检测，根据一定规则给出评分以及相关的优化建议。</p><ul><li><a href="http://yslow.org/"><strong>YSlow</strong></a> <em>(浏览器插件)</em><ul><li>Yahoo根据官方团队总结的23条影响网站速度的指标所提供的网站性能检测插件</li><li>统计页面各方面性能指标，并根据YSlow或用户自定义的规则给出评分以及具体优化建议</li><li>支持 Firefox, Chrome, Safari, Opera 等内核的浏览器</li><li>这是个浏览器插件，对相应网页的分析是基于本地的访问</li></ul></li><li><a href="https://developers.google.com/speed/pagespeed/insights/"><strong>PageSpeed Insights</strong></a> <em>(Google在线工具/墙外)</em><ul><li>PageSpeed Insights是Google的网页性能优化工具之一，与YSlow类似</li><li>移动端与PC端分别给出分析报告及优化建议</li><li>PageSpeed Insights服务是在线提供的(是个网页)</li></ul></li><li><a href="https://gtmetrix.com/"><strong>GTmetrix</strong></a> <em>(国外网站)</em><ul><li>GTmetrix算是YSlow+PageSpeed Insights的加强版，分别给出两者的评分及分析报告</li><li>7个国外监测点(不可自选)</li><li>同时还会提供页面加载Waterfall和速度信息</li><li>会按网址保存历史测速信息并随时对比、查看、下载</li></ul></li><li><a href="https://www.pingdom.com/"><strong>Pingdom</strong></a> <em>(国外网站)</em><ul><li>与GTmetrix类似，页面性能评分及建议基于PageSpeed</li><li>4个国外监测点(可自选)</li></ul></li><li><a href="http://www.webpagetest.org/"><strong>WebPageTest</strong></a> <em>(国外网站)</em><ul><li>根据地区及<strong>设备</strong>细分，全球拥有近百个监测点(包括中国)</li><li>遗憾的是只能进行单点测速，有Waterfall及速度指标，但没有相关评分及优化建议。</li></ul></li></ul><h2 id="追踪真实访客的访问速度"><a href="#追踪真实访客的访问速度" class="headerlink" title="追踪真实访客的访问速度"></a>追踪真实访客的访问速度</h2><p>无论是对网站进行多地测速，还是进行性能分析，往往是在服务器/CDN选择以及网站代码优化的层面提供参考。在网站部署、代码优化完成并上线后，我们会面临一个灵魂拷问：</p><p><strong>散落在世界各地的访客，访问我的网站速度到底是怎样的？</strong></p><p>追踪并拆解分析网站真实访客的访问速度，然后进行针对性的优化，是网站速度优化中必不可少的环节。</p><ul><li><a href="https://analytics.google.com/"><strong>Google Analytics(GA)</strong></a><ul><li>网站速度分析是GA的内置功能，使用GA作为网站统计工具的话，没有额外的部署成本。</li><li>追踪的维度全面：服务器连接时间、服务器响应时间、网页加载时间、网页下载时间、域名查询时间、重定向时间等。</li><li>与GA其它访客数据深度集成。比如：从国家、浏览器或网站页面等不同维度拆解访客的访问速度。</li><li>GA网站速度追踪是<strong>抽样</strong>数据，普通玩家根据自己的观察抽样率在1%左右：同期1万个访客，会有约100份采样数据。</li></ul></li></ul><p><img data-src="/341/1218183556.png" alt="Google Analytics网站速度分析" loading="lazy"></p><p>如果网站的访客数量以GA约1%的采样率不足以支持有效的速度分析的话，可以尝试去寻找其他统计工具方案，或是自主开发相关的功能。不过话说回来，这种情况下是不是有必要追踪真实访客的访问速度也值得商榷了。</p><p>对于站长来说，网站速度一直是许多人非常关心的问题，网页加载速度对于用户体验有着很大的影响，如何更全面的了解自己网站的加载速度呢？本文中我们来推荐几款好用的网站测速工具，帮你快速了解网站的性能与速度</p><h2 id="PageSpeed-Insights"><a href="#PageSpeed-Insights" class="headerlink" title="PageSpeed Insights"></a>PageSpeed Insights</h2><p><img data-src="https://www.v1tx.com/wp-content/uploads/2020/05/20200506083757-1024x401.jpg" alt="谷歌网站测速工具PageSpeed Insights" loading="lazy"></p><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc3BlZWQvcGFnZXNwZWVkL2luc2lnaHRzLw==">PageSpeed Insights<i class="fa fa-external-link-alt"></i></span> 是Google推出的一款免费网站测速工具，它可以分别测试你的网站在移动设备和桌面设备上的加载速度，PageSpeed Insights 给出的测速数据并不是很多，但是它的优化建议功能非常实用，它会直接告诉你应该优化哪些地方，比如移除阻塞渲染的资源，它会显示哪个js文件阻止了渲染，减少文件请求等</p><p>另外还有一个值得关注的地方就是它的实验室数据，它可以显示你的网站进入不同状态的具体时间，比如首次内容绘制时间、首次有效绘制时间、可交互前的耗时、首次输入延迟最长预估值等，还可以查看到网页加载过程中的截图</p><p><img data-src="https://www.v1tx.com/wp-content/uploads/2020/05/20200506084523.jpg" alt="PageSpeed Insights 实验室数据" loading="lazy"></p><h2 id="GTmetrix"><a href="#GTmetrix" class="headerlink" title="GTmetrix"></a>GTmetrix</h2><p><img data-src="https://www.v1tx.com/wp-content/uploads/2020/05/20200506081928-1024x584.jpg" alt="专业网站测速工具GTmetrix" loading="lazy"></p><p><span class="exturl" data-url="aHR0cHM6Ly9ndG1ldHJpeC5jb20v">GTmetrix <i class="fa fa-external-link-alt"></i></span>是一款非常专业的网站测速工具，在测速之前，我们就可以设置很多选项(需要登陆，建议注册账号使用)，比如测试服务器的位置、测试浏览器、网速模拟、HTTP登陆验证等，可以用它测试很多不同的使用场景</p><p>在测试完成后，GTmetrix 还会给出非常详细的报告，包括</p><ul><li>页面速度，比如缓存、页面渲染、代码图片的压缩等</li><li>YSlow分析得分，也是值得参考的报告</li><li>页面加载瀑布流，页面元素的加载流程以及资源消耗</li><li>页面加载时间线，首次页面加载、Dom加载等的具体时间</li><li>视频回放，可以查看页面加载的视频</li><li>历史数据分析，如果你对同一页面做多次测试的话可以查看历史分析，以图表的形式展示了速度的变化</li></ul><p>GTmetrix 是一款非常强大的网页测速工具，里面有很多专业的工具，如果你正在优化自己的网站速度，一定要试试这款工具</p><h2 id="Pingdom-测速工具"><a href="#Pingdom-测速工具" class="headerlink" title="Pingdom 测速工具"></a>Pingdom 测速工具</h2><p><img data-src="https://www.v1tx.com/wp-content/uploads/2020/05/20200506080916-1024x468.jpg" alt="Pingdom 网站测速工具" loading="lazy"></p><p><span class="exturl" data-url="aHR0cHM6Ly90b29scy5waW5nZG9tLmNvbS8=">Pingdom测速工具<i class="fa fa-external-link-alt"></i></span> 是一个非常简洁而且漂亮的网站测速工具，它提供了包括日本东京、德国法兰克福、英国伦敦、美国华盛顿、美国旧金山、澳大利亚悉尼、巴西圣保罗等7个不同地区的测速点，你在其中选择最适合自己网站的服务器</p><p>在测速完毕后，Pingdom 会根据网页的页面大小、加载时间、请求数量等给出一个页面性能得分，性能得分越高，证明网站优化得越好，速度也就越快</p><p>如果你想要查看更详细的信息，还可以继续查看下面的报告，其提供的数据包括</p><ul><li>页面各种类型文件的大小，比如各种脚本、图片、字体、代码等的大小</li><li>页面各种类型文件的请求数量，包括JS、图片、CSS、XHR、HTML等</li><li>不同域名加载内容的数量和大小，可以查看到一些第三方资源</li><li>页面文件的加载时间和序列，详细的加载流程</li></ul><p>通过这些详细信息，网站管理者可以轻松了解到哪些地方阻塞了网站的加载，然后针对性的优化</p><p>Pingdom 是一款非常好用的网站速度测试工具，即能快速测试出网站的速度分数，又能详细分析页面的性能，不管是新手还是专业人员，都非常推荐使用</p><h2 id="WebPageTest"><a href="#WebPageTest" class="headerlink" title="WebPageTest"></a>WebPageTest</h2><p><img data-src="https://www.v1tx.com/wp-content/uploads/2020/05/20200506085900-1024x532.jpg" alt="免费网站测速工具WebPageTest" loading="lazy"></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cud2VicGFnZXRlc3Qub3JnLw==">WebPageTest<i class="fa fa-external-link-alt"></i></span> 是一款免费的网站速度测试工具，它有非常多的数据点，可以测试你的网站在全球的加载速度，你还可以选择不同的浏览器、设备进行测试。当输入网站测速后，WebPageTest 会进行3次测试，你可以参考这些不同的加载时间，也可以点击进入详细的报告页面，报告里面包含了瀑布流、请求详情、内容分析、域名分析等页面，可以用来分析网站</p><h2 id="Sucuri-Load-Time-Tester"><a href="#Sucuri-Load-Time-Tester" class="headerlink" title="Sucuri Load Time Tester"></a>Sucuri Load Time Tester</h2><p><img data-src="https://www.v1tx.com/wp-content/uploads/2020/05/20200506091402-1024x457.jpg" alt="全球网速测试工具Sucuri Load Time Tester" loading="lazy"></p><p><span class="exturl" data-url="aHR0cHM6Ly9wZXJmb3JtYW5jZS5zdWN1cmkubmV0Lw==">Sucuri Load Time Tester<i class="fa fa-external-link-alt"></i></span> 是由Sucuri推出的一个网站测速工具，和上面提到的几款工具不同，它是从多个地区的服务器同时发出请求，测试网站的加载速度，它不提供任何的分析功能，但是优点在于可以快速测试多个地区的加载，更适合只是测试网站速度的人使用</p><h2 id="17CE"><a href="#17CE" class="headerlink" title="17CE"></a>17CE</h2><p><img data-src="https://www.v1tx.com/wp-content/uploads/2020/05/20200506091055-1024x391.jpg" alt="国内网站测速工具17CE" loading="lazy"></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuMTdjZS5jb20v">17CE<i class="fa fa-external-link-alt"></i></span> 是一款国内的网站测速工具，它的功能类似于Sucuri Load Time Tester，只不过它的测试区域换成了国内各个地区，比如你可以测试北京、上海、广东的网站加载速度，更适合面向国内的站点使用，17CE 还提供了一个可视化的地图图表，可以非常清除的看到你的网站在国内各省市的加载速度</p><p>以上就是我们推荐的几款网站测速工具，每个产品都有自己的功能与特色，可以对比或配合使用</p><p>网站的打开速度直接影响用户体验，据悉，网站若没有在4秒内读取出来，大多数的访客就会选择离开，而且网页的载入速度也会影响网站的排名，因此，网站的打开速度极其重要。根据不同的需求去分析网站的加载速度，有助于促进网站高效运行。</p><p>\1. <span class="exturl" data-url="aHR0cDovL3Rvb2xzLnBpbmdkb20uY29tL2ZwdC8=">Pingdom Website Speed Test<i class="fa fa-external-link-alt"></i></span></p><p>Pingdom是一个免费的网站速度测试工作，不仅是看起来非常棒，而且尽可能多的呈现出你的网站的各方面信息。它可测试网站加载速度，对页面和大小进行分析。测试完成后会得到一份非常详细的测试报告，包括图片、CSS等，帮助用户找出影响网站速度的原因，并给出改善网页性能的可行性方案，对于有网站的用户来说非常实用。工具地址：<span class="exturl" data-url="aHR0cHM6Ly90b29scy5waW5nZG9tLmNvbS8=">https://tools.pingdom.com/<i class="fa fa-external-link-alt"></i></span></p><p>下图是根据Ueeshop的一个案例网站的测试，他们主营产品包装，用的是外国的服务器。图为截屏的一部分，下拉会有跟多关于网站测试的详细信息。</p><p>2.Webpagetes</p><p>Webpagetest原本是由AOL开发内部使用的工具，后来在Google Code上开源，是一款非常优秀的网页前端性能测试工具。不仅可以测试个个国家访问特定网站的加载时间，还可以测试不同的浏览器以及不同手机系统（IOS/Android）所花费的时间。工具地址：<span class="exturl" data-url="aHR0cDovL3d3dy53ZWJwYWdldGVzdC5vcmcv">http://www.webpagetest.org/<i class="fa fa-external-link-alt"></i></span></p><p>它的排版看起来会比较密集，信息量很大，需要花点时间去整理信息。测试的结果会压缩成一个小截图，点开就能看到清晰的大图，如下图。</p><p>3.PageSpeed Insigts</p><p>这是Google一款测速工具，用起来很方便。它有中文页面，结果会直接总结出测试的网站所存在的问题，还有优化的建议，指示很清晰。PageSpeed的分析基于浏览器缓存、服务器响应时间、图片等。</p><p>工具地址：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20v">https://developers.google.com<i class="fa fa-external-link-alt"></i></span></p><p>4.Sucuri Load Time Tester</p><p>这款工具也非常好用，可以很值得直观地看出测试网站在不同国家的运行速度。它会根据网速的快慢用不同的颜色表示，绿色表示畅通，没有颜色的普通数字表示一般，黄色表示中等偏慢，红色表示缓慢。值得注意的是，因为不同网站挂靠不同地区的服务器，不可能在每个国家都能打开。但下图的网站做得不错，得分都A。</p><p>工具地址：<span class="exturl" data-url="aHR0cHM6Ly9wZXJmb3JtYW5jZS5zdWN1cmkubmV0Lw==">https://performance.sucuri.net/<i class="fa fa-external-link-alt"></i></span></p><p>为了作出对比，我们还测试了其它的页面，下面是日本的一个品牌网站，得分为B，可以看到很多的黄色和红色，对比较为明显。</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>在 Windows 上搭建 VPN 服务器</title>
    <link href="https://weilining.github.io/340.html"/>
    <id>https://weilining.github.io/340.html</id>
    <published>2021-10-31T14:11:24.000Z</published>
    <updated>2021-10-31T14:11:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>Windows 自带的功能以强大和难用著称，在搭建多次失败后果断转向第三方软件。本文适用于不想装 Linux 系统又有 VPN 需求的同学，同样需要注意，本方法不太适合翻墙。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>之前在 Windows 上搞文件共享搞了半天都没成功，网上随便下了个脚本一下就成了。最近搞 VPN 也是一直不成，找个第三方软件就很轻松搭建成功。所以原生的真的不一定好。<br>本文介绍的软件是 SoftEtherVPN，虽然界面丑陋，但是免费且功能强大，算是凑合着用了。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装和搭建之类的教程大家去网上找吧，一搜一大片，本篇不继续造轮子了。推荐几篇博文：<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuc29mdGV0aGVyLm9yZy80LWRvY3MvMi1ob3d0bw==">Tutorials - SoftEther VPN Project<i class="fa fa-external-link-alt"></i></span><br>其实软件安装完成后是有中文引导的啦，如果不是高级 VPN 需求按照软件的指引来就可以了。</p><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><p>这才是本文的精华！！<br><span class="exturl" data-url="aHR0cDovL3d3dy5zb2Z0ZXRoZXItZG93bmxvYWQuY29tL2NuLmFzcHg/cHJvZHVjdD1zb2Z0ZXRoZXI=">软件下载地址<i class="fa fa-external-link-alt"></i></span><br>选择软件主流电脑这样选就可以啦。</p><p><img data-src="/340/1*CBIpk_Ug_l6WjYAALBT5ww.png" alt="img" loading="lazy"></p><p><img data-src="/340/1*CBIpk_Ug_l6WjYAALBT5ww-20211031221230585.png" alt="img" loading="lazy"></p><p>安装时注意引导程序似乎不会引导本地网桥设置，如果你用的是本机做 VPN 服务器的话需要对本地网桥进行设置。让 VPN 的虚拟网卡和服务器的网卡桥接。这样你就能访问 VPN 服务器所在的外网了。</p><p>动态 DNS 针对没有固定 IP 的服务器，开启动态 DNS 服务会给你分配一个SoftEther.ent的二级域名，这样就不需要花钱申请域名或静态 IP 了。需要注意的是，介绍中的 NAT 穿透功能有很大局限性，你可以当这个穿透功能不存在。</p><p>VPN Azure 功能是真正实现内网穿透了的，最牛逼的在于他免费！！缺点是只支持 SSTP 协议，苹果家族的就很难使用了。iOS 端目前是不行的，macOS 上可以用 sstp-client 命令行工具或 isstp 图形界面来连接。<br>sstp-client:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install sstp-client</span><br></pre></td></tr></table></figure><p>isstp <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXhvdC5vcmcvMjAxNS8wMy8wMy9pc3N0cC1hLXNzdHAtY2xpZW50LWZvci1tYWMtb3N4Lw==">下载地址<i class="fa fa-external-link-alt"></i></span></p><p>默认的 VPN 服务器搭建好后只能使用 SoftEther VPN Client 连接，如果要让 iOS 等移动端连接的话，需要打开 IPsec / L2TP 设置。</p><p>另外如果要远程连接需要在管理用户选项中添加用户，这里面功能还是蛮强的。</p><p>如果想让 iOS 设备登录处于内网中的 VPN 服务器，可以试试神器 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycA==">frp<i class="fa fa-external-link-alt"></i></span>。我稍后会出一篇博文将如何使用 frp 访问内网 VPN 服务器。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc29mdGV0aGVyLWRvd25sb2FkLmNvbS9jbi5hc3B4P3Byb2R1Y3Q9c29mdGV0aGVy">SoftEther 下载中心 (softether-download.com)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL0BpbnZpc3ByaW50cy8lRTUlOUMlQTgtd2luZG93cy0lRTQlQjglOEElRTYlOTAlQUQlRTUlQkIlQkEtdnBuLSVFNiU5QyU4RCVFNSU4QSVBMSVFNSU5OSVBOC0yZjJlMjU1NTQxOTY=">在 Windows 上搭建 VPN 服务器 | by invisprints | Medium<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Windows下如何禁用数字签名</title>
    <link href="https://weilining.github.io/339.html"/>
    <id>https://weilining.github.io/339.html</id>
    <published>2021-10-31T13:52:24.000Z</published>
    <updated>2021-10-31T13:52:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>win7旗舰sp1+报错</p><p><img data-src="/339/image-20211031215424433.png" alt="image-20211031215424433" loading="lazy"></p><p><img data-src="/339/image-20211031215433930.png" alt="image-20211031215433930" loading="lazy"></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>管理员运行<code>CMD</code>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit.exe -set loadoptions DDISABLE_INTEGRITY_CHECKS</span><br></pre></td></tr></table></figure><p><img data-src="/339/image-20211031220803550.png" alt="image-20211031220803550" loading="lazy"></p><h3 id="重装软件"><a href="#重装软件" class="headerlink" title="重装软件"></a>重装软件</h3><p>顺利安装无提醒</p><h2 id="详细方法"><a href="#详细方法" class="headerlink" title="详细方法"></a>详细方法</h2><p>发现Windows操作系统在启用数字签名的情况下部分外接设备的驱动无法安装，设备无法使用，可以考虑通过禁用数字签名的方式来让我们的驱动能够安装成功</p><p>Windows+x，以管理员打开命令提示符（cmd），执行以下命令，看到提示操作成功完成，重新启动电脑，即永久关闭了数字签名验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit.exe -set loadoptions DDISABLE_INTEGRITY_CHECKS</span><br></pre></td></tr></table></figure><p><img data-src="/339/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3ZDE5OTI=,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述" loading="lazy"><br>如果想再次打开数字签名，运行以下命令并重启电脑即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit.exe -set loadoptions ENABLE_INTEGRITY_CHECKS</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>苹果产品适用人群</title>
    <link href="https://weilining.github.io/338.html"/>
    <id>https://weilining.github.io/338.html</id>
    <published>2021-10-31T06:59:01.000Z</published>
    <updated>2021-11-02T06:59:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>声乐，剪辑师，视频制作者，设计师，装13，写java的。声乐Windows适配一坨屎，反过来工业软件苹果基本0，传统工科非计算机买苹果属于折磨，安卓全家桶到是可以，cad苹果没法用，码农要什么视频剪辑，脑子坏了，公司配苹果是为了展示优越啊，我给每个人配苹果，代表我比其他人优越，因为他没有性价比，因为他昂贵，笔记本我更喜欢ThinkPad稳重键盘手感好、轻。一代人品，二代技术，三代艺术。学生时代更需要苹果了，这对于择偶权是很大的帮助，就像孔雀为了求偶，会开屏，这是展示自己的实力，我觉得很有刚需，学生最应该就是买苹果，对于普遍收入较低的我国而言，苹果这种动不动能用的就上万的东西，确实就跟孔雀开屏一般，我国人均差了三倍吧，人家眼里很正常，实际在我们眼里差距不小。</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>查询一个域名的黑历史</title>
    <link href="https://weilining.github.io/337.html"/>
    <id>https://weilining.github.io/337.html</id>
    <published>2021-10-31T05:14:56.000Z</published>
    <updated>2021-10-31T05:14:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cDovL3dlYi5hcmNoaXZlLm9yZy8=">http://web.archive.org/<i class="fa fa-external-link-alt"></i></span><br>网站时光机，如果交易域名怕之前域名做过违法内容，可以通过这个网站查询。。。<br>刚才查询了下自己十几年前的几个域名，全部都有快照，满满的回忆。。。。</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Python3 UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 0-3: ordinal not in range(128)</title>
    <link href="https://weilining.github.io/336.html"/>
    <id>https://weilining.github.io/336.html</id>
    <published>2021-10-29T07:28:53.000Z</published>
    <updated>2021-10-29T07:28:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="/336/image-20211029153001901.png" alt="image-20211029153001901" loading="lazy"></p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line">sys.stdout = codecs.getwriter(<span class="string">&quot;utf-8&quot;</span>)(sys.stdout.detach())</span><br></pre></td></tr></table></figure><h1 id="Python3报错处理：UnicodeEncodeError-39-ascii-39-codec-can-39-t-encode-characters-in-position-0-1-ordinal-not-in-range-128"><a href="#Python3报错处理：UnicodeEncodeError-39-ascii-39-codec-can-39-t-encode-characters-in-position-0-1-ordinal-not-in-range-128" class="headerlink" title="Python3报错处理：UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 0-1: ordinal not in range(128)"></a><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbHNkYi9wLzEyNDcwNzM5Lmh0bWw=">Python3报错处理：UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 0-1: ordinal not in range(128)<i class="fa fa-external-link-alt"></i></span></h1><h2 id="一、背景说明"><a href="#一、背景说明" class="headerlink" title="一、背景说明"></a>一、背景说明</h2><p>最开始不愿意使用Python，一大原因是因为Python2默认使用ASCII编码处理中文可以说是一件痛苦的事情。仅从更换默认编码一项变换，就可以说Python3和Python2不算同一门语言。</p><p>Python3更换为默认使用Unicode（utf-8）编码，一直使用下来再没有遇到编码问题带来的困挠，似乎编码问题在Python3时代就该完全消失的。但这两天遇到了一个问题。</p><p>在调用一个库时，出现了一个异常报错类似如UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 0-1: ordinal not in range(128)，几经排查之下发现只要该库返回结果包含中文，我这边使用print()打印该结果时就会出现该异常。</p><h2 id="二、原因分析"><a href="#二、原因分析" class="headerlink" title="二、原因分析"></a>二、原因分析</h2><h3 id="2-1-数据要经过编码才能传输"><a href="#2-1-数据要经过编码才能传输" class="headerlink" title="2.1 数据要经过编码才能传输"></a>2.1 数据要经过编码才能传输</h3><p>我们知道数据在网络上传输时，需要先编码；平时我们可能并不注意，但现在要明确，编码的原因不在于网络而在于传输。</p><p>print()相当于把字符串从内存传输到了tty上，所以print()是需要encode()动作的；平时我们print()时一般都不需要encode()，只是因为当print()检测到传来的参数是不是byte类型时自动进行了编码。</p><h3 id="2-2-print-使用何种编码"><a href="#2-2-print-使用何种编码" class="headerlink" title="2.2 print()使用何种编码"></a>2.2 print()使用何种编码</h3><p>Python3默认使用的是utf-8，这可以通过sys.getdefaultencoding()进行确认。但这只是默认，当系统配置了LC_ALL、LC_CTYPE、LANG等环境变量时（三者优先级从高到低），Python3采用这些变量配置的编码；如果这些变量配置的是utf-8那Python3用的就还是utf-8，但如果不是utf-8那Python3所用的也就不是utf-8了。</p><p>当前使用的编码可通过sys.getfilesystemencoding()获取。</p><h2 id="三、场景复现"><a href="#三、场景复现" class="headerlink" title="三、场景复现"></a>三、场景复现</h2><p>为简单起见，我们这里直接以打印一个中文字符串作为演示，示例代码如下（我这里保存成test_encode.py）：</p><p><a href="javascript:void(0);"><img data-src="/336/copycode.gif" alt="复制代码" loading="lazy"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">class TestEncode():</span><br><span class="line">    def __int__(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def main_logic(self):</span><br><span class="line">        # 打印语言默认编码</span><br><span class="line">        print(f&quot;defaultencoding--&#123;sys.getdefaultencoding()&#125;&quot;)</span><br><span class="line">        # 打印系统配置的编码</span><br><span class="line">        print(f&quot;filesystemencoding--&#123;sys.getfilesystemencoding()&#125;&quot;)</span><br><span class="line"></span><br><span class="line">        # 最后尝试打印中文</span><br><span class="line">        print(&quot;中文&quot;)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    obj &#x3D; TestEncode()</span><br><span class="line">    obj.main_logic()</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img data-src="/336/copycode.gif" alt="复制代码" loading="lazy"></a></p><p>shell依次执行如下命令：</p><p><a href="javascript:void(0);"><img data-src="/336/copycode.gif" alt="复制代码" loading="lazy"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前编码情况</span><br><span class="line">locale</span><br><span class="line"># 确认在utf-8情况下打印中文无误</span><br><span class="line">python3 test_encode.py</span><br><span class="line"></span><br><span class="line"># 设置LC_TYPE，C代表ASCII</span><br><span class="line">export LC_CTYPE&#x3D;&quot;C&quot;</span><br><span class="line"># 查看当前编码情况</span><br><span class="line">locale</span><br><span class="line"># 再次运行，确认系统编码已改变，并出现编码错误</span><br><span class="line">python3 test_encode.py</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img data-src="/336/copycode.gif" alt="复制代码" loading="lazy"></a></p><p>最终结果如下，在系统编码配置为utf-8时打印正常，在系统编码改为C（即ASCII）后打印报编码异常（不过我在root用户环境修改编码一直不成功，不懂我电脑有点问题还是什么原因）：</p><p><img data-src="/336/1116722-20200312193737562-1001792774.png" alt="img" loading="lazy"></p><h2 id="四、解决办法"><a href="#四、解决办法" class="headerlink" title="四、解决办法"></a>四、解决办法</h2><p>其实追根究底，打印报错本质原因就是标准输出的编码不支持要打印的字符，对中文而言就是不是utf8（当然要说的话还可以是gbk这些），那解决办法就是去把标准输出的编码给设成utf8就完事了。</p><p>那各语言的标准输出编码由什么决定呢，一般是语言底层根据一些自己的变量去设置标准输出（python是PYTHONENCODING等几个），如果没有那就取系统的LC_ALL等配置编码的值去设置标准输出。</p><p>那基于这个事实，我们就有了以下三种解决办法。</p><p>方法一：自己临时自行修改标准输出为utf-8</p><p>这种方法最保险，能确认自己不被覆盖；但如果是一个项目那得确保在一开始设置，不然每次print前设置一次也很麻烦。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import codecs</span><br><span class="line"></span><br><span class="line">sys.stdout &#x3D; codecs.getwriter(&quot;utf-8&quot;)(sys.stdout.detach())</span><br><span class="line">print(&quot;中文&quot;)</span><br></pre></td></tr></table></figure><p>方法二：设置语言会采用的的环境变量<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy91c2luZy9jbWRsaW5lLmh0bWwjZW52dmFyLVBZVEhPTklPRU5DT0RJTkc=">PYTHONIOENCODING<i class="fa fa-external-link-alt"></i></span></p><p>这种方法按理感觉有时有bug，该环境变量在一些解析器中没被采用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PYTHONIOENCODING&#x3D;utf-8 python test_encode.py</span><br></pre></td></tr></table></figure><p>方法三：设置语言会采用的系统环境变量值为utf-8</p><p>这种方法各种语言应该都通用。</p><p>如果配了变量仍有报错，那一般都是运行的代码没正确读取变量所致，可以在脚本中获取下这变量值确认，python是os.environ。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 优先级 LC_ALL &gt; LC_*（包括决定月分显示语言的LC_TIME等）&gt; LANG</span><br><span class="line">export LC_ALL&#x3D;&quot;en_US.utf8&quot;</span><br></pre></td></tr></table></figure><p>参考：</p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RoX251bS9hcnRpY2xlL2RldGFpbHMvODA2ODUzODk=">https://blog.csdn.net/th_num/article/details/80685389<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly90aW1vdGh5cWl1LmNvbS9hcmNoaXZlcy9zdXJyb2dhdGVlc2NhcGUtaW4tcHl0aG9uLTMv">https://timothyqiu.com/archives/surrogateescape-in-python-3/<i class="fa fa-external-link-alt"></i></span> </p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Freenom 代码申请域名</title>
    <link href="https://weilining.github.io/335.html"/>
    <id>https://weilining.github.io/335.html</id>
    <published>2021-10-29T06:37:29.000Z</published>
    <updated>2021-10-29T06:37:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3phZXZhbC9mcmVlbm9tLWRucy1tYW5hZ2UtbGlicmFyeQ==">freenom-dns-manage-library/fnml.py at master · zaeval/freenom-dns-manage-library (github.com)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JldGVwcy9mcmVlbm9tLXJlZ2lzdGVy">reteps/freenom-register: Register a freenom domain through the command line. (github.com)<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效命令获取本机外网IP</title>
    <link href="https://weilining.github.io/334.html"/>
    <id>https://weilining.github.io/334.html</id>
    <published>2021-10-29T06:32:42.000Z</published>
    <updated>2021-10-29T06:32:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="活着IP查询"><a href="#活着IP查询" class="headerlink" title="活着IP查询"></a>活着IP查询</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">curl ip.gs</span><br><span class="line">curl -4 ip.gs</span><br><span class="line">curl -6 ip.gs</span><br><span class="line">curl ip.sb</span><br><span class="line">curl -4 ip.sb</span><br><span class="line">curl -6 ip.sb</span><br><span class="line">curl cip.cc</span><br><span class="line">curl -4 cip.cc</span><br><span class="line">curl icanhazip.com</span><br><span class="line">curl -4 icanhazip.com</span><br><span class="line">curl -6 icanhazip.com</span><br><span class="line">curl api.ipify.org</span><br><span class="line">curl -4 api.ipify.org</span><br><span class="line">curl bot.whatismyipaddress.com</span><br><span class="line">curl -4 bot.whatismyipaddress.com</span><br><span class="line">curl -6 bot.whatismyipaddress.com</span><br><span class="line">curl ipinfo.io&#x2F;ip</span><br><span class="line">curl -4 ipinfo.io&#x2F;ip</span><br><span class="line">curl ipecho.net&#x2F;plain</span><br><span class="line">curl -4 ipecho.net&#x2F;plain</span><br><span class="line">curl ipinfo.io</span><br><span class="line">curl -4 ipinfo.io</span><br><span class="line">curl -4 myip.ipip.net</span><br><span class="line">curl -4 ifconfig.me</span><br><span class="line">curl -4 http:&#x2F;&#x2F;members.3322.org&#x2F;dyndns&#x2F;getip</span><br><span class="line"></span><br><span class="line">curl ifconfig.me</span><br><span class="line">curl icanhazip.com</span><br><span class="line">curl curlmyip.com</span><br><span class="line">curl ip.appspot.com</span><br><span class="line">curl ipinfo.io&#x2F;ip</span><br><span class="line">curl ipecho.net&#x2F;plain</span><br><span class="line">curl www.trackip.net&#x2F;i</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">#补充</span><br><span class="line">curl ip.sb</span><br><span class="line">curl ip.6655.com&#x2F;ip.aspx</span><br><span class="line">curl whatismyip.akamai.com</span><br><span class="line">wget -qO - ifconfig.co</span><br><span class="line">dig +short myip.opendns.com @resolver1.opendns.com</span><br><span class="line">curl ident.me</span><br><span class="line">curl v4.ident.me</span><br><span class="line">curl v6.ident.me</span><br><span class="line">curl inet-ip.info</span><br><span class="line"> </span><br><span class="line">#返回IP和地区</span><br><span class="line">curl ip.6655.com&#x2F;ip.aspx?area&#x3D;1</span><br><span class="line">curl 1111.ip138.com&#x2F;ic.asp</span><br><span class="line">curl ip.cn</span><br><span class="line">curl cip.cc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#4 Ways to Find Server Public IP Address in Linux Terminal</span><br><span class="line">#1. Using dig Utility</span><br><span class="line">dig +short myip.opendns.com @resolver1.opendns.com</span><br><span class="line">#2. Using host Utility</span><br><span class="line">host myip.opendns.com resolver1.opendns.com | grep &quot;myip.opendns.com has&quot; | awk &#39;&#123;print $4&#125;&#39;</span><br><span class="line">#3. Using wget Command Line Downloader</span><br><span class="line">wget -qO- http:&#x2F;&#x2F;ipecho.net&#x2F;plain | xargs echo</span><br><span class="line">wget -qO - icanhazip.com</span><br><span class="line">#4. Using cURL Command Line Downloader</span><br><span class="line"> curl ifconfig.co</span><br><span class="line"> curl ifconfig.me</span><br><span class="line"> curl icanhazip.com</span><br></pre></td></tr></table></figure><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">import codecs</span><br><span class="line"></span><br><span class="line">sys.stdout &#x3D; codecs.getwriter(&quot;utf-8&quot;)(sys.stdout.detach())</span><br><span class="line"></span><br><span class="line">#https:&#x2F;&#x2F;github.com&#x2F;zaeval&#x2F;freenom-dns-manage-library&#x2F;blob&#x2F;master&#x2F;fnml.py</span><br><span class="line">def get_my_public_ip():</span><br><span class="line">    ip_address &#x3D; requests.get(&quot;http:&#x2F;&#x2F;ipecho.net&#x2F;plain&quot;).text</span><br><span class="line">    print(ip_address)</span><br><span class="line">    # return ip_address</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"># 打印输出当前ip地址</span><br><span class="line">def print_my_ip():</span><br><span class="line">    api_url &#x3D; &#39;https:&#x2F;&#x2F;api.ipify.org&#x2F;&#39;</span><br><span class="line">    try:</span><br><span class="line">        res &#x3D; requests.get(url&#x3D;api_url)</span><br><span class="line">        res.raise_for_status()</span><br><span class="line">        res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">        # t&#x3D; &#39;当前使用 ip 地址：&#39; + res.text + &#39;\n&#39;</span><br><span class="line">        print(&#39;当前使用 ip 地址：&#39; + res.text)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        # text&#x3D;&#39;获取当前 ip 地址失败：&#39; + str(e) + &#39;\n&#39;</span><br><span class="line">        print(&#39;获取当前 ip 地址失败：&#39; + str(e))</span><br><span class="line">def main_handler(event, context):</span><br><span class="line">    get_my_public_ip()</span><br><span class="line">    print_my_ip()</span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    main_handler(&quot;&quot;,&quot;&quot;)</span><br></pre></td></tr></table></figure><h2 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h2><p><img data-src="/334/640-20211029160415219" alt="图片" loading="lazy"></p><p>在排除网络问题，建立新连接或配置防火墙时，了解设备的 IP 地址很重要。</p><p>IP 地址可以分为两类，公用和私有(专用)。公用 IP 是唯一的 IP 地址，可以从 Internet 访问。专用 IP 地址保留供您专用网络内部使用，而不会直接暴露给 Internet。此外，有两种类型的 IP 地址，即 IP 版本4（IPv4）和 IP 版本6（IPv6）。</p><p>本文将介绍几种确定 Linux 系统的公共 IP 地址和私有 IP 地址的不同方法。</p><h3 id="查找你的私有-IP-地址"><a href="#查找你的私有-IP-地址" class="headerlink" title="查找你的私有 IP 地址"></a>查找你的私有 IP 地址</h3><p>专用 IP 地址不可通过 Internet 路由，并且只能在本地网络内工作。通常，专用 IP 地址是由路由器分配给本地网络中的每个设备的。这为本地网络中的设备（例如电话、笔记本电脑、智能电视、打印机、媒体中心等）提供了唯一的 IP 地址。本地网络上的设备通过 NAT（网络地址转换）连接到 Internet。</p><p>以下 IPv4 地址范围是为专用网络保留的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.0.0.0&#x2F;8</span><br><span class="line">172.16.0.0&#x2F;12</span><br><span class="line">192.168.0.0&#x2F;16</span><br></pre></td></tr></table></figure><p>你可以通过使用诸如 <code>ip</code>、<code>ifconfig</code> 或 <code>hostname</code> 命令查询网络堆栈确定系统的私有 IP 地址。</p><p>在 Linux 中，用于显示和配置网络接口的标准工具是 <code>ip</code>。</p><p>要显示所有网络接口和关联的 IP 地址的列表，请键入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure><p>输出如下所示。专用 IP 地址突出显示。</p><p><img data-src="/334/640" alt="图片" loading="lazy"></p><p>你还可以使用以下命令来显示私有 IP 地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hostname -I</span><br><span class="line">$ ifconfig</span><br></pre></td></tr></table></figure><h3 id="查找你的公共-IP-地址"><a href="#查找你的公共-IP-地址" class="headerlink" title="查找你的公共 IP 地址"></a>查找你的公共 IP 地址</h3><p>公共 IP 地址是分配给网络设备的全球可路由 IP 地址，它允许直接访问 Internet。它们由其 ISP 分配给设备，并且每个设备都有唯一的公共 IP 地址。公用 IP 地址由家庭路由器、Web 服务器、邮件服务器等使用。</p><p>确定公共 IP 地址可以通过 <code>HTTP/HTTPS</code> 或 <code>DNS</code> 协议联系远程服务器，并从远程服务器响应中获取 IP 地址。</p><p>如果你是在没有 GUI 的 Linux 服务器上获取你分配到的公网 IP 地址，你可以使用命令行工具 <code>dig</code>、<code>curl</code> 和 <code>wget</code> 等来获取。</p><p>大多数 DNS 提供商（例如：OpenDNS 和 Google）都允许你查询其服务器并获取你的公共 IP 地址。你可以使用以下任何命令来获取公网 IP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ dig ANY +short @resolver2.opendns.com myip.opendns.com</span><br><span class="line">$ dig ANY +short @resolver2.opendns.com myip.opendns.com</span><br><span class="line">$ dig ANY +short @ns1-1.akamaitech.net ANY whoami.akamai.net</span><br></pre></td></tr></table></figure><p>另外，有许多在线 <code>HTTP/HTTPS</code> 服务可以返回你的公共 IP 地址。这里是其中的一些：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -s http:&#x2F;&#x2F;tnx.nl&#x2F;ip</span><br><span class="line">curl -s https:&#x2F;&#x2F;checkip.amazonaws.com</span><br><span class="line">curl -s api.infoip.io&#x2F;ip</span><br><span class="line">curl -s ip.appspot.com</span><br><span class="line">wget -O - -q https:&#x2F;&#x2F;icanhazip.com&#x2F;</span><br></pre></td></tr></table></figure><p>为了方便使用，你还可以创建一个别名来方便查询。例如，你可以在 <code>~/.bashrc</code> 和 <code>~/.zshrc</code> 中添加以下别名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias pubip&#x3D;&#39;dig ANY +short @resolver2.opendns.com myip.opendns.com&#39;</span><br></pre></td></tr></table></figure><p>现在，你要查找公共 IP 时，只需键入 <code>pubip</code> 命令即可。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>至此，我们向你展示了通过几种不同的命令和在线服来查找私有和公共 IP 地址的方法，希望对你有所帮助！</p><p><strong>命令行查询(详细):</strong></p><ul><li>UNIX/Linux:<code>#curl cip.cc</code></li><li>Windows:<code>&gt;telnet cip.cc</code></li><li> <code>&gt;ftp cip.cc</code></li></ul><p><strong>命令行查询(纯ip):</strong></p><ul><li>UNIX/Linux:<code>#curl ip.cip.cc</code></li></ul><p>几个网址也非常好记忆</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwOi8vaXAuY24v">ip.cn<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwOi8vaXBpbmZvLmlvLw==">ipinfo.io<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwOi8vY2lwLmNjLw==">cip.cc<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwOi8vaWZjb25maWcubWUv">ifconfig.me<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwOi8vbXlpcC5pcGlwLm5ldC8=">myip.ipip.net<i class="fa fa-external-link-alt"></i></span></li></ul><p><span class="exturl" data-url="aHR0cHM6Ly9pcC5jbi8=">IP.cn - IP 地址查询 | 地理位置 | 手机归属地 | DNS查询<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>可以在 GitHub.dev 做的十件有趣的事</title>
    <link href="https://weilining.github.io/333.html"/>
    <id>https://weilining.github.io/333.html</id>
    <published>2021-10-29T06:20:51.000Z</published>
    <updated>2021-10-29T06:20:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub 最近发布了 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldg==">github.dev<i class="fa fa-external-link-alt"></i></span>，它允许你在任何仓库下按下 <code>.</code> 然后直接用浏览器在 VS Code 中打开这个仓库。这个简单的操作显著的提高你在 GitHub 上阅读、编辑和分享代码的效率。包括在 iPad 上你也可以轻松的实现以上操作。</p><blockquote><p><strong>注意</strong>: 除 <code>.</code> 键，你也可以在网址栏中将域名后的 <code>.com</code> 改为 <code>.dev</code> 也可以达到同样的效果👍.</p></blockquote><p><img data-src="/333/bef1b77f914c4e79b1fbb2a2bdb840f1~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><p>然而，可能不是很明显的是 github.dev 实现了更扣人心弦的功能：一个定制和创建全新的 GitHub 原生工作流的机会。 无需依赖<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS9jb2xsZWN0aW9ucy9naXRodWItYnJvd3Nlci1leHRlbnNpb25z">浏览器扩展<i class="fa fa-external-link-alt"></i></span>或第三方服务来增强 github.com，你可以轻松地利用你喜爱的编辑器及其<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS92c2NvZGU=">丰富的生态系统<i class="fa fa-external-link-alt"></i></span>，直接增强 GitHub。 为了说明我的意思，让我们看一下 Github.dev 今天使之成为可能的 10 个例子🚀</p><h2 id="1-💄-个性化"><a href="#1-💄-个性化" class="headerlink" title="1. 💄 个性化"></a>1. 💄 个性化</h2><p>开发人员喜欢个性化他们的编辑器，以使其更高效、更符合人体工程学和视觉吸引力。由于 github.dev 基于 VS Code，因此您可以自定义键绑定、颜色主题、文件图标、片段等。 更酷的是，您可以启用 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vY29kZS52aXN1YWxzdHVkaW8uY29tL2RvY3MvZWRpdG9yL3NldHRpbmdzLXN5bmM=">设置同步<i class="fa fa-external-link-alt"></i></span> 并在 VS Code、github.dev 和 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS9mZWF0dXJlcy9jb2Rlc3BhY2Vz">Codespaces<i class="fa fa-external-link-alt"></i></span> 之间漫游你的设置。 这样，无论您在哪里阅读/编辑代码，您都会立即感到宾至如归💖</p><p><img data-src="/333/36bd8d81085f49f796e3683a6ae87666~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><h2 id="2-分享深层链接"><a href="#2-分享深层链接" class="headerlink" title="2.分享深层链接"></a>2.分享深层链接</h2><p>除了在仓库页面按下 <code>.</code>，您还可以在查看 GitHub.com 上的特定文件时按 <code>.</code>。 此外，如果您在当前打开的文件中选择一些文本，然后按 <code>.</code>，那么当 VS Code 被打开时，它将聚焦该文件并突出显示您的文本选择。 然后，您可以在浏览器中复制 URL，并将其发送给其他人，以便共享 <strong>完全相同的上下文</strong>。 这将开启全新且有趣的方式来交流代码🔥</p><p><img data-src="/333/3b02c9f93b4d418db58db44e88883612~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><blockquote><p><strong>演示：</strong> 点击 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldi9sb3N0aW50YW5nZW50L2dpdGRvYy9ibG9iL21hc3Rlci9zcmMvZXh0ZW5zaW9uLnRzJTIzTDI2LUwyNw==">这个链接<i class="fa fa-external-link-alt"></i></span> 查看 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2dpdGRvYw==">GitDoc 扩展<i class="fa fa-external-link-alt"></i></span> 如何订阅 VS Code 中的 repo 事件。</p></blockquote><h2 id="3-✅-拉取请求审查"><a href="#3-✅-拉取请求审查" class="headerlink" title="3. ✅ 拉取请求审查"></a>3. ✅ 拉取请求审查</h2><p>除了在 github.com 上的仓库或文件上点击 <code>.</code>，您还可以在查看拉取请求时按下它。 这使您能够使用丰富的多文件视图查看 PR，包括查看和回复评论、建议更改，甚至直接从编辑器批准/合并 PR 的能力。 这使得通过为开发人员提供更好的工具来减少“肤浅的评论”成为可能，而无需克隆或切换分支🙅‍♂️</p><p><img data-src="/333/cce81294938b4681a1dbdf36e8f5aeaa~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><blockquote><p><strong>演示：</strong> 单击<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldi9taWNyb3NvZnQvY29kZXRvdXIvcHVsbC8xNTM=">此链接<i class="fa fa-external-link-alt"></i></span>查看将正则表达式解析器添加到 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2NvZGV0b3Vy">CodeTour 扩展<i class="fa fa-external-link-alt"></i></span>的 PR。</p></blockquote><h2 id="4-📊-编辑图像和图表"><a href="#4-📊-编辑图像和图表" class="headerlink" title="4. 📊 编辑图像和图表"></a>4. 📊 编辑图像和图表</h2><p>除了编辑文本文件，VS Code 还允许添加扩展来<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vY29kZS52aXN1YWxzdHVkaW8uY29tL2FwaS9leHRlbnNpb24tZ3VpZGVzL2N1c3RvbS1lZGl0b3Jz">自定义编辑器<i class="fa fa-external-link-alt"></i></span>，这使您可以编辑项目中的任何文件类型。比如安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1oZWRpZXQudnNjb2RlLWRyYXdpbw==">Drawio 扩展<i class="fa fa-external-link-alt"></i></span>，就可以查看和编辑丰富的图表。</p><p><img data-src="/333/1a038e203ebe4904bd48c910e29bebf5~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><p>此外，如果您安装了 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1UeXJpYXIubHVuYS1wYWludA==">Luna Paint 扩展<i class="fa fa-external-link-alt"></i></span>，您可以编辑图像（PNG、JPG 等）。</p><p>在每种情况下，您的编辑都会自动保存，您可以通过 <code>Source Control</code> 选项卡将更改提交/推送回您的 GitHub 仓库。更酷的是，您可以与他人共享图像/图表的深层链接，只要他们安装必要的扩展程序，他们就可以通过完全相同的体验与您合作。 这有效地使 github.dev 成为存储在 GitHub 中的任何文件类型的可破解『画布』😎</p><h2 id="5-🗺-代码库演示"><a href="#5-🗺-代码库演示" class="headerlink" title="5. 🗺 代码库演示"></a>5. 🗺 代码库演示</h2><p>学习新的代码库很困难，因为通常不清楚从哪里开始，或者各种文件/文件夹如何相互关联。 使用 github.dev，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2NvZGV0b3Vy">CodeTour 扩展<i class="fa fa-external-link-alt"></i></span>，它允许您创建和播放代码库的指导演练。由于 github.dev 完全在浏览器中可用，因此团队中或社区中的任何人都可以轻松快速上手，而无需在本地安装任何东西。</p><blockquote><p><strong>演示：</strong> 打开 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldi9taWNyb3NvZnQvY29kZXRvdXI=">这个仓库<i class="fa fa-external-link-alt"></i></span> 并安装 CodeTour。 您将看到一个弹窗，询问您是否愿意参加<strong>入门</strong>之旅。</p></blockquote><h2 id="6-📕-代码片段和-Gists"><a href="#6-📕-代码片段和-Gists" class="headerlink" title="6. 📕 代码片段和 Gists"></a>6. 📕 代码片段和 Gists</h2><p><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2lzdC5naXRodWIuY29t">Gists<i class="fa fa-external-link-alt"></i></span> 是开发人员管理和共享代码片段、配置文件、注释等的流行方式。在 github.dev 中，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2dpc3RwYWQ=">GistPad 扩展<i class="fa fa-external-link-alt"></i></span> 并查看/编辑您的 Gists。这允许您跨多个存储库维护代码片段，并从桌面编辑器以及在 GitHub 上浏览/编辑代码时访问它们。</p><p><img data-src="/333/b4a359a5224340afba2bc28b1a7c65d5~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><h2 id="7-🎢-Web-游乐场和教程"><a href="#7-🎢-Web-游乐场和教程" class="headerlink" title="7. 🎢 Web 游乐场和教程"></a>7. 🎢 Web 游乐场和教程</h2><p>编码游乐场（例如 CodePen、JSFiddle）是一种流行的学习编程语言/库，然后与他人分享的方式。 使用 github.dev，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2NvZGVzd2luZw==">CodeSwing 扩展<i class="fa fa-external-link-alt"></i></span> 并开始创建 Web Playground，使用您现有的编辑器设置，并将您的文件保存回 GitHub。</p><blockquote><p><strong>演示：</strong> 打开<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldi9sb3N0aW50YW5nZW50L3JvY2stcGFwZXItc2Npc3NvcnM=">这个仓库<i class="fa fa-external-link-alt"></i></span> 并安装 CodeSwing 和 CodeTour。 几秒钟后，您将看到 Playground 环境。</p></blockquote><h2 id="8-✏️-笔记和知识库"><a href="#8-✏️-笔记和知识库" class="headerlink" title="8. ✏️ 笔记和知识库"></a>8. ✏️ 笔记和知识库</h2><p>VS Code 是世界一流的 Markdown 编辑器，因此，您可以开始使用 github.dev 来编辑和预览您的所有个人笔记/文档。 更酷的是，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL3dpa2lsZW5z">WikiLens 扩展<i class="fa fa-external-link-alt"></i></span> 以获得类似 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vcm9hbXJlc2VhcmNoLmNvbS8=">Roam<i class="fa fa-external-link-alt"></i></span> 或 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vb2JzaWRpYW4ubWQv">obsidian<i class="fa fa-external-link-alt"></i></span> 的编辑体验，来维护一个知识库，不仅能将其存储在 GitHub 中而且能从 VS Code 的扩展/个性化生态系统受益。</p><h2 id="9-📓-Jupyter-Notebooks"><a href="#9-📓-Jupyter-Notebooks" class="headerlink" title="9. 📓 Jupyter Notebooks"></a>9. 📓 Jupyter Notebooks</h2><p>除了编码 playgrounds 之外，另一种流行的学习和共享代码的方式是 Jupyter 笔记本。 如果你在 github.dev 中打开一个 <code>.ipynb</code> 文件，你可以立即查看笔记本的单元格和缓存输出。 更好的是，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1qb3ljZWVyaGwudnNjb2RlLXB5b2RpZGU=">Pyodide 扩展<i class="fa fa-external-link-alt"></i></span>，以便实际运行 Python 代码，且是完全在您的浏览器中运行的！</p><h2 id="10-🛠-创建您自己的扩展！"><a href="#10-🛠-创建您自己的扩展！" class="headerlink" title="10. 🛠 创建您自己的扩展！"></a>10. 🛠 创建您自己的扩展！</h2><p>您可能已经注意到，上面的大多数功能都是通过扩展启用的，这是别人创建并发布到市场的。由于 VS Code <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vY29kZS52aXN1YWxzdHVkaW8uY29tL2FwaS9yZWZlcmVuY2VzL3ZzY29kZS1hcGk=">完全可扩展<i class="fa fa-external-link-alt"></i></span>，使用简单的 JavaScript API，您可以创建自己的扩展，不仅支持 VS Code 桌面，而且还支持 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvdnNjb2RlLWRvY3MvYmxvYi92bmV4dC9hcGkvZXh0ZW5zaW9uLWd1aWRlcy93ZWItZXh0ZW5zaW9ucy5tZA==">github.dev<i class="fa fa-external-link-alt"></i></span>。所以，如果你有一个很棒的想法，关于如何使在 GitHub 上编码更高效和有趣，那么你现在已经拥有起步所需的一切🏃</p><h2 id="🔮-期待"><a href="#🔮-期待" class="headerlink" title="🔮 期待"></a>🔮 期待</h2><p>虽然 GitHub.dev 已经有大量用法，但它仍处于早期阶段，因此随着生态系统的不断创新，这是一个值得关注的领域。例如，我很高兴看到这样一个激动人心的时刻🙌 ，那就是<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL3ZzbHM=">实时协作<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1HaXRIdWIuY2xhc3Nyb29t">课堂作业<i class="fa fa-external-link-alt"></i></span> 和 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1tYXJwLXRlYW0ubWFycC12c2NvZGU=">在线演讲<i class="fa fa-external-link-alt"></i></span> 可以很快成为能在浏览器中执行的并建立在 GitHub 存储库之上的场景示例💯</p><blockquote><p>如果发现译文存在错误或其他需要改进的地方，欢迎到 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS94aXR1L2dvbGQtbWluZXI=">掘金翻译计划<i class="fa fa-external-link-alt"></i></span> 对译文进行修改并 PR，也可获得相应奖励积分。文章开头的 <strong>本文永久链接</strong> 即为本文在 GitHub 上的 MarkDown 链接。</p></blockquote>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Github Action 的简单使用</title>
    <link href="https://weilining.github.io/332.html"/>
    <id>https://weilining.github.io/332.html</id>
    <published>2021-10-29T04:14:35.000Z</published>
    <updated>2021-10-29T04:14:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub Action 是 GitHub 于 2019 年 11 月正式推出的一个 CI CD 服务。</p><h3 id="CI-CD-的一些解释"><a href="#CI-CD-的一些解释" class="headerlink" title="CI/CD 的一些解释"></a>CI/CD 的一些解释</h3><p>CI/CD 是什么？如何理解持续集成、持续交付和持续部署。</p><p>CI/CD 是一种通过在应用开发阶段引入自动化来频繁向客户交付应用的方法。CI/CD 的核心概念是持续集成、持续交付和持续部署。作为一个面向开发和运营团队的解决方案，CI/CD 主要针对在集成新代码时所引发的问题（亦称：“集成地狱”）。</p><p>具体而言，CI/CD 可让持续自动化和持续监控贯穿于应用的整个生命周期（从集成和测试阶段，到交付和部署）。这些关联的事务通常被统称为“CI/CD 管道”，由开发和运维团队以敏捷方式协同支持。</p><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>如果你仅仅是想体验一下 Github Action 那么阅读下面的步骤就可以（可能需要对GitHub有些基础）。</p><p>强烈建议访问官网了解详情 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZG9jcy5naXRodWIuY29tL2NuL2FjdGlvbnM=">官方文档<i class="fa fa-external-link-alt"></i></span></p><h3 id="部署python的定时任务"><a href="#部署python的定时任务" class="headerlink" title="部署python的定时任务"></a>部署python的定时任务</h3><h4 id="1-GitHub中创建项目"><a href="#1-GitHub中创建项目" class="headerlink" title="1. GitHub中创建项目"></a>1. GitHub中创建项目</h4><p>创建步骤可以自行搜索，没有特殊的要求</p><h5 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h5><p>这里注意 <code>.github/workflows/run.yaml</code> 该文件为具体任务的定义 包含 <strong>环境 任务 触发条件</strong> 等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">├── .github</span><br><span class="line">    ├── workflows</span><br><span class="line">        ├── run.yaml</span><br><span class="line">├── README.md</span><br><span class="line">├── main.py</span><br><span class="line">├── requeirments.txt</span><br><span class="line"></span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h5 id="主要文件内容"><a href="#主要文件内容" class="headerlink" title="主要文件内容"></a>主要文件内容</h5><ol><li>run.yaml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Python</span> <span class="string">package</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="number">00</span> <span class="number">02</span> <span class="string">*</span> <span class="string">*</span> <span class="string">*</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Python</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-python@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">python-version:</span> <span class="string">&#x27;3.x&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">python</span> <span class="string">-m</span> <span class="string">pip</span> <span class="string">install</span> <span class="string">--upgrade</span> <span class="string">pip</span></span><br><span class="line">          <span class="string">pip</span> <span class="string">install</span> <span class="string">-r</span> <span class="string">requeirments.txt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">execute</span> <span class="string">py</span> <span class="string">script</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">FM_USERNAME:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.USERNAME</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">python</span> <span class="string">main.py</span></span><br><span class="line"></span><br><span class="line"><span class="string">复制代码</span></span><br></pre></td></tr></table></figure><ol><li>main.py</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    print(<span class="string">&quot;执行github action&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h4 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2. 配置环境变量"></a>2. 配置环境变量</h4><p>如果需要配置，没有则跳过</p><p><img data-src="/332/90cb8c091e1d457ca5c93f791109378f~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h4 id="3-上传代码-查看-actions"><a href="#3-上传代码-查看-actions" class="headerlink" title="3. 上传代码 查看 actions"></a>3. 上传代码 查看 actions</h4><p>因为我在 <code>.github/workflows/run.yaml</code> 文件中配置 main 分支推送的时候会执行任务，这里会自动执行</p><p><img data-src="/332/e2b2a29d7f3e47bc8c7ad761a257e5f4~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h4 id="4-查看执行结果"><a href="#4-查看执行结果" class="headerlink" title="4. 查看执行结果"></a>4. 查看执行结果</h4><p>这里可以点进每一步查看每一步的执行情况；如果有错误会显示具体的错误内容</p><p><img data-src="/332/dad38587450342f2b9d85ad11aef9958~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h4 id="5-我的执行结果"><a href="#5-我的执行结果" class="headerlink" title="5. 我的执行结果"></a>5. 我的执行结果</h4><p>因为我配置每天2点自动执行任务，所以我这边会有很多执行任务</p><p><img data-src="/332/aa383d9cf6bf4247bc689c8743c8a3b0~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h4 id="6-一些解释"><a href="#6-一些解释" class="headerlink" title="6. 一些解释"></a>6. 一些解释</h4><ul><li><strong>name :</strong> job 的名称 （后续在GitHub的Actions会显示）</li><li><strong>on.push.branches :</strong> 在代码合并/推送到此分支后自动执行当前job</li><li><strong>on.schedule :</strong> 计划任务 符合cron的表达式</li><li><strong>jobs.build.runs-on :</strong>  运行环境的选择</li><li><strong>jobs.build.steps :</strong>  job的具体执行步骤，可以定义多个步骤按顺序执行</li><li><strong>jobs.build.steps :</strong>  job的具体执行步骤，可以定义多个步骤按顺序执行</li><li><strong>jobs.build.steps.env :</strong>  获取配置的环境变量对应的为 github.settings.secrets (注意不是 environment secrets )</li></ul><p>详细的配置查看 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZG9jcy5naXRodWIuY29tL2NuL2FjdGlvbnMvcmVmZXJlbmNlL3dvcmtmbG93LXN5bnRheC1mb3ItZ2l0aHViLWFjdGlvbnM=">GitHub Actions 的工作流程语法 <i class="fa fa-external-link-alt"></i></span> 这里只展示常见的解释</p><h4 id="7-问题思考"><a href="#7-问题思考" class="headerlink" title="7. 问题思考"></a>7. 问题思考</h4><ol><li><p>关于 Environment secrets 与 Repository secrets 的区别 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzY1OTU3MTk3L2RpZmZlcmVuY2UtYmV0d2Vlbi1naXRodWJzLWVudmlyb25tZW50LWFuZC1yZXBvc2l0b3J5LXNlY3JldHM=">参考链接<i class="fa fa-external-link-alt"></i></span></p><p>简单的说 Repository secrets 是在任何地方都可以使用的变量 Environment secrets 需要配合 yaml 文件中的 environment 变量具体使用。</p></li><li><p>聪明的你是不是觉得可以想到白嫖，对此关于使用计费问题可以 查看 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZG9jcy5naXRodWIuY29tL2NuL2FjdGlvbnMvcmVmZXJlbmNlL3VzYWdlLWxpbWl0cy1iaWxsaW5nLWFuZC1hZG1pbmlzdHJhdGlvbg==">关于 GitHub Actions 的计费<i class="fa fa-external-link-alt"></i></span></p><p>下图为部分限制内容 （如果你有合适的搭配方式欢迎推荐给我）</p></li></ol><p><img data-src="/332/83cdba3144ea4ad3a80e8513b035fcb9~tplv-k3u1fbpfcp-watermark.awebp" alt="关于Github Action的使用限制" loading="lazy"></p><ol><li><p>cron的表达式 的时间问题</p><p>因为 Github Action标准的时间为UTC时间，如果需要符合北京时间需要手动处理对应的时间。</p></li></ol><h3 id="其他可能的用处"><a href="#其他可能的用处" class="headerlink" title="其他可能的用处"></a>其他可能的用处</h3><ul><li>将静态网页发布到 GitHub Pages</li><li>自动部署你的代码到服务器</li><li>执行定时任务获取天气信息</li><li>执行定时任务给你的小宝贝聊天</li><li>爬虫执行签到以及任务打卡</li></ul><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZG9jcy5naXRodWIuY29tL2NuL2FjdGlvbnM=">官方文档<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS9tYXJrZXRwbGFjZT90eXBlPWFjdGlvbnM=">GitHub Action 官方市场<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vd3d3LnJ1YW55aWZlbmcuY29tL2Jsb2cvMjAxOS8wOS9nZXR0aW5nLXN0YXJ0ZWQtd2l0aC1naXRodWItYWN0aW9ucy5odG1s">GitHub Actions 入门教程 阮一峰<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效 Freenom 账号申请域名注册</title>
    <link href="https://weilining.github.io/331.html"/>
    <id>https://weilining.github.io/331.html</id>
    <published>2021-10-29T04:12:23.000Z</published>
    <updated>2021-10-29T04:12:23.000Z</updated>
    
    <content type="html"><![CDATA[<p> 域名简介</p><blockquote><p>域名（英语：Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）。由于IP地址具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过网域名称系统（DNS，Domain Name System）来将域名和IP地址相互映射，使人更方便地访问互联网，而不用去记住能够被机器直接读取的IP地址数串。</p></blockquote><p>国内比较有名的域名代理商有阿里云、腾讯云等，这些代理商会提供较为全面的域名服务，包括域名注册、续费、HTTPS证书、DNS 解析、全站加速等。优点就是一应俱全，开箱即用。缺点就是收费且申请麻烦。今天就介绍一款国外免费域名提供商 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vd3d3LmZyZWVub20uY29tLw=="> Freenom <i class="fa fa-external-link-alt"></i></span>。</p><h2 id="申请你的域名"><a href="#申请你的域名" class="headerlink" title="申请你的域名"></a>申请你的域名</h2><p><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vd3d3LmZyZWVub20uY29tLw=="> Freenom <i class="fa fa-external-link-alt"></i></span></p><blockquote><p>Freenom 是世界上第一个也是唯一的免费域名提供商。 我们的使命是帮助各国人在网上发展自己的数字经济。 免费域名的工作机制与任何其他域名完全一致。 你可以用它作为您的网站，博客，电子邮件帐户或其他！ 您可以选择运行免费域名与网址转发，免费 Freenom DNS服务或您自己的 DNS（域名服务器）。</p></blockquote><h3 id="1-查询可用域名"><a href="#1-查询可用域名" class="headerlink" title="1. 查询可用域名"></a>1. 查询可用域名</h3><p>打开官网后输入自己想要的域名，例如我输入的是 abandon ，然后会提示出后缀 tk、ml、ga、cf、gq这五个后缀的域名是免费的，这里显示只有 ml、cf、gq 可用。</p><p><img data-src="/331/cc6eb509cc9e4814870d56d0c9eeae30~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h3 id="2-注册账号"><a href="#2-注册账号" class="headerlink" title="2. 注册账号"></a>2. 注册账号</h3><p>由于某些原因的限制 Freenom 对于用户并不友好。没有注册用户的入口，不是用户就这册不了新的域名。恶性循环没有结果。所有因为没有明确的注册入口，这里采用特殊手段注册账号。</p><p><img data-src="/331/2c5b2d739c9a4fd48b6916ef9de4f4ce~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p><img data-src="/331/c39ed4ac9fd04a568c5cb047cc14a90d~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>在此处输入邮箱，验证成功后会给你邮箱发送一封邮件，点击跳转之后就会让你完善用户信息了。</p><p><img data-src="/331/1e48482ccf694daf8f7c7ef37612c7fa~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>至此你已经有了账号，那么就可以为所欲了。</p><h3 id="3-申请域名"><a href="#3-申请域名" class="headerlink" title="3. 申请域名"></a>3. 申请域名</h3><p>此步骤是在你登录成功之后才能正常操作</p><p><img data-src="/331/f66dbae6a3f444f48fa371c39f78f758~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>两次继续操作你会收获一个错误</p><p><img data-src="/331/8b5060fb16834f9ebee91ea4058f1ae8~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>此时需要修改你的个人信息，修改地址与国家</p><p><img data-src="/331/c2b55074b1974b3590353311b31d664c~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>然后再来一次就可以申请完成了。</p><p><img data-src="/331/4d116efa3219400685960e6152d07b0b~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>点击我的域名就可以查看到刚刚申请到的域名了。</p><p><img data-src="/331/7f8723488d6f42a089c6a31c35b41819~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h3 id="4-配置域名解析"><a href="#4-配置域名解析" class="headerlink" title="4. 配置域名解析"></a>4. 配置域名解析</h3><p>如果自己有服务器而去绑定了公网域名，那么就可以将此域名映射到你的主机上了。这里只要输入你对应的服务器对应的公网 IP 就可以自动解析域名了（注意配置生效需要时间请耐心等待，短则几个小时长则一天）。</p><p><img data-src="/331/1699a8b5726a4ebe962f9f59b8bd872b~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h3 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5. 注意事项"></a>5. 注意事项</h3><ul><li>很多域名在登录的状态才会显示可用，所以最好是在登录状态下选择域名。</li><li>域名默认是3个月的免费使用时间，但是你可以直接勾选12个月的免费使用。</li><li>最好设置浏览器的语言为英文，全程在英文页面操作。</li><li>如果卡在某一步没有反应，你需要查看是否是网络问题。</li></ul><p><strong>在正常提交注册域名最后一步的时候，因网页代码中有一步会用到 <code>google/grecaptcha</code> <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY24vcmVjYXB0Y2hhLz9obD16aC1jbg==">谷歌人机身份验证<i class="fa fa-external-link-alt"></i></span>。所以正常情况下是访问不了，这里需要配置网络，因为提交注册的时候会校验 IP 地址，所以真实的注册地址依旧是访问者真实的 IP 。</strong></p><h2 id="域名能干嘛"><a href="#域名能干嘛" class="headerlink" title="域名能干嘛"></a>域名能干嘛</h2><ul><li>可以用来提升你网络的可靠性，emm ～～～。</li><li>可以为你的博客提供一个专属域名，方便记忆。</li><li>域名是一个投资，未来的某位大佬看上你的域名，那么你就直接走向人生巅峰。</li></ul>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
</feed>
