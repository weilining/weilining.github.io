<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ln&#39;s Blog</title>
  
  <subtitle>有朋自远方来，不亦乐乎</subtitle>
  <link href="https://weilining.github.io/atom.xml" rel="self"/>
  
  <link href="https://weilining.github.io/"/>
  <updated>2020-12-21T05:02:20.000Z</updated>
  <id>https://weilining.github.io/</id>
  
  <author>
    <name>Lining Wei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>/ 和/* 和/**的区别</title>
    <link href="https://weilining.github.io/225.html"/>
    <id>https://weilining.github.io/225.html</id>
    <published>2020-12-21T05:02:20.000Z</published>
    <updated>2020-12-21T05:02:20.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>一、亲测 /和/*区别</p><p>在springboot中建了一个过滤器，测试</p><p><img data-src="/225/1001313-20190212212942450-433613516.png" alt="img" loading="lazy"></p><p>当请求为/user/login的时候可以被拦截，当为/page/login.html页面的时候不拦截</p><p><img data-src="/225/1001313-20190212213608480-1119617961.png" alt="img" loading="lazy"></p><p> 当请求为/user/login的时候可以被拦截，当为/page/login.html页面的时候也会被拦截</p><p>所以综上，/不会拦截页面，只会拦截路径。</p><p>/* 会路径和页面</p><p>二、/* 和 /**</p><p>/* 是拦截所有的文件夹，不包含子文件夹<br>/** 是拦截所有的文件夹及里面的子文件夹</p><p>相当于/*只有后面一级</p><p>/** 可以包含多级 </p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>图标库使用</title>
    <link href="https://weilining.github.io/224.html"/>
    <id>https://weilining.github.io/224.html</id>
    <published>2020-12-21T03:29:55.000Z</published>
    <updated>2020-12-21T03:29:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="https://fontawesome.com/icons?d=gallery">https://fontawesome.com/icons?d=gallery</a></p><p>镜像<a href="https://fontawesome.dashgame.com/">https://fontawesome.dashgame.com/</a></p><a id="more"></a><h2 id="引入库"><a href="#引入库" class="headerlink" title="引入库"></a>引入库</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;print&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;this.media=&#x27;all&#x27;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-qq&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>博客点击qq跳转聊天教程</title>
    <link href="https://weilining.github.io/223.html"/>
    <id>https://weilining.github.io/223.html</id>
    <published>2020-12-21T03:03:15.000Z</published>
    <updated>2020-12-21T03:03:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="申请"><a href="#申请" class="headerlink" title="申请"></a>申请</h2><p>进入腾讯互动状态代码生成页面<a href="http://wp.qq.com/%E5%BC%80%E5%A7%8B%E7%94%9F%E6%88%90%E7%9A%84%E8%AE%BE%E7%BD%AE%EF%BC%9A">http://wp.qq.com/开始生成的设置：</a></p><a id="more"></a><h2 id="获取代码"><a href="#获取代码" class="headerlink" title="获取代码"></a>获取代码</h2><p>点击<code>推广工具</code>并强制刷新下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a target&#x3D;&quot;_blank&quot; href&#x3D;&quot;http:&#x2F;&#x2F;wpa.qq.com&#x2F;msgrd?v&#x3D;3&amp;uin&#x3D;157668997&amp;site&#x3D;qq&amp;menu&#x3D;yes&quot;&gt;&lt;img border&#x3D;&quot;0&quot; src&#x3D;&quot;http:&#x2F;&#x2F;wpa.qq.com&#x2F;pa?p&#x3D;2:157668997:41&quot; alt&#x3D;&quot;点击这里给我发消息&quot; title&#x3D;&quot;点击这里给我发消息&quot;&#x2F;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>只需要<code>href</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;wpa.qq.com&#x2F;msgrd?v&#x3D;3&amp;uin&#x3D;157668997&amp;site&#x3D;qq&amp;menu&#x3D;yes</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>浅谈package.json中dependencies和devDependencies区别</title>
    <link href="https://weilining.github.io/222.html"/>
    <id>https://weilining.github.io/222.html</id>
    <published>2020-12-20T14:54:18.000Z</published>
    <updated>2020-12-20T14:54:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="dependencies："><a href="#dependencies：" class="headerlink" title="dependencies："></a>dependencies：</h2><p>应用能够正常运行依赖的包。这种 dependencies 是最常见的，用户在使用 npm install 安装你的包时会自动安装这些依赖。用户发布环境，依赖的包不仅开发环境能够使用，生产环境也能使用。</p><p>举例：element-ui，vue等。<br>npm i 【包名】–save/-s</p><a id="more"></a><h2 id="devDependencies："><a href="#devDependencies：" class="headerlink" title="devDependencies："></a>devDependencies：</h2><p>开发应用时所依赖的工具包。通常是一些开发、测试、打包工具，例如 webpack、ESLint、Mocha。应用正常运行并不依赖于这些包，用户在使用 npm install 安装你的包时也不会安装这些依赖。</p><p>举例：less-loader,webpack,sass-loader等。</p><p>npm i 【包名】–save dev/-d</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>npm的代替品cnpm</title>
    <link href="https://weilining.github.io/221.html"/>
    <id>https://weilining.github.io/221.html</id>
    <published>2020-12-20T14:45:25.000Z</published>
    <updated>2020-12-20T14:45:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">https://developer.aliyun.com/mirror/NPM?from=tnpm</a></p><a id="more"></a><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><p>win&amp;&amp;Linux</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>Mac</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>谷歌的镜像站</title>
    <link href="https://weilining.github.io/220.html"/>
    <id>https://weilining.github.io/220.html</id>
    <published>2020-12-20T13:26:42.000Z</published>
    <updated>2020-12-20T13:26:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="欢迎访问google镜像"><a href="#欢迎访问google镜像" class="headerlink" title="欢迎访问google镜像"></a>欢迎访问google镜像</h2><a id="more"></a><p> google.iapk.cc</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>Google Fonts 的好朋友dogedoge</title>
    <link href="https://weilining.github.io/219.html"/>
    <id>https://weilining.github.io/219.html</id>
    <published>2020-12-20T13:11:50.000Z</published>
    <updated>2020-12-20T13:11:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="谷歌404"><a href="#谷歌404" class="headerlink" title="谷歌404"></a>谷歌404</h2><p><a href="https://fonts.googleapis.com/">https://fonts.googleapis.com</a></p><a id="more"></a><h2 id="谷歌字体镜像站多吉"><a href="#谷歌字体镜像站多吉" class="headerlink" title="谷歌字体镜像站多吉"></a>谷歌字体镜像站多吉</h2><p><a href="https://fonts.dogedoge.com/">https://fonts.dogedoge.com</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>网页性能测试工具推荐</title>
    <link href="https://weilining.github.io/218.html"/>
    <id>https://weilining.github.io/218.html</id>
    <published>2020-12-18T09:12:12.000Z</published>
    <updated>2020-12-18T09:12:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在线"><a href="#在线" class="headerlink" title="在线"></a>在线</h2><p><a href="https://www.aicesu.cn/">https://www.aicesu.cn/</a></p><p><a href="https://developers.google.com/speed/pagespeed/insights/">https://developers.google.com/speed/pagespeed/insights/</a></p><a id="more"></a><h2 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h2><p>chrome的lighthouse</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>在线设计html ui推荐</title>
    <link href="https://weilining.github.io/217.html"/>
    <id>https://weilining.github.io/217.html</id>
    <published>2020-12-17T07:37:20.000Z</published>
    <updated>2020-12-17T07:37:20.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p> <a href="https://zijieke.com/semantic-ui/">https://zijieke.com/semantic-ui/</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hexo不渲染.md或者.html</title>
    <link href="https://weilining.github.io/216.html"/>
    <id>https://weilining.github.io/216.html</id>
    <published>2020-12-17T03:34:09.000Z</published>
    <updated>2020-12-17T03:34:09.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p> 我们知道，在 source 文件夹下的所有 md 文件或者 html 文件都会被渲染，有时候我们不想这些文件被渲染怎么办？比如很多时候我们想要写一个 README.md 或者一些自定义的页面。比如百度或者谷歌在验证站长权限的时候，通常都会要求在主目录下添加一个 html 文件。</p><h3 id="不渲染-md-文件"><a href="#不渲染-md-文件" class="headerlink" title="不渲染 md 文件"></a>不渲染 md 文件</h3><p>使用上面的办法虽然不会渲染 md 文件，但是还是将 md 文件转化成了 html 文件，如果想保留原 md 文件后缀要怎么做呢？这就需要在 站点配置文件 _config.yml 中配置，找到 skip_render 参数，开始匹配的位置是基于你的 source_dir 的，一般来说，是你的 source 文件夹下。下面我分别列举几种常见的情况进行说明：</p><ol><li>skip_render: test/* 单个文件夹下全部文件</li><li>skip_render: test/*.md 单个文件夹下指定类型文件</li><li>skip_render: test/** 单个文件夹下全部文件以及子目录</li><li>多个文件夹以及各种复杂情况：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render: README.md</span><br><span class="line">  - &#96;test1&#x2F;*.html&#96;</span><br><span class="line">  - &#96;test2&#x2F;**&#96;123</span><br></pre></td></tr></table></figure><h3 id="不渲染-html-文件"><a href="#不渲染-html-文件" class="headerlink" title="不渲染 html 文件"></a>不渲染 html 文件</h3><p>在不想被渲染的 html 文件最上面添加如下代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>hexo的md文件中使用html、css、javascript</title>
    <link href="https://weilining.github.io/215.html"/>
    <id>https://weilining.github.io/215.html</id>
    <published>2020-12-17T03:32:31.000Z</published>
    <updated>2020-12-17T03:32:31.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>有时候想写点前端小demo，因为代码量实在是太少了，几行css、几行javascript；不想放在codepen作为引用，也不想单独做一个页面放到主题的source文件夹下，于是就有了在md文件里直接写的想法。</p><h2 id="开始折腾"><a href="#开始折腾" class="headerlink" title="开始折腾"></a>开始折腾</h2><h3 id="1、直接插入"><a href="#1、直接插入" class="headerlink" title="1、直接插入"></a>1、直接插入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正文</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.styled-div&#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background: yellow;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;styled-div&quot;&gt;我是div&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(function()&#123;</span><br><span class="line">console.log(&#39;我是md是的javascript&#39;);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>我是div</p><p>html和javascript成功了，但是style没有成功……。</p><h3 id="2、把css放到行内"><a href="#2、把css放到行内" class="headerlink" title="2、把css放到行内"></a>2、把css放到行内</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正文</span><br><span class="line">&lt;div style&#x3D;&quot;width: 100px;height: 100px;background: yellow;&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>我是div</p><p>样式放在行内是可以的。怎么让放在style里的样式也有效呢？</p><h3 id="3、使用raw"><a href="#3、使用raw" class="headerlink" title="3、使用raw:"></a>3、使用raw:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正文</span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.styled-div1&#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background: yellow;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;styled-div-other&quot;&gt;我是div&lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>我是div</p><p>style里的样式有效了</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><blockquote><p>html，js，css 都应该写在raw标签里。</p></blockquote><p>方法一、二中，好像是直接在md里写html和javascript都行，但当这篇文章写到第三种方法的时候，js报错了，并且页面布局也有点乱。用web开发都工具看了下，<code>&lt;div class=&quot;styled-div&quot;&gt;我是div&lt;/div&gt;</code>和<code>&lt;script&gt;&lt;/script&gt;</code>中都生成了很多’<br>‘标签。</p><p>所以要在md中杂点其它东西。放在raw标签里才是正确的：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正文</span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.styled-div-right&#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background: yellow;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;styled-div-right&quot;&gt;我是div&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(function()&#123;</span><br><span class="line">console.log(&#39;我才是正确的md里的javascript&#39;);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>我是正确的</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>在markdown里写html的东西有点不合理，取决于各自吧。介绍下另外两种方式：</p><ul><li>在source文件下创建单独html页面</li><li>内嵌第三方的演示平台代码，jsfiddle、codepen都是很不错的选择。</li></ul>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 点击下载效果</title>
    <link href="https://weilining.github.io/214.html"/>
    <id>https://weilining.github.io/214.html</id>
    <published>2020-12-16T11:55:24.000Z</published>
    <updated>2020-12-16T11:55:24.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;资源地址或相对地址&quot; target&#x3D;&quot;_blank&quot;&gt;我是附件&lt;&#x2F;a&gt; </span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>web前端——旋转3D魔方</title>
    <link href="https://weilining.github.io/213.html"/>
    <id>https://weilining.github.io/213.html</id>
    <published>2020-12-16T06:51:19.000Z</published>
    <updated>2020-12-16T06:51:19.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p> 盒子布局</p><p>将3D魔方的6个面包裹在一个父盒子中</p><p>Html</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;content&quot;&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;parent&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div1&quot;&gt;上&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div2&quot;&gt;下&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div3&quot;&gt;左&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div4&quot;&gt;右&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div5&quot;&gt;前&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div6&quot;&gt;后&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h1 id="添加3D效果"><a href="#添加3D效果" class="headerlink" title="添加3D效果"></a>添加3D效果</h1><ol><li><p>给父盒子添加相对定位和3D属性</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">    &#x2F;* 相对定位 *&#x2F;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    margin: 200px auto;</span><br><span class="line">    &#x2F;* 3D属性 *&#x2F;</span><br><span class="line">    transform-style: preserve-3d;</span><br><span class="line">    &#x2F;* 旋转动画 *&#x2F;</span><br><span class="line">    animation-name: rotate;</span><br><span class="line">    animation-duration: 10s;</span><br><span class="line">    animation-iteration-count: infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>给子盒子添加绝对定位，并移动、旋转子盒子</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.parent&gt;div &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  width: 400px;</span><br><span class="line">  height: 400px;</span><br><span class="line">  border: 1px solid pink;</span><br><span class="line">  font-size: 40px;</span><br><span class="line">  line-height: 400px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div1 &#123;</span><br><span class="line">  top: -50%;</span><br><span class="line">  color: yellow;</span><br><span class="line">  transform: rotateX(90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div2 &#123;</span><br><span class="line">  top: 50%;</span><br><span class="line">  color: white;</span><br><span class="line">  transform: rotateX(90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div3 &#123;</span><br><span class="line">  left: -50%;</span><br><span class="line">  color: red;</span><br><span class="line">  transform: rotateY(90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div4 &#123;</span><br><span class="line">  left: 50%;</span><br><span class="line">  color: orange;</span><br><span class="line">  transform: rotateY(90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div5 &#123;</span><br><span class="line">  transform: translateZ(200px);</span><br><span class="line">  color: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div6 &#123;</span><br><span class="line">  transform: translateZ(-200px);</span><br><span class="line">  color: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><p><a href="https://img-blog.csdnimg.cn/20200626160928538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDM2OTkw,size_16,color_FFFFFF,t_70"><img data-src="/213/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDM2OTkw,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述" loading="lazy"></a></p></li><li><p>给父盒子添加动画效果</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">  &#x2F;* 相对定位 *&#x2F;</span><br><span class="line">  position: relative;</span><br><span class="line">  width: 400px;</span><br><span class="line">  height: 400px;</span><br><span class="line">  margin: 200px auto;</span><br><span class="line">  &#x2F;* 3D属性 *&#x2F;</span><br><span class="line">  transform-style: preserve-3d;</span><br><span class="line">  &#x2F;* 旋转动画 *&#x2F;</span><br><span class="line">  animation-name: rotate;</span><br><span class="line">  animation-duration: 10s;</span><br><span class="line">  animation-iteration-count: infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes rotate &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">  transform: rotateX(0) rotateY(0)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  100% &#123;</span><br><span class="line">  transform: rotateX(360deg) rotateY(360deg)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="整体代码"><a href="#整体代码" class="headerlink" title="整体代码"></a>整体代码</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;旋转魔方&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body &#123;</span><br><span class="line">            background-color: black;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .content &#123;</span><br><span class="line">            perspective: 1000px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .parent &#123;</span><br><span class="line">            &#x2F;* 相对定位 *&#x2F;</span><br><span class="line">            position: relative;</span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            margin: 200px auto;</span><br><span class="line">            &#x2F;* 3D属性 *&#x2F;</span><br><span class="line">            transform-style: preserve-3d;</span><br><span class="line">            &#x2F;* 旋转动画 *&#x2F;</span><br><span class="line">            animation-name: rotate;</span><br><span class="line">            animation-duration: 10s;</span><br><span class="line">            animation-iteration-count: infinite;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .parent&gt;div &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            border: 1px solid pink;</span><br><span class="line">            font-size: 40px;</span><br><span class="line">            line-height: 400px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .parent&gt;div:hover &#123;</span><br><span class="line">            background-color: currentColor;</span><br><span class="line">            box-shadow: 0 0 100px currentColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div1 &#123;</span><br><span class="line">            top: -50%;</span><br><span class="line">            color: yellow;</span><br><span class="line">            transform: rotateX(90deg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div2 &#123;</span><br><span class="line">            top: 50%;</span><br><span class="line">            color: white;</span><br><span class="line">            transform: rotateX(90deg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div3 &#123;</span><br><span class="line">            left: -50%;</span><br><span class="line">            color: red;</span><br><span class="line">            transform: rotateY(90deg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div4 &#123;</span><br><span class="line">            left: 50%;</span><br><span class="line">            color: orange;</span><br><span class="line">            transform: rotateY(90deg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div5 &#123;</span><br><span class="line">            transform: translateZ(200px);</span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div6 &#123;</span><br><span class="line">            transform: translateZ(-200px);</span><br><span class="line">            color: green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @keyframes rotate &#123;</span><br><span class="line">            0% &#123;</span><br><span class="line">                transform: rotateX(0) rotateY(0)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            100% &#123;</span><br><span class="line">                transform: rotateX(360deg) rotateY(360deg)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;content&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;parent&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div1&quot;&gt;上&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div2&quot;&gt;下&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div3&quot;&gt;左&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div4&quot;&gt;右&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div5&quot;&gt;前&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div6&quot;&gt;后&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://chenyunxin.cn/posts/774085850.html#%E7%9B%92%E5%AD%90%E5%B8%83%E5%B1%80">https://chenyunxin.cn/posts/774085850.html#%E7%9B%92%E5%AD%90%E5%B8%83%E5%B1%80</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>最简单的jquery.ripples水面涟漪效果</title>
    <link href="https://weilining.github.io/212.html"/>
    <id>https://weilining.github.io/212.html</id>
    <published>2020-12-16T06:42:55.000Z</published>
    <updated>2020-12-16T06:42:55.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    html &#123;</span><br><span class="line"></span><br><span class="line">        height: 100%;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    body&#123;</span><br><span class="line">        background: url(header-background.jpg) no-repeat;</span><br><span class="line">        background-size: cover;</span><br><span class="line">        height:100%;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;body &gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;..&#x2F;js&#x2F;jquery-2.1.4.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;js&#x2F;jquery.ripples-min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    &#x2F;* https:&#x2F;&#x2F;github.com&#x2F;sirxemic&#x2F;jquery.ripples *&#x2F;</span><br><span class="line">    $(document).ready(function() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            $(&#39;body&#39;).ripples(&#123;</span><br><span class="line">                resolution: 512,</span><br><span class="line">                dropRadius: 20, &#x2F;&#x2F;px</span><br><span class="line">                perturbance: 0.04,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (e) &#123;</span><br><span class="line">            $(&#39;.error&#39;).show().text(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>在线编程&amp;&amp;VSCode 实时预览 HTML 页面</title>
    <link href="https://weilining.github.io/211.html"/>
    <id>https://weilining.github.io/211.html</id>
    <published>2020-12-16T06:38:04.000Z</published>
    <updated>2020-12-16T06:38:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h2><p>平时写网页时，只有写完代码，然后保存，接下来到浏览器中刷新查看效果，然后不停重复，我们发现很多时间就这样浪费到了这三个步骤上，用户体验很差。</p><a id="more"></a><h2 id="使用-codepen-网站"><a href="#使用-codepen-网站" class="headerlink" title="使用 codepen 网站"></a>使用 codepen 网站</h2><p><a href="https://codepen.io/">codepen</a> 网站有一个功能，就是写完代码时，可以自动实时预览网页效果</p><p>网站链接：<a href="https://codepen.io/">https://codepen.io/</a></p><p><img data-src="/211/image-1024x596.png" alt="img" loading="lazy"></p><h2 id="VSCode-设置网页代码实时预览"><a href="#VSCode-设置网页代码实时预览" class="headerlink" title="VSCode 设置网页代码实时预览"></a>VSCode 设置网页代码实时预览</h2><p>安装插件 Live Server，然后右键点击 Open with Live Server 即可在浏览器打开文件，此时修改文件内容，浏览器会在文件保存时触发刷新操作，实现实时预览效果。</p><p><img data-src="/211/image-1.png" alt="img" loading="lazy"><img data-src="/211/image-2.png" alt="img" loading="lazy"></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>hexo命令简写</title>
    <link href="https://weilining.github.io/210.html"/>
    <id>https://weilining.github.io/210.html</id>
    <published>2020-12-15T19:40:34.000Z</published>
    <updated>2020-12-15T19:40:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n &quot;t&quot;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>vscode 快速生成 html</title>
    <link href="https://weilining.github.io/209.html"/>
    <id>https://weilining.github.io/209.html</id>
    <published>2020-12-15T19:21:33.000Z</published>
    <updated>2020-12-15T19:21:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建html"><a href="#创建html" class="headerlink" title="创建html"></a>创建html</h2><p><code>index.html</code>记得把右下角的纯文本改成HTML</p><p><img data-src="/209/image-20201216033814809.png" alt="image-20201216033814809" loading="lazy"></p><h2 id="自动生成html框架"><a href="#自动生成html框架" class="headerlink" title="自动生成html框架"></a>自动生成html框架</h2><p>在空文档中输入!（英文）并按下tab键。</p><p><img data-src="/209/image-20201216033922065.png" alt="image-20201216033922065" loading="lazy"></p><a id="more"></a><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img data-src="/209/image-20201216034010240.png" alt="image-20201216034010240" loading="lazy"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot; &#x2F;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot; &#x2F;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line">  &lt;body&gt;&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>网址后面加&#39;/&#39;与不加&#39;/&#39;斜杠有什么区别</title>
    <link href="https://weilining.github.io/208.html"/>
    <id>https://weilining.github.io/208.html</id>
    <published>2020-12-15T19:06:51.000Z</published>
    <updated>2020-12-15T19:06:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="加斜杠问题"><a href="#加斜杠问题" class="headerlink" title="加斜杠问题"></a>加斜杠问题</h2><p>网址后面如果加斜杠，服务端会将其处理目录，后面如果不加斜杠服务端会先寻找文件，如果找不到再找目录这中间有个处理过程；如果是文件，你加上斜杠会出现404.目录的话有强迫症的开发者可以加上，这是比较标准的。</p><a id="more"></a><h2 id="因为斜杠引发的样式问题"><a href="#因为斜杠引发的样式问题" class="headerlink" title="因为斜杠引发的样式问题"></a>因为斜杠引发的样式问题</h2><p>说明css等静态文件的引用地址不规范，仅仅适合当前开发环境。你的css路径是读页面的路径而不是设定常量或使用相对路径吗</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>jQuery写css</title>
    <link href="https://weilining.github.io/207.html"/>
    <id>https://weilining.github.io/207.html</id>
    <published>2020-12-15T12:37:07.000Z</published>
    <updated>2020-12-15T12:37:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><a id="more"></a> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fish();</span><br><span class="line">function fish() &#123;</span><br><span class="line">  return (</span><br><span class="line">    $(&quot;footer&quot;).append(</span><br><span class="line">      &#39;&lt;div class&#x3D;&quot;container&quot; id&#x3D;&quot;jsi-flying-fish-container&quot;&gt;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">    ),</span><br><span class="line">    $(&quot;.container&quot;).css(&#123;</span><br><span class="line">      width: &quot;100%&quot;,</span><br><span class="line">      height: &quot;160px&quot;,</span><br><span class="line">      margin: 0,</span><br><span class="line">      padding: 0,</span><br><span class="line">    &#125;),</span><br><span class="line">    $(&quot;#footer-wrap&quot;).css(&#123;</span><br><span class="line">      position: &quot;absolute&quot;,</span><br><span class="line">      &quot;text-align&quot;: &quot;center&quot;,</span><br><span class="line">      top: 0,</span><br><span class="line">      right: 0,</span><br><span class="line">      left: 0,</span><br><span class="line">      bottom: 0,</span><br><span class="line">    &#125;),</span><br><span class="line">    this</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>jQuery插件 养鱼</title>
    <link href="https://weilining.github.io/206.html"/>
    <id>https://weilining.github.io/206.html</id>
    <published>2020-12-15T12:32:14.000Z</published>
    <updated>2020-12-15T12:32:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://codepen.io/K-T/pen/qQZwzQ">https://codepen.io/K-T/pen/qQZwzQ</a></p><a id="more"></a><p><a href="https://www.jq22.com/code2630">https://www.jq22.com/code2630</a></p><h2 id="hexo-butterfly-适配"><a href="#hexo-butterfly-适配" class="headerlink" title="hexo butterfly 适配"></a>hexo butterfly 适配</h2><p><code>_configy.butterfly.yml</code> 相应位置修改</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://rmt.dogedoge.com/fetch/~/source/jsdelivr/npm/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://uuuuu.cf/js/fishes.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><code>fishes.js</code>里写了<code>css+jq</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">fish();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fish</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    $(<span class="string">&quot;footer&quot;</span>).append(</span><br><span class="line">      <span class="string">&#x27;&lt;div class=&quot;container&quot; id=&quot;jsi-flying-fish-container&quot;&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">    ),</span><br><span class="line">    $(<span class="string">&quot;.container&quot;</span>).css(&#123;</span><br><span class="line">      width: <span class="string">&quot;100%&quot;</span>,</span><br><span class="line">      height: <span class="string">&quot;160px&quot;</span>,</span><br><span class="line">      margin: <span class="number">0</span>,</span><br><span class="line">      padding: <span class="number">0</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    $(<span class="string">&quot;#footer-wrap&quot;</span>).css(&#123;</span><br><span class="line">      position: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text-align&quot;</span>: <span class="string">&quot;center&quot;</span>,</span><br><span class="line">      top: <span class="number">0</span>,</span><br><span class="line">      right: <span class="number">0</span>,</span><br><span class="line">      left: <span class="number">0</span>,</span><br><span class="line">      bottom: <span class="number">0</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="built_in">this</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> RENDERER = &#123;</span><br><span class="line">  POINT_INTERVAL: <span class="number">5</span>,</span><br><span class="line">  FISH_COUNT: <span class="number">2</span>,</span><br><span class="line">  MAX_INTERVAL_COUNT: <span class="number">50</span>,</span><br><span class="line">  INIT_HEIGHT_RATE: <span class="number">0.5</span>,</span><br><span class="line">  THRESHOLD: <span class="number">50</span>,</span><br><span class="line"></span><br><span class="line">  init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.setParameters();</span><br><span class="line">    <span class="built_in">this</span>.reconstructMethods();</span><br><span class="line">    <span class="built_in">this</span>.setup();</span><br><span class="line">    <span class="built_in">this</span>.bindEvent();</span><br><span class="line">    <span class="built_in">this</span>.render();</span><br><span class="line">  &#125;,</span><br><span class="line">  setParameters: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.$window = $(<span class="built_in">window</span>);</span><br><span class="line">    <span class="built_in">this</span>.$container = $(<span class="string">&quot;#jsi-flying-fish-container&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.$canvas = $(<span class="string">&quot;&lt;canvas /&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.context = <span class="built_in">this</span>.$canvas</span><br><span class="line">      .appendTo(<span class="built_in">this</span>.$container)</span><br><span class="line">      .get(<span class="number">0</span>)</span><br><span class="line">      .getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.points = [];</span><br><span class="line">    <span class="built_in">this</span>.fishes = [];</span><br><span class="line">    <span class="built_in">this</span>.watchIds = [];</span><br><span class="line">  &#125;,</span><br><span class="line">  createSurfacePoints: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> count = <span class="built_in">Math</span>.round(<span class="built_in">this</span>.width / <span class="built_in">this</span>.POINT_INTERVAL);</span><br><span class="line">    <span class="built_in">this</span>.pointInterval = <span class="built_in">this</span>.width / (count - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">this</span>.points.push(<span class="keyword">new</span> SURFACE_POINT(<span class="built_in">this</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> point = <span class="keyword">new</span> SURFACE_POINT(<span class="built_in">this</span>, i * <span class="built_in">this</span>.pointInterval),</span><br><span class="line">        previous = <span class="built_in">this</span>.points[i - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">      point.setPreviousPoint(previous);</span><br><span class="line">      previous.setNextPoint(point);</span><br><span class="line">      <span class="built_in">this</span>.points.push(point);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  reconstructMethods: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.watchWindowSize = <span class="built_in">this</span>.watchWindowSize.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.jdugeToStopResize = <span class="built_in">this</span>.jdugeToStopResize.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.startEpicenter = <span class="built_in">this</span>.startEpicenter.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.moveEpicenter = <span class="built_in">this</span>.moveEpicenter.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.render = <span class="built_in">this</span>.render.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  setup: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.points.length = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.fishes.length = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.watchIds.length = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.intervalCount = <span class="built_in">this</span>.MAX_INTERVAL_COUNT;</span><br><span class="line">    <span class="built_in">this</span>.width = <span class="built_in">this</span>.$container.width();</span><br><span class="line">    <span class="built_in">this</span>.height = <span class="built_in">this</span>.$container.height();</span><br><span class="line">    <span class="built_in">this</span>.fishCount =</span><br><span class="line">      (((<span class="built_in">this</span>.FISH_COUNT * <span class="built_in">this</span>.width) / <span class="number">500</span>) * <span class="built_in">this</span>.height) / <span class="number">500</span>;</span><br><span class="line">    <span class="built_in">this</span>.$canvas.attr(&#123; <span class="attr">width</span>: <span class="built_in">this</span>.width, <span class="attr">height</span>: <span class="built_in">this</span>.height &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.skyGradient = <span class="built_in">this</span>.context.createLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.skyGradient.addColorStop(<span class="number">0</span>, <span class="string">&quot;hsl(180, 80%, 70%)&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.skyGradient.addColorStop(<span class="number">1</span>, <span class="string">&quot;hsl(180, 80%, 90%)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.seaGradient = <span class="built_in">this</span>.context.createLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.seaGradient.addColorStop(<span class="number">0</span>, <span class="string">&quot;hsl(180, 80%, 60%)&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.seaGradient.addColorStop(<span class="number">0.5</span>, <span class="string">&quot;hsl(180, 80%, 50%)&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.seaGradient.addColorStop(<span class="number">1</span>, <span class="string">&quot;hsl(210, 80%, 50%)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.fishes.push(<span class="keyword">new</span> FISH(<span class="built_in">this</span>));</span><br><span class="line">    <span class="built_in">this</span>.createSurfacePoints();</span><br><span class="line">  &#125;,</span><br><span class="line">  watchWindowSize: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.clearTimer();</span><br><span class="line">    <span class="built_in">this</span>.tmpWidth = <span class="built_in">this</span>.$window.width();</span><br><span class="line">    <span class="built_in">this</span>.tmpHeight = <span class="built_in">this</span>.$window.height();</span><br><span class="line">    <span class="built_in">this</span>.watchIds.push(<span class="built_in">setTimeout</span>(<span class="built_in">this</span>.jdugeToStopResize, <span class="built_in">this</span>.WATCH_INTERVAL));</span><br><span class="line">  &#125;,</span><br><span class="line">  clearTimer: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">this</span>.watchIds.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(<span class="built_in">this</span>.watchIds.pop());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  jdugeToStopResize: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> width = <span class="built_in">this</span>.$window.width(),</span><br><span class="line">      height = <span class="built_in">this</span>.$window.height(),</span><br><span class="line">      stopped = width == <span class="built_in">this</span>.tmpWidth &amp;&amp; height == <span class="built_in">this</span>.tmpHeight;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.tmpWidth = width;</span><br><span class="line">    <span class="built_in">this</span>.tmpHeight = height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (stopped) &#123;</span><br><span class="line">      <span class="built_in">this</span>.setup();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  bindEvent: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.$window.on(<span class="string">&quot;resize&quot;</span>, <span class="built_in">this</span>.watchWindowSize);</span><br><span class="line">    <span class="built_in">this</span>.$container.on(<span class="string">&quot;mouseenter&quot;</span>, <span class="built_in">this</span>.startEpicenter);</span><br><span class="line">    <span class="built_in">this</span>.$container.on(<span class="string">&quot;mousemove&quot;</span>, <span class="built_in">this</span>.moveEpicenter);</span><br><span class="line">  &#125;,</span><br><span class="line">  getAxis: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> offset = <span class="built_in">this</span>.$container.offset();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      x: event.clientX - offset.left + <span class="built_in">this</span>.$window.scrollLeft(),</span><br><span class="line">      y: event.clientY - offset.top + <span class="built_in">this</span>.$window.scrollTop(),</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  startEpicenter: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.axis = <span class="built_in">this</span>.getAxis(event);</span><br><span class="line">  &#125;,</span><br><span class="line">  moveEpicenter: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> axis = <span class="built_in">this</span>.getAxis(event);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.axis) &#123;</span><br><span class="line">      <span class="built_in">this</span>.axis = axis;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.generateEpicenter(axis.x, axis.y, axis.y - <span class="built_in">this</span>.axis.y);</span><br><span class="line">    <span class="built_in">this</span>.axis = axis;</span><br><span class="line">  &#125;,</span><br><span class="line">  generateEpicenter: <span class="function"><span class="keyword">function</span> (<span class="params">x, y, velocity</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      y &lt; <span class="built_in">this</span>.height / <span class="number">2</span> - <span class="built_in">this</span>.THRESHOLD ||</span><br><span class="line">      y &gt; <span class="built_in">this</span>.height / <span class="number">2</span> + <span class="built_in">this</span>.THRESHOLD</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> index = <span class="built_in">Math</span>.round(x / <span class="built_in">this</span>.pointInterval);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= <span class="built_in">this</span>.points.length) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.points[index].interfere(y, velocity);</span><br><span class="line">  &#125;,</span><br><span class="line">  controlStatus: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.points.length; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="built_in">this</span>.points[i].updateSelf();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.points.length; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="built_in">this</span>.points[i].updateNeighbors();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.fishes.length &lt; <span class="built_in">this</span>.fishCount) &#123;</span><br><span class="line">      <span class="keyword">if</span> (--<span class="built_in">this</span>.intervalCount == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.intervalCount = <span class="built_in">this</span>.MAX_INTERVAL_COUNT;</span><br><span class="line">        <span class="built_in">this</span>.fishes.push(<span class="keyword">new</span> FISH(<span class="built_in">this</span>));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  render: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    requestAnimationFrame(<span class="built_in">this</span>.render);</span><br><span class="line">    <span class="built_in">this</span>.controlStatus();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.context.fillStyle = <span class="built_in">this</span>.skyGradient;</span><br><span class="line">    <span class="built_in">this</span>.context.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.width, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.context.fillStyle = <span class="built_in">this</span>.seaGradient;</span><br><span class="line">    <span class="built_in">this</span>.context.beginPath();</span><br><span class="line">    <span class="built_in">this</span>.context.moveTo(<span class="number">0</span>, <span class="built_in">this</span>.height);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.points.length; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="built_in">this</span>.points[i].render(<span class="built_in">this</span>.context);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.context.lineTo(<span class="built_in">this</span>.width, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.context.closePath();</span><br><span class="line">    <span class="built_in">this</span>.context.fill();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.fishes.length; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="built_in">this</span>.fishes[i].render(<span class="built_in">this</span>.context);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> SURFACE_POINT = <span class="function"><span class="keyword">function</span> (<span class="params">renderer, x</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.renderer = renderer;</span><br><span class="line">  <span class="built_in">this</span>.x = x;</span><br><span class="line">  <span class="built_in">this</span>.init();</span><br><span class="line">&#125;;</span><br><span class="line">SURFACE_POINT.prototype = &#123;</span><br><span class="line">  SPRING_CONSTANT: <span class="number">0.03</span>,</span><br><span class="line">  SPRING_FRICTION: <span class="number">0.9</span>,</span><br><span class="line">  WAVE_SPREAD: <span class="number">0.3</span>,</span><br><span class="line">  ACCELARATION_RATE: <span class="number">0.01</span>,</span><br><span class="line"></span><br><span class="line">  init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.initHeight = <span class="built_in">this</span>.renderer.height * <span class="built_in">this</span>.renderer.INIT_HEIGHT_RATE;</span><br><span class="line">    <span class="built_in">this</span>.height = <span class="built_in">this</span>.initHeight;</span><br><span class="line">    <span class="built_in">this</span>.fy = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.force = &#123; <span class="attr">previous</span>: <span class="number">0</span>, <span class="attr">next</span>: <span class="number">0</span> &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  setPreviousPoint: <span class="function"><span class="keyword">function</span> (<span class="params">previous</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.previous = previous;</span><br><span class="line">  &#125;,</span><br><span class="line">  setNextPoint: <span class="function"><span class="keyword">function</span> (<span class="params">next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.next = next;</span><br><span class="line">  &#125;,</span><br><span class="line">  interfere: <span class="function"><span class="keyword">function</span> (<span class="params">y, velocity</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.fy =</span><br><span class="line">      <span class="built_in">this</span>.renderer.height *</span><br><span class="line">      <span class="built_in">this</span>.ACCELARATION_RATE *</span><br><span class="line">      (<span class="built_in">this</span>.renderer.height - <span class="built_in">this</span>.height - y &gt;= <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>) *</span><br><span class="line">      <span class="built_in">Math</span>.abs(velocity);</span><br><span class="line">  &#125;,</span><br><span class="line">  updateSelf: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.fy += <span class="built_in">this</span>.SPRING_CONSTANT * (<span class="built_in">this</span>.initHeight - <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.fy *= <span class="built_in">this</span>.SPRING_FRICTION;</span><br><span class="line">    <span class="built_in">this</span>.height += <span class="built_in">this</span>.fy;</span><br><span class="line">  &#125;,</span><br><span class="line">  updateNeighbors: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.previous) &#123;</span><br><span class="line">      <span class="built_in">this</span>.force.previous =</span><br><span class="line">        <span class="built_in">this</span>.WAVE_SPREAD * (<span class="built_in">this</span>.height - <span class="built_in">this</span>.previous.height);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.next) &#123;</span><br><span class="line">      <span class="built_in">this</span>.force.next = <span class="built_in">this</span>.WAVE_SPREAD * (<span class="built_in">this</span>.height - <span class="built_in">this</span>.next.height);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  render: <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.previous) &#123;</span><br><span class="line">      <span class="built_in">this</span>.previous.height += <span class="built_in">this</span>.force.previous;</span><br><span class="line">      <span class="built_in">this</span>.previous.fy += <span class="built_in">this</span>.force.previous;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.next) &#123;</span><br><span class="line">      <span class="built_in">this</span>.next.height += <span class="built_in">this</span>.force.next;</span><br><span class="line">      <span class="built_in">this</span>.next.fy += <span class="built_in">this</span>.force.next;</span><br><span class="line">    &#125;</span><br><span class="line">    context.lineTo(<span class="built_in">this</span>.x, <span class="built_in">this</span>.renderer.height - <span class="built_in">this</span>.height);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> FISH = <span class="function"><span class="keyword">function</span> (<span class="params">renderer</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.renderer = renderer;</span><br><span class="line">  <span class="built_in">this</span>.init();</span><br><span class="line">&#125;;</span><br><span class="line">FISH.prototype = &#123;</span><br><span class="line">  GRAVITY: <span class="number">0.4</span>,</span><br><span class="line"></span><br><span class="line">  init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.direction = <span class="built_in">Math</span>.random() &lt; <span class="number">0.5</span>;</span><br><span class="line">    <span class="built_in">this</span>.x = <span class="built_in">this</span>.direction</span><br><span class="line">      ? <span class="built_in">this</span>.renderer.width + <span class="built_in">this</span>.renderer.THRESHOLD</span><br><span class="line">      : -<span class="built_in">this</span>.renderer.THRESHOLD;</span><br><span class="line">    <span class="built_in">this</span>.y = <span class="built_in">this</span>.getRandomValue(</span><br><span class="line">      (<span class="built_in">this</span>.renderer.height * <span class="number">6</span>) / <span class="number">10</span>,</span><br><span class="line">      (<span class="built_in">this</span>.renderer.height * <span class="number">9</span>) / <span class="number">10</span></span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">this</span>.previousY = <span class="built_in">this</span>.y;</span><br><span class="line">    <span class="built_in">this</span>.vx = <span class="built_in">this</span>.getRandomValue(<span class="number">4</span>, <span class="number">10</span>) * (<span class="built_in">this</span>.direction ? -<span class="number">1</span> : <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">this</span>.vy = <span class="built_in">this</span>.getRandomValue(-<span class="number">5</span>, -<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">this</span>.ay = <span class="built_in">this</span>.getRandomValue(-<span class="number">0.2</span>, -<span class="number">0.05</span>);</span><br><span class="line">    <span class="built_in">this</span>.theta = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.phi = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.isOut = <span class="literal">false</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  getRandomValue: <span class="function"><span class="keyword">function</span> (<span class="params">min, max</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> min + (max - min) * <span class="built_in">Math</span>.random();</span><br><span class="line">  &#125;,</span><br><span class="line">  controlStatus: <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.previousY = <span class="built_in">this</span>.y;</span><br><span class="line">    <span class="built_in">this</span>.x += <span class="built_in">this</span>.vx;</span><br><span class="line">    <span class="built_in">this</span>.y += <span class="built_in">this</span>.vy;</span><br><span class="line">    <span class="built_in">this</span>.vy += <span class="built_in">this</span>.ay;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.y &lt; <span class="built_in">this</span>.renderer.height * <span class="built_in">this</span>.renderer.INIT_HEIGHT_RATE) &#123;</span><br><span class="line">      <span class="built_in">this</span>.vy += <span class="built_in">this</span>.GRAVITY;</span><br><span class="line">      <span class="built_in">this</span>.isOut = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.isOut) &#123;</span><br><span class="line">        <span class="built_in">this</span>.ay = <span class="built_in">this</span>.getRandomValue(-<span class="number">0.2</span>, -<span class="number">0.05</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">this</span>.isOut = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.isOut) &#123;</span><br><span class="line">      <span class="built_in">this</span>.theta += <span class="built_in">Math</span>.PI / <span class="number">20</span>;</span><br><span class="line">      <span class="built_in">this</span>.theta %= <span class="built_in">Math</span>.PI * <span class="number">2</span>;</span><br><span class="line">      <span class="built_in">this</span>.phi += <span class="built_in">Math</span>.PI / <span class="number">30</span>;</span><br><span class="line">      <span class="built_in">this</span>.phi %= <span class="built_in">Math</span>.PI * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.renderer.generateEpicenter(</span><br><span class="line">      <span class="built_in">this</span>.x + (<span class="built_in">this</span>.direction ? -<span class="number">1</span> : <span class="number">1</span>) * <span class="built_in">this</span>.renderer.THRESHOLD,</span><br><span class="line">      <span class="built_in">this</span>.y,</span><br><span class="line">      <span class="built_in">this</span>.y - <span class="built_in">this</span>.previousY</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      (<span class="built_in">this</span>.vx &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">this</span>.x &gt; <span class="built_in">this</span>.renderer.width + <span class="built_in">this</span>.renderer.THRESHOLD) ||</span><br><span class="line">      (<span class="built_in">this</span>.vx &lt; <span class="number">0</span> &amp;&amp; <span class="built_in">this</span>.x &lt; -<span class="built_in">this</span>.renderer.THRESHOLD)</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="built_in">this</span>.init();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  render: <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>&#123;</span><br><span class="line">    context.save();</span><br><span class="line">    context.translate(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y);</span><br><span class="line">    context.rotate(<span class="built_in">Math</span>.PI + <span class="built_in">Math</span>.atan2(<span class="built_in">this</span>.vy, <span class="built_in">this</span>.vx));</span><br><span class="line">    context.scale(<span class="number">1</span>, <span class="built_in">this</span>.direction ? <span class="number">1</span> : -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    context.fillStyle = <span class="string">&quot;hsl(180, 30%, 80%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.moveTo(-<span class="number">30</span>, <span class="number">0</span>);</span><br><span class="line">    context.bezierCurveTo(-<span class="number">20</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">40</span>, <span class="number">0</span>);</span><br><span class="line">    context.bezierCurveTo(<span class="number">15</span>, -<span class="number">10</span>, -<span class="number">20</span>, -<span class="number">15</span>, -<span class="number">30</span>, <span class="number">0</span>);</span><br><span class="line">    context.fill();</span><br><span class="line"></span><br><span class="line">    context.save();</span><br><span class="line">    context.translate(<span class="number">40</span>, <span class="number">0</span>);</span><br><span class="line">    context.scale(<span class="number">0.9</span> + <span class="number">0.2</span> * <span class="built_in">Math</span>.sin(<span class="built_in">this</span>.theta), <span class="number">1</span>);</span><br><span class="line">    context.fillStyle = <span class="string">&quot;hsl(180, 30%, 80%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.moveTo(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">5</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">8</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">12</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">12</span>, -<span class="number">5</span>, <span class="number">20</span>, -<span class="number">8</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">5</span>, -<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    context.fill();</span><br><span class="line">    context.restore();</span><br><span class="line"></span><br><span class="line">    context.save();</span><br><span class="line">    context.translate(-<span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">    context.rotate(<span class="built_in">Math</span>.PI / <span class="number">3</span> + (<span class="built_in">Math</span>.PI / <span class="number">10</span>) * <span class="built_in">Math</span>.sin(<span class="built_in">this</span>.phi));</span><br><span class="line">    context.fillStyle = <span class="string">&quot;hsl(220, 80%, 40%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.moveTo(-<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    context.bezierCurveTo(-<span class="number">10</span>, -<span class="number">10</span>, -<span class="number">10</span>, -<span class="number">30</span>, <span class="number">0</span>, -<span class="number">40</span>);</span><br><span class="line">    context.bezierCurveTo(<span class="number">12</span>, -<span class="number">25</span>, <span class="number">8</span>, -<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    context.closePath();</span><br><span class="line">    context.fill();</span><br><span class="line">    context.restore();</span><br><span class="line"></span><br><span class="line">    context.strokeStyle = <span class="string">&quot;hsl(220, 80%, 40%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.arc(-<span class="number">15</span>, -<span class="number">3</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">    context.stroke();</span><br><span class="line"></span><br><span class="line">    context.fillStyle = <span class="string">&quot;hsl(220, 80%, 40%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.arc(-<span class="number">15</span>, -<span class="number">3</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">    context.fill();</span><br><span class="line">    context.restore();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.controlStatus(context);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  RENDERER.init();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
</feed>
