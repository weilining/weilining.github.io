<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ln&#39;s Blog</title>
  
  <subtitle>有朋自远方来，不亦乐乎</subtitle>
  <link href="https://weilining.github.io/atom.xml" rel="self"/>
  
  <link href="https://weilining.github.io/"/>
  <updated>2020-12-18T09:12:12.000Z</updated>
  <id>https://weilining.github.io/</id>
  
  <author>
    <name>Lining Wei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网页性能测试工具推荐</title>
    <link href="https://weilining.github.io/218.html"/>
    <id>https://weilining.github.io/218.html</id>
    <published>2020-12-18T09:12:12.000Z</published>
    <updated>2020-12-18T09:12:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在线"><a href="#在线" class="headerlink" title="在线"></a>在线</h2><p><a href="https://www.aicesu.cn/">https://www.aicesu.cn/</a></p><p><a href="https://developers.google.com/speed/pagespeed/insights/">https://developers.google.com/speed/pagespeed/insights/</a></p><a id="more"></a><h2 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h2><p>chrome的lighthouse</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>在线设计html ui推荐</title>
    <link href="https://weilining.github.io/217.html"/>
    <id>https://weilining.github.io/217.html</id>
    <published>2020-12-17T07:37:20.000Z</published>
    <updated>2020-12-17T07:37:20.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p> <a href="https://zijieke.com/semantic-ui/">https://zijieke.com/semantic-ui/</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hexo不渲染.md或者.html</title>
    <link href="https://weilining.github.io/216.html"/>
    <id>https://weilining.github.io/216.html</id>
    <published>2020-12-17T03:34:09.000Z</published>
    <updated>2020-12-17T03:34:09.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p> 我们知道，在 source 文件夹下的所有 md 文件或者 html 文件都会被渲染，有时候我们不想这些文件被渲染怎么办？比如很多时候我们想要写一个 README.md 或者一些自定义的页面。比如百度或者谷歌在验证站长权限的时候，通常都会要求在主目录下添加一个 html 文件。</p><h3 id="不渲染-md-文件"><a href="#不渲染-md-文件" class="headerlink" title="不渲染 md 文件"></a>不渲染 md 文件</h3><p>使用上面的办法虽然不会渲染 md 文件，但是还是将 md 文件转化成了 html 文件，如果想保留原 md 文件后缀要怎么做呢？这就需要在 站点配置文件 _config.yml 中配置，找到 skip_render 参数，开始匹配的位置是基于你的 source_dir 的，一般来说，是你的 source 文件夹下。下面我分别列举几种常见的情况进行说明：</p><ol><li>skip_render: test/* 单个文件夹下全部文件</li><li>skip_render: test/*.md 单个文件夹下指定类型文件</li><li>skip_render: test/** 单个文件夹下全部文件以及子目录</li><li>多个文件夹以及各种复杂情况：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render: README.md</span><br><span class="line">  - &#96;test1&#x2F;*.html&#96;</span><br><span class="line">  - &#96;test2&#x2F;**&#96;123</span><br></pre></td></tr></table></figure><h3 id="不渲染-html-文件"><a href="#不渲染-html-文件" class="headerlink" title="不渲染 html 文件"></a>不渲染 html 文件</h3><p>在不想被渲染的 html 文件最上面添加如下代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>hexo的md文件中使用html、css、javascript</title>
    <link href="https://weilining.github.io/215.html"/>
    <id>https://weilining.github.io/215.html</id>
    <published>2020-12-17T03:32:31.000Z</published>
    <updated>2020-12-17T03:32:31.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>有时候想写点前端小demo，因为代码量实在是太少了，几行css、几行javascript；不想放在codepen作为引用，也不想单独做一个页面放到主题的source文件夹下，于是就有了在md文件里直接写的想法。</p><h2 id="开始折腾"><a href="#开始折腾" class="headerlink" title="开始折腾"></a>开始折腾</h2><h3 id="1、直接插入"><a href="#1、直接插入" class="headerlink" title="1、直接插入"></a>1、直接插入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正文</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.styled-div&#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background: yellow;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;styled-div&quot;&gt;我是div&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(function()&#123;</span><br><span class="line">console.log(&#39;我是md是的javascript&#39;);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>我是div</p><p>html和javascript成功了，但是style没有成功……。</p><h3 id="2、把css放到行内"><a href="#2、把css放到行内" class="headerlink" title="2、把css放到行内"></a>2、把css放到行内</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正文</span><br><span class="line">&lt;div style&#x3D;&quot;width: 100px;height: 100px;background: yellow;&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>我是div</p><p>样式放在行内是可以的。怎么让放在style里的样式也有效呢？</p><h3 id="3、使用raw"><a href="#3、使用raw" class="headerlink" title="3、使用raw:"></a>3、使用raw:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正文</span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.styled-div1&#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background: yellow;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;styled-div-other&quot;&gt;我是div&lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>我是div</p><p>style里的样式有效了</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><blockquote><p>html，js，css 都应该写在raw标签里。</p></blockquote><p>方法一、二中，好像是直接在md里写html和javascript都行，但当这篇文章写到第三种方法的时候，js报错了，并且页面布局也有点乱。用web开发都工具看了下，<code>&lt;div class=&quot;styled-div&quot;&gt;我是div&lt;/div&gt;</code>和<code>&lt;script&gt;&lt;/script&gt;</code>中都生成了很多’<br>‘标签。</p><p>所以要在md中杂点其它东西。放在raw标签里才是正确的：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正文</span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.styled-div-right&#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background: yellow;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;styled-div-right&quot;&gt;我是div&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(function()&#123;</span><br><span class="line">console.log(&#39;我才是正确的md里的javascript&#39;);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>我是正确的</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>在markdown里写html的东西有点不合理，取决于各自吧。介绍下另外两种方式：</p><ul><li>在source文件下创建单独html页面</li><li>内嵌第三方的演示平台代码，jsfiddle、codepen都是很不错的选择。</li></ul>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 点击下载效果</title>
    <link href="https://weilining.github.io/214.html"/>
    <id>https://weilining.github.io/214.html</id>
    <published>2020-12-16T11:55:24.000Z</published>
    <updated>2020-12-16T11:55:24.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;资源地址或相对地址&quot; target&#x3D;&quot;_blank&quot;&gt;我是附件&lt;&#x2F;a&gt; </span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>web前端——旋转3D魔方</title>
    <link href="https://weilining.github.io/213.html"/>
    <id>https://weilining.github.io/213.html</id>
    <published>2020-12-16T06:51:19.000Z</published>
    <updated>2020-12-16T06:51:19.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p> 盒子布局</p><p>将3D魔方的6个面包裹在一个父盒子中</p><p>Html</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;content&quot;&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;parent&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div1&quot;&gt;上&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div2&quot;&gt;下&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div3&quot;&gt;左&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div4&quot;&gt;右&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div5&quot;&gt;前&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;div6&quot;&gt;后&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h1 id="添加3D效果"><a href="#添加3D效果" class="headerlink" title="添加3D效果"></a>添加3D效果</h1><ol><li><p>给父盒子添加相对定位和3D属性</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">    &#x2F;* 相对定位 *&#x2F;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    margin: 200px auto;</span><br><span class="line">    &#x2F;* 3D属性 *&#x2F;</span><br><span class="line">    transform-style: preserve-3d;</span><br><span class="line">    &#x2F;* 旋转动画 *&#x2F;</span><br><span class="line">    animation-name: rotate;</span><br><span class="line">    animation-duration: 10s;</span><br><span class="line">    animation-iteration-count: infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>给子盒子添加绝对定位，并移动、旋转子盒子</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.parent&gt;div &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  width: 400px;</span><br><span class="line">  height: 400px;</span><br><span class="line">  border: 1px solid pink;</span><br><span class="line">  font-size: 40px;</span><br><span class="line">  line-height: 400px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div1 &#123;</span><br><span class="line">  top: -50%;</span><br><span class="line">  color: yellow;</span><br><span class="line">  transform: rotateX(90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div2 &#123;</span><br><span class="line">  top: 50%;</span><br><span class="line">  color: white;</span><br><span class="line">  transform: rotateX(90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div3 &#123;</span><br><span class="line">  left: -50%;</span><br><span class="line">  color: red;</span><br><span class="line">  transform: rotateY(90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div4 &#123;</span><br><span class="line">  left: 50%;</span><br><span class="line">  color: orange;</span><br><span class="line">  transform: rotateY(90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div5 &#123;</span><br><span class="line">  transform: translateZ(200px);</span><br><span class="line">  color: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div6 &#123;</span><br><span class="line">  transform: translateZ(-200px);</span><br><span class="line">  color: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><p><a href="https://img-blog.csdnimg.cn/20200626160928538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDM2OTkw,size_16,color_FFFFFF,t_70"><img data-src="/213/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDM2OTkw,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述" loading="lazy"></a></p></li><li><p>给父盒子添加动画效果</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">  &#x2F;* 相对定位 *&#x2F;</span><br><span class="line">  position: relative;</span><br><span class="line">  width: 400px;</span><br><span class="line">  height: 400px;</span><br><span class="line">  margin: 200px auto;</span><br><span class="line">  &#x2F;* 3D属性 *&#x2F;</span><br><span class="line">  transform-style: preserve-3d;</span><br><span class="line">  &#x2F;* 旋转动画 *&#x2F;</span><br><span class="line">  animation-name: rotate;</span><br><span class="line">  animation-duration: 10s;</span><br><span class="line">  animation-iteration-count: infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes rotate &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">  transform: rotateX(0) rotateY(0)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  100% &#123;</span><br><span class="line">  transform: rotateX(360deg) rotateY(360deg)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="整体代码"><a href="#整体代码" class="headerlink" title="整体代码"></a>整体代码</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;旋转魔方&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body &#123;</span><br><span class="line">            background-color: black;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .content &#123;</span><br><span class="line">            perspective: 1000px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .parent &#123;</span><br><span class="line">            &#x2F;* 相对定位 *&#x2F;</span><br><span class="line">            position: relative;</span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            margin: 200px auto;</span><br><span class="line">            &#x2F;* 3D属性 *&#x2F;</span><br><span class="line">            transform-style: preserve-3d;</span><br><span class="line">            &#x2F;* 旋转动画 *&#x2F;</span><br><span class="line">            animation-name: rotate;</span><br><span class="line">            animation-duration: 10s;</span><br><span class="line">            animation-iteration-count: infinite;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .parent&gt;div &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            border: 1px solid pink;</span><br><span class="line">            font-size: 40px;</span><br><span class="line">            line-height: 400px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .parent&gt;div:hover &#123;</span><br><span class="line">            background-color: currentColor;</span><br><span class="line">            box-shadow: 0 0 100px currentColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div1 &#123;</span><br><span class="line">            top: -50%;</span><br><span class="line">            color: yellow;</span><br><span class="line">            transform: rotateX(90deg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div2 &#123;</span><br><span class="line">            top: 50%;</span><br><span class="line">            color: white;</span><br><span class="line">            transform: rotateX(90deg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div3 &#123;</span><br><span class="line">            left: -50%;</span><br><span class="line">            color: red;</span><br><span class="line">            transform: rotateY(90deg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div4 &#123;</span><br><span class="line">            left: 50%;</span><br><span class="line">            color: orange;</span><br><span class="line">            transform: rotateY(90deg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div5 &#123;</span><br><span class="line">            transform: translateZ(200px);</span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .div6 &#123;</span><br><span class="line">            transform: translateZ(-200px);</span><br><span class="line">            color: green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @keyframes rotate &#123;</span><br><span class="line">            0% &#123;</span><br><span class="line">                transform: rotateX(0) rotateY(0)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            100% &#123;</span><br><span class="line">                transform: rotateX(360deg) rotateY(360deg)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;content&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;parent&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div1&quot;&gt;上&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div2&quot;&gt;下&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div3&quot;&gt;左&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div4&quot;&gt;右&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div5&quot;&gt;前&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div6&quot;&gt;后&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://chenyunxin.cn/posts/774085850.html#%E7%9B%92%E5%AD%90%E5%B8%83%E5%B1%80">https://chenyunxin.cn/posts/774085850.html#%E7%9B%92%E5%AD%90%E5%B8%83%E5%B1%80</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>最简单的jquery.ripples水面涟漪效果</title>
    <link href="https://weilining.github.io/212.html"/>
    <id>https://weilining.github.io/212.html</id>
    <published>2020-12-16T06:42:55.000Z</published>
    <updated>2020-12-16T06:42:55.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    html &#123;</span><br><span class="line"></span><br><span class="line">        height: 100%;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    body&#123;</span><br><span class="line">        background: url(header-background.jpg) no-repeat;</span><br><span class="line">        background-size: cover;</span><br><span class="line">        height:100%;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;body &gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;..&#x2F;js&#x2F;jquery-2.1.4.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;js&#x2F;jquery.ripples-min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    &#x2F;* https:&#x2F;&#x2F;github.com&#x2F;sirxemic&#x2F;jquery.ripples *&#x2F;</span><br><span class="line">    $(document).ready(function() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            $(&#39;body&#39;).ripples(&#123;</span><br><span class="line">                resolution: 512,</span><br><span class="line">                dropRadius: 20, &#x2F;&#x2F;px</span><br><span class="line">                perturbance: 0.04,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (e) &#123;</span><br><span class="line">            $(&#39;.error&#39;).show().text(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>在线编程&amp;&amp;VSCode 实时预览 HTML 页面</title>
    <link href="https://weilining.github.io/211.html"/>
    <id>https://weilining.github.io/211.html</id>
    <published>2020-12-16T06:38:04.000Z</published>
    <updated>2020-12-16T06:38:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h2><p>平时写网页时，只有写完代码，然后保存，接下来到浏览器中刷新查看效果，然后不停重复，我们发现很多时间就这样浪费到了这三个步骤上，用户体验很差。</p><a id="more"></a><h2 id="使用-codepen-网站"><a href="#使用-codepen-网站" class="headerlink" title="使用 codepen 网站"></a>使用 codepen 网站</h2><p><a href="https://codepen.io/">codepen</a> 网站有一个功能，就是写完代码时，可以自动实时预览网页效果</p><p>网站链接：<a href="https://codepen.io/">https://codepen.io/</a></p><p><img data-src="/211/image-1024x596.png" alt="img" loading="lazy"></p><h2 id="VSCode-设置网页代码实时预览"><a href="#VSCode-设置网页代码实时预览" class="headerlink" title="VSCode 设置网页代码实时预览"></a>VSCode 设置网页代码实时预览</h2><p>安装插件 Live Server，然后右键点击 Open with Live Server 即可在浏览器打开文件，此时修改文件内容，浏览器会在文件保存时触发刷新操作，实现实时预览效果。</p><p><img data-src="/211/image-1.png" alt="img" loading="lazy"><img data-src="/211/image-2.png" alt="img" loading="lazy"></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>hexo命令简写</title>
    <link href="https://weilining.github.io/210.html"/>
    <id>https://weilining.github.io/210.html</id>
    <published>2020-12-15T19:40:34.000Z</published>
    <updated>2020-12-15T19:40:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n &quot;t&quot;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>vscode 快速生成 html</title>
    <link href="https://weilining.github.io/209.html"/>
    <id>https://weilining.github.io/209.html</id>
    <published>2020-12-15T19:21:33.000Z</published>
    <updated>2020-12-15T19:21:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建html"><a href="#创建html" class="headerlink" title="创建html"></a>创建html</h2><p><code>index.html</code>记得把右下角的纯文本改成HTML</p><p><img data-src="/209/image-20201216033814809.png" alt="image-20201216033814809" loading="lazy"></p><h2 id="自动生成html框架"><a href="#自动生成html框架" class="headerlink" title="自动生成html框架"></a>自动生成html框架</h2><p>在空文档中输入!（英文）并按下tab键。</p><p><img data-src="/209/image-20201216033922065.png" alt="image-20201216033922065" loading="lazy"></p><a id="more"></a><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img data-src="/209/image-20201216034010240.png" alt="image-20201216034010240" loading="lazy"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot; &#x2F;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot; &#x2F;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line">  &lt;body&gt;&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>网址后面加&#39;/&#39;与不加&#39;/&#39;斜杠有什么区别</title>
    <link href="https://weilining.github.io/208.html"/>
    <id>https://weilining.github.io/208.html</id>
    <published>2020-12-15T19:06:51.000Z</published>
    <updated>2020-12-15T19:06:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="加斜杠问题"><a href="#加斜杠问题" class="headerlink" title="加斜杠问题"></a>加斜杠问题</h2><p>网址后面如果加斜杠，服务端会将其处理目录，后面如果不加斜杠服务端会先寻找文件，如果找不到再找目录这中间有个处理过程；如果是文件，你加上斜杠会出现404.目录的话有强迫症的开发者可以加上，这是比较标准的。</p><a id="more"></a><h2 id="因为斜杠引发的样式问题"><a href="#因为斜杠引发的样式问题" class="headerlink" title="因为斜杠引发的样式问题"></a>因为斜杠引发的样式问题</h2><p>说明css等静态文件的引用地址不规范，仅仅适合当前开发环境。你的css路径是读页面的路径而不是设定常量或使用相对路径吗</p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>jQuery写css</title>
    <link href="https://weilining.github.io/207.html"/>
    <id>https://weilining.github.io/207.html</id>
    <published>2020-12-15T12:37:07.000Z</published>
    <updated>2020-12-15T12:37:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><a id="more"></a> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fish();</span><br><span class="line">function fish() &#123;</span><br><span class="line">  return (</span><br><span class="line">    $(&quot;footer&quot;).append(</span><br><span class="line">      &#39;&lt;div class&#x3D;&quot;container&quot; id&#x3D;&quot;jsi-flying-fish-container&quot;&gt;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">    ),</span><br><span class="line">    $(&quot;.container&quot;).css(&#123;</span><br><span class="line">      width: &quot;100%&quot;,</span><br><span class="line">      height: &quot;160px&quot;,</span><br><span class="line">      margin: 0,</span><br><span class="line">      padding: 0,</span><br><span class="line">    &#125;),</span><br><span class="line">    $(&quot;#footer-wrap&quot;).css(&#123;</span><br><span class="line">      position: &quot;absolute&quot;,</span><br><span class="line">      &quot;text-align&quot;: &quot;center&quot;,</span><br><span class="line">      top: 0,</span><br><span class="line">      right: 0,</span><br><span class="line">      left: 0,</span><br><span class="line">      bottom: 0,</span><br><span class="line">    &#125;),</span><br><span class="line">    this</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>jQuery插件 养鱼</title>
    <link href="https://weilining.github.io/206.html"/>
    <id>https://weilining.github.io/206.html</id>
    <published>2020-12-15T12:32:14.000Z</published>
    <updated>2020-12-15T12:32:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://codepen.io/K-T/pen/qQZwzQ">https://codepen.io/K-T/pen/qQZwzQ</a></p><a id="more"></a><p><a href="https://www.jq22.com/code2630">https://www.jq22.com/code2630</a></p><h2 id="hexo-butterfly-适配"><a href="#hexo-butterfly-适配" class="headerlink" title="hexo butterfly 适配"></a>hexo butterfly 适配</h2><p><code>_configy.butterfly.yml</code> 相应位置修改</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://rmt.dogedoge.com/fetch/~/source/jsdelivr/npm/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://uuuuu.cf/js/fishes.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><code>fishes.js</code>里写了<code>css+jq</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">fish();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fish</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    $(<span class="string">&quot;footer&quot;</span>).append(</span><br><span class="line">      <span class="string">&#x27;&lt;div class=&quot;container&quot; id=&quot;jsi-flying-fish-container&quot;&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">    ),</span><br><span class="line">    $(<span class="string">&quot;.container&quot;</span>).css(&#123;</span><br><span class="line">      width: <span class="string">&quot;100%&quot;</span>,</span><br><span class="line">      height: <span class="string">&quot;160px&quot;</span>,</span><br><span class="line">      margin: <span class="number">0</span>,</span><br><span class="line">      padding: <span class="number">0</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    $(<span class="string">&quot;#footer-wrap&quot;</span>).css(&#123;</span><br><span class="line">      position: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text-align&quot;</span>: <span class="string">&quot;center&quot;</span>,</span><br><span class="line">      top: <span class="number">0</span>,</span><br><span class="line">      right: <span class="number">0</span>,</span><br><span class="line">      left: <span class="number">0</span>,</span><br><span class="line">      bottom: <span class="number">0</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="built_in">this</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> RENDERER = &#123;</span><br><span class="line">  POINT_INTERVAL: <span class="number">5</span>,</span><br><span class="line">  FISH_COUNT: <span class="number">2</span>,</span><br><span class="line">  MAX_INTERVAL_COUNT: <span class="number">50</span>,</span><br><span class="line">  INIT_HEIGHT_RATE: <span class="number">0.5</span>,</span><br><span class="line">  THRESHOLD: <span class="number">50</span>,</span><br><span class="line"></span><br><span class="line">  init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.setParameters();</span><br><span class="line">    <span class="built_in">this</span>.reconstructMethods();</span><br><span class="line">    <span class="built_in">this</span>.setup();</span><br><span class="line">    <span class="built_in">this</span>.bindEvent();</span><br><span class="line">    <span class="built_in">this</span>.render();</span><br><span class="line">  &#125;,</span><br><span class="line">  setParameters: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.$window = $(<span class="built_in">window</span>);</span><br><span class="line">    <span class="built_in">this</span>.$container = $(<span class="string">&quot;#jsi-flying-fish-container&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.$canvas = $(<span class="string">&quot;&lt;canvas /&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.context = <span class="built_in">this</span>.$canvas</span><br><span class="line">      .appendTo(<span class="built_in">this</span>.$container)</span><br><span class="line">      .get(<span class="number">0</span>)</span><br><span class="line">      .getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.points = [];</span><br><span class="line">    <span class="built_in">this</span>.fishes = [];</span><br><span class="line">    <span class="built_in">this</span>.watchIds = [];</span><br><span class="line">  &#125;,</span><br><span class="line">  createSurfacePoints: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> count = <span class="built_in">Math</span>.round(<span class="built_in">this</span>.width / <span class="built_in">this</span>.POINT_INTERVAL);</span><br><span class="line">    <span class="built_in">this</span>.pointInterval = <span class="built_in">this</span>.width / (count - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">this</span>.points.push(<span class="keyword">new</span> SURFACE_POINT(<span class="built_in">this</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> point = <span class="keyword">new</span> SURFACE_POINT(<span class="built_in">this</span>, i * <span class="built_in">this</span>.pointInterval),</span><br><span class="line">        previous = <span class="built_in">this</span>.points[i - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">      point.setPreviousPoint(previous);</span><br><span class="line">      previous.setNextPoint(point);</span><br><span class="line">      <span class="built_in">this</span>.points.push(point);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  reconstructMethods: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.watchWindowSize = <span class="built_in">this</span>.watchWindowSize.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.jdugeToStopResize = <span class="built_in">this</span>.jdugeToStopResize.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.startEpicenter = <span class="built_in">this</span>.startEpicenter.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.moveEpicenter = <span class="built_in">this</span>.moveEpicenter.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.render = <span class="built_in">this</span>.render.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  setup: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.points.length = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.fishes.length = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.watchIds.length = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.intervalCount = <span class="built_in">this</span>.MAX_INTERVAL_COUNT;</span><br><span class="line">    <span class="built_in">this</span>.width = <span class="built_in">this</span>.$container.width();</span><br><span class="line">    <span class="built_in">this</span>.height = <span class="built_in">this</span>.$container.height();</span><br><span class="line">    <span class="built_in">this</span>.fishCount =</span><br><span class="line">      (((<span class="built_in">this</span>.FISH_COUNT * <span class="built_in">this</span>.width) / <span class="number">500</span>) * <span class="built_in">this</span>.height) / <span class="number">500</span>;</span><br><span class="line">    <span class="built_in">this</span>.$canvas.attr(&#123; <span class="attr">width</span>: <span class="built_in">this</span>.width, <span class="attr">height</span>: <span class="built_in">this</span>.height &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.skyGradient = <span class="built_in">this</span>.context.createLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.skyGradient.addColorStop(<span class="number">0</span>, <span class="string">&quot;hsl(180, 80%, 70%)&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.skyGradient.addColorStop(<span class="number">1</span>, <span class="string">&quot;hsl(180, 80%, 90%)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.seaGradient = <span class="built_in">this</span>.context.createLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.seaGradient.addColorStop(<span class="number">0</span>, <span class="string">&quot;hsl(180, 80%, 60%)&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.seaGradient.addColorStop(<span class="number">0.5</span>, <span class="string">&quot;hsl(180, 80%, 50%)&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.seaGradient.addColorStop(<span class="number">1</span>, <span class="string">&quot;hsl(210, 80%, 50%)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.fishes.push(<span class="keyword">new</span> FISH(<span class="built_in">this</span>));</span><br><span class="line">    <span class="built_in">this</span>.createSurfacePoints();</span><br><span class="line">  &#125;,</span><br><span class="line">  watchWindowSize: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.clearTimer();</span><br><span class="line">    <span class="built_in">this</span>.tmpWidth = <span class="built_in">this</span>.$window.width();</span><br><span class="line">    <span class="built_in">this</span>.tmpHeight = <span class="built_in">this</span>.$window.height();</span><br><span class="line">    <span class="built_in">this</span>.watchIds.push(<span class="built_in">setTimeout</span>(<span class="built_in">this</span>.jdugeToStopResize, <span class="built_in">this</span>.WATCH_INTERVAL));</span><br><span class="line">  &#125;,</span><br><span class="line">  clearTimer: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">this</span>.watchIds.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(<span class="built_in">this</span>.watchIds.pop());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  jdugeToStopResize: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> width = <span class="built_in">this</span>.$window.width(),</span><br><span class="line">      height = <span class="built_in">this</span>.$window.height(),</span><br><span class="line">      stopped = width == <span class="built_in">this</span>.tmpWidth &amp;&amp; height == <span class="built_in">this</span>.tmpHeight;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.tmpWidth = width;</span><br><span class="line">    <span class="built_in">this</span>.tmpHeight = height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (stopped) &#123;</span><br><span class="line">      <span class="built_in">this</span>.setup();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  bindEvent: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.$window.on(<span class="string">&quot;resize&quot;</span>, <span class="built_in">this</span>.watchWindowSize);</span><br><span class="line">    <span class="built_in">this</span>.$container.on(<span class="string">&quot;mouseenter&quot;</span>, <span class="built_in">this</span>.startEpicenter);</span><br><span class="line">    <span class="built_in">this</span>.$container.on(<span class="string">&quot;mousemove&quot;</span>, <span class="built_in">this</span>.moveEpicenter);</span><br><span class="line">  &#125;,</span><br><span class="line">  getAxis: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> offset = <span class="built_in">this</span>.$container.offset();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      x: event.clientX - offset.left + <span class="built_in">this</span>.$window.scrollLeft(),</span><br><span class="line">      y: event.clientY - offset.top + <span class="built_in">this</span>.$window.scrollTop(),</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  startEpicenter: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.axis = <span class="built_in">this</span>.getAxis(event);</span><br><span class="line">  &#125;,</span><br><span class="line">  moveEpicenter: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> axis = <span class="built_in">this</span>.getAxis(event);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.axis) &#123;</span><br><span class="line">      <span class="built_in">this</span>.axis = axis;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.generateEpicenter(axis.x, axis.y, axis.y - <span class="built_in">this</span>.axis.y);</span><br><span class="line">    <span class="built_in">this</span>.axis = axis;</span><br><span class="line">  &#125;,</span><br><span class="line">  generateEpicenter: <span class="function"><span class="keyword">function</span> (<span class="params">x, y, velocity</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      y &lt; <span class="built_in">this</span>.height / <span class="number">2</span> - <span class="built_in">this</span>.THRESHOLD ||</span><br><span class="line">      y &gt; <span class="built_in">this</span>.height / <span class="number">2</span> + <span class="built_in">this</span>.THRESHOLD</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> index = <span class="built_in">Math</span>.round(x / <span class="built_in">this</span>.pointInterval);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= <span class="built_in">this</span>.points.length) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.points[index].interfere(y, velocity);</span><br><span class="line">  &#125;,</span><br><span class="line">  controlStatus: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.points.length; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="built_in">this</span>.points[i].updateSelf();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.points.length; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="built_in">this</span>.points[i].updateNeighbors();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.fishes.length &lt; <span class="built_in">this</span>.fishCount) &#123;</span><br><span class="line">      <span class="keyword">if</span> (--<span class="built_in">this</span>.intervalCount == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.intervalCount = <span class="built_in">this</span>.MAX_INTERVAL_COUNT;</span><br><span class="line">        <span class="built_in">this</span>.fishes.push(<span class="keyword">new</span> FISH(<span class="built_in">this</span>));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  render: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    requestAnimationFrame(<span class="built_in">this</span>.render);</span><br><span class="line">    <span class="built_in">this</span>.controlStatus();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.context.fillStyle = <span class="built_in">this</span>.skyGradient;</span><br><span class="line">    <span class="built_in">this</span>.context.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.width, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.context.fillStyle = <span class="built_in">this</span>.seaGradient;</span><br><span class="line">    <span class="built_in">this</span>.context.beginPath();</span><br><span class="line">    <span class="built_in">this</span>.context.moveTo(<span class="number">0</span>, <span class="built_in">this</span>.height);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.points.length; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="built_in">this</span>.points[i].render(<span class="built_in">this</span>.context);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.context.lineTo(<span class="built_in">this</span>.width, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.context.closePath();</span><br><span class="line">    <span class="built_in">this</span>.context.fill();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.fishes.length; i &lt; count; i++) &#123;</span><br><span class="line">      <span class="built_in">this</span>.fishes[i].render(<span class="built_in">this</span>.context);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> SURFACE_POINT = <span class="function"><span class="keyword">function</span> (<span class="params">renderer, x</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.renderer = renderer;</span><br><span class="line">  <span class="built_in">this</span>.x = x;</span><br><span class="line">  <span class="built_in">this</span>.init();</span><br><span class="line">&#125;;</span><br><span class="line">SURFACE_POINT.prototype = &#123;</span><br><span class="line">  SPRING_CONSTANT: <span class="number">0.03</span>,</span><br><span class="line">  SPRING_FRICTION: <span class="number">0.9</span>,</span><br><span class="line">  WAVE_SPREAD: <span class="number">0.3</span>,</span><br><span class="line">  ACCELARATION_RATE: <span class="number">0.01</span>,</span><br><span class="line"></span><br><span class="line">  init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.initHeight = <span class="built_in">this</span>.renderer.height * <span class="built_in">this</span>.renderer.INIT_HEIGHT_RATE;</span><br><span class="line">    <span class="built_in">this</span>.height = <span class="built_in">this</span>.initHeight;</span><br><span class="line">    <span class="built_in">this</span>.fy = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.force = &#123; <span class="attr">previous</span>: <span class="number">0</span>, <span class="attr">next</span>: <span class="number">0</span> &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  setPreviousPoint: <span class="function"><span class="keyword">function</span> (<span class="params">previous</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.previous = previous;</span><br><span class="line">  &#125;,</span><br><span class="line">  setNextPoint: <span class="function"><span class="keyword">function</span> (<span class="params">next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.next = next;</span><br><span class="line">  &#125;,</span><br><span class="line">  interfere: <span class="function"><span class="keyword">function</span> (<span class="params">y, velocity</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.fy =</span><br><span class="line">      <span class="built_in">this</span>.renderer.height *</span><br><span class="line">      <span class="built_in">this</span>.ACCELARATION_RATE *</span><br><span class="line">      (<span class="built_in">this</span>.renderer.height - <span class="built_in">this</span>.height - y &gt;= <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>) *</span><br><span class="line">      <span class="built_in">Math</span>.abs(velocity);</span><br><span class="line">  &#125;,</span><br><span class="line">  updateSelf: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.fy += <span class="built_in">this</span>.SPRING_CONSTANT * (<span class="built_in">this</span>.initHeight - <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.fy *= <span class="built_in">this</span>.SPRING_FRICTION;</span><br><span class="line">    <span class="built_in">this</span>.height += <span class="built_in">this</span>.fy;</span><br><span class="line">  &#125;,</span><br><span class="line">  updateNeighbors: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.previous) &#123;</span><br><span class="line">      <span class="built_in">this</span>.force.previous =</span><br><span class="line">        <span class="built_in">this</span>.WAVE_SPREAD * (<span class="built_in">this</span>.height - <span class="built_in">this</span>.previous.height);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.next) &#123;</span><br><span class="line">      <span class="built_in">this</span>.force.next = <span class="built_in">this</span>.WAVE_SPREAD * (<span class="built_in">this</span>.height - <span class="built_in">this</span>.next.height);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  render: <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.previous) &#123;</span><br><span class="line">      <span class="built_in">this</span>.previous.height += <span class="built_in">this</span>.force.previous;</span><br><span class="line">      <span class="built_in">this</span>.previous.fy += <span class="built_in">this</span>.force.previous;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.next) &#123;</span><br><span class="line">      <span class="built_in">this</span>.next.height += <span class="built_in">this</span>.force.next;</span><br><span class="line">      <span class="built_in">this</span>.next.fy += <span class="built_in">this</span>.force.next;</span><br><span class="line">    &#125;</span><br><span class="line">    context.lineTo(<span class="built_in">this</span>.x, <span class="built_in">this</span>.renderer.height - <span class="built_in">this</span>.height);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> FISH = <span class="function"><span class="keyword">function</span> (<span class="params">renderer</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.renderer = renderer;</span><br><span class="line">  <span class="built_in">this</span>.init();</span><br><span class="line">&#125;;</span><br><span class="line">FISH.prototype = &#123;</span><br><span class="line">  GRAVITY: <span class="number">0.4</span>,</span><br><span class="line"></span><br><span class="line">  init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.direction = <span class="built_in">Math</span>.random() &lt; <span class="number">0.5</span>;</span><br><span class="line">    <span class="built_in">this</span>.x = <span class="built_in">this</span>.direction</span><br><span class="line">      ? <span class="built_in">this</span>.renderer.width + <span class="built_in">this</span>.renderer.THRESHOLD</span><br><span class="line">      : -<span class="built_in">this</span>.renderer.THRESHOLD;</span><br><span class="line">    <span class="built_in">this</span>.y = <span class="built_in">this</span>.getRandomValue(</span><br><span class="line">      (<span class="built_in">this</span>.renderer.height * <span class="number">6</span>) / <span class="number">10</span>,</span><br><span class="line">      (<span class="built_in">this</span>.renderer.height * <span class="number">9</span>) / <span class="number">10</span></span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">this</span>.previousY = <span class="built_in">this</span>.y;</span><br><span class="line">    <span class="built_in">this</span>.vx = <span class="built_in">this</span>.getRandomValue(<span class="number">4</span>, <span class="number">10</span>) * (<span class="built_in">this</span>.direction ? -<span class="number">1</span> : <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">this</span>.vy = <span class="built_in">this</span>.getRandomValue(-<span class="number">5</span>, -<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">this</span>.ay = <span class="built_in">this</span>.getRandomValue(-<span class="number">0.2</span>, -<span class="number">0.05</span>);</span><br><span class="line">    <span class="built_in">this</span>.theta = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.phi = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.isOut = <span class="literal">false</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  getRandomValue: <span class="function"><span class="keyword">function</span> (<span class="params">min, max</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> min + (max - min) * <span class="built_in">Math</span>.random();</span><br><span class="line">  &#125;,</span><br><span class="line">  controlStatus: <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.previousY = <span class="built_in">this</span>.y;</span><br><span class="line">    <span class="built_in">this</span>.x += <span class="built_in">this</span>.vx;</span><br><span class="line">    <span class="built_in">this</span>.y += <span class="built_in">this</span>.vy;</span><br><span class="line">    <span class="built_in">this</span>.vy += <span class="built_in">this</span>.ay;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.y &lt; <span class="built_in">this</span>.renderer.height * <span class="built_in">this</span>.renderer.INIT_HEIGHT_RATE) &#123;</span><br><span class="line">      <span class="built_in">this</span>.vy += <span class="built_in">this</span>.GRAVITY;</span><br><span class="line">      <span class="built_in">this</span>.isOut = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.isOut) &#123;</span><br><span class="line">        <span class="built_in">this</span>.ay = <span class="built_in">this</span>.getRandomValue(-<span class="number">0.2</span>, -<span class="number">0.05</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">this</span>.isOut = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.isOut) &#123;</span><br><span class="line">      <span class="built_in">this</span>.theta += <span class="built_in">Math</span>.PI / <span class="number">20</span>;</span><br><span class="line">      <span class="built_in">this</span>.theta %= <span class="built_in">Math</span>.PI * <span class="number">2</span>;</span><br><span class="line">      <span class="built_in">this</span>.phi += <span class="built_in">Math</span>.PI / <span class="number">30</span>;</span><br><span class="line">      <span class="built_in">this</span>.phi %= <span class="built_in">Math</span>.PI * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.renderer.generateEpicenter(</span><br><span class="line">      <span class="built_in">this</span>.x + (<span class="built_in">this</span>.direction ? -<span class="number">1</span> : <span class="number">1</span>) * <span class="built_in">this</span>.renderer.THRESHOLD,</span><br><span class="line">      <span class="built_in">this</span>.y,</span><br><span class="line">      <span class="built_in">this</span>.y - <span class="built_in">this</span>.previousY</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      (<span class="built_in">this</span>.vx &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">this</span>.x &gt; <span class="built_in">this</span>.renderer.width + <span class="built_in">this</span>.renderer.THRESHOLD) ||</span><br><span class="line">      (<span class="built_in">this</span>.vx &lt; <span class="number">0</span> &amp;&amp; <span class="built_in">this</span>.x &lt; -<span class="built_in">this</span>.renderer.THRESHOLD)</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="built_in">this</span>.init();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  render: <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>&#123;</span><br><span class="line">    context.save();</span><br><span class="line">    context.translate(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y);</span><br><span class="line">    context.rotate(<span class="built_in">Math</span>.PI + <span class="built_in">Math</span>.atan2(<span class="built_in">this</span>.vy, <span class="built_in">this</span>.vx));</span><br><span class="line">    context.scale(<span class="number">1</span>, <span class="built_in">this</span>.direction ? <span class="number">1</span> : -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    context.fillStyle = <span class="string">&quot;hsl(180, 30%, 80%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.moveTo(-<span class="number">30</span>, <span class="number">0</span>);</span><br><span class="line">    context.bezierCurveTo(-<span class="number">20</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">40</span>, <span class="number">0</span>);</span><br><span class="line">    context.bezierCurveTo(<span class="number">15</span>, -<span class="number">10</span>, -<span class="number">20</span>, -<span class="number">15</span>, -<span class="number">30</span>, <span class="number">0</span>);</span><br><span class="line">    context.fill();</span><br><span class="line"></span><br><span class="line">    context.save();</span><br><span class="line">    context.translate(<span class="number">40</span>, <span class="number">0</span>);</span><br><span class="line">    context.scale(<span class="number">0.9</span> + <span class="number">0.2</span> * <span class="built_in">Math</span>.sin(<span class="built_in">this</span>.theta), <span class="number">1</span>);</span><br><span class="line">    context.fillStyle = <span class="string">&quot;hsl(180, 30%, 80%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.moveTo(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">5</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">8</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">12</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">12</span>, -<span class="number">5</span>, <span class="number">20</span>, -<span class="number">8</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">5</span>, -<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    context.fill();</span><br><span class="line">    context.restore();</span><br><span class="line"></span><br><span class="line">    context.save();</span><br><span class="line">    context.translate(-<span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">    context.rotate(<span class="built_in">Math</span>.PI / <span class="number">3</span> + (<span class="built_in">Math</span>.PI / <span class="number">10</span>) * <span class="built_in">Math</span>.sin(<span class="built_in">this</span>.phi));</span><br><span class="line">    context.fillStyle = <span class="string">&quot;hsl(220, 80%, 40%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.moveTo(-<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    context.bezierCurveTo(-<span class="number">10</span>, -<span class="number">10</span>, -<span class="number">10</span>, -<span class="number">30</span>, <span class="number">0</span>, -<span class="number">40</span>);</span><br><span class="line">    context.bezierCurveTo(<span class="number">12</span>, -<span class="number">25</span>, <span class="number">8</span>, -<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    context.closePath();</span><br><span class="line">    context.fill();</span><br><span class="line">    context.restore();</span><br><span class="line"></span><br><span class="line">    context.strokeStyle = <span class="string">&quot;hsl(220, 80%, 40%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.arc(-<span class="number">15</span>, -<span class="number">3</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">    context.stroke();</span><br><span class="line"></span><br><span class="line">    context.fillStyle = <span class="string">&quot;hsl(220, 80%, 40%)&quot;</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.arc(-<span class="number">15</span>, -<span class="number">3</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">    context.fill();</span><br><span class="line">    context.restore();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.controlStatus(context);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  RENDERER.init();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 大结局</title>
    <link href="https://weilining.github.io/205.html"/>
    <id>https://weilining.github.io/205.html</id>
    <published>2020-12-15T12:04:27.000Z</published>
    <updated>2020-12-15T12:04:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 大结局 —— 本篇作为折腾 hexo 的最后一篇，本文写完就再也不折腾 hexo 了。（不过可以折腾一下 Typecho,Hugo,WordPress）</p><a id="more"></a><h2 id="如何跳过-hexo-的渲染"><a href="#如何跳过-hexo-的渲染" class="headerlink" title="如何跳过 hexo 的渲染"></a>如何跳过 hexo 的渲染</h2><p>查看官方文档页面跳过 hexo 的渲染主要有两种方式：</p><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front matter"></a>Front matter</h3><ul><li><p>新建页面，然后将你的代码直接写入 <code>index.md</code> 中</p></li><li><p>在 Front matter 中添加 <code>layout: false</code>，例如我的 <a href="https://xiabor.com/sakura">Sakura 樱花雨</a>页面，此方法适用于单一的纯 HTML<br>css 页面。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: sakura</span><br><span class="line">date: 2019-11-29 16:59:51</span><br><span class="line">type: &quot;sakura&quot;</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/20200421114708.png"><img data-src="/205/20200421114708.png" alt="c" loading="lazy"></a></p></li></ul><h3 id="skip-render"><a href="#skip-render" class="headerlink" title="skip_render"></a>skip_render</h3><ul><li>如果页面含有复杂的 js，layout 的方式可能容易报错，因此利用 hexo 自带的 <code>skip_render</code></li><li>在根目录【<strong>根目录</strong>】的_config.yml，你可以看到 <code>skip_render</code>，大致在 32 行。写入你想要的跳过渲染的路径，例如我的<a href="https://xiabor.com/fireworks">烟花 - CodePen</a> 页面：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yamlskip_render:    - &#39;fireworks&#x2F;*&#39;    - &#39;fireworks&#x2F;**&#39;</span><br></pre></td></tr></table></figure><ul><li><p>注意缩进和空格，解释一下：<code>&#39;fireworks/*&#39;</code> 表示在目录 <code>source/fireworks</code> 下的文件全部跳过渲染，<code>&#39;fireworks/**&#39;</code> 表示在目录 <code>source/fireworks/文件夹</code>下的文件全部跳过渲染（例如页面的 js、css 在另一个文件夹中）。这里有点重复了，只为了你能看明白。</p></li><li><p>Hexo 最终是把 <code>md</code> 渲染为 HTML 页面，所以既然跳过渲染，那页面就只写入 HTML。如图，将新建页面的 <code>index.md</code> 直接改为 HTML（注意调整 css）<br><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/20200421115308.png"><img data-src="/205/20200421115308.png" alt="文件示例图" loading="lazy"></a></p><p>文件示例图</p></li></ul><h3 id="可以混用"><a href="#可以混用" class="headerlink" title="可以混用"></a>可以混用</h3><ul><li><p>都是跳过渲染，当然可以混用</p></li><li><p>例如我的<a href="https://xiabor.com/dot">小圆点</a>页面，两种方法混用</p></li><li><p>修改 md 为 HTML，直接写入 HTML，并在 Front matter 中利用 <code>layout: false</code><br>跳过渲染<br><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/20200421121330.png"><img data-src="/205/20200421121330.png" alt="小圆点页面示例图" loading="lazy"></a></p><p>小圆点页面示例图</p></li></ul><ul><li><p>若采用第二种方法，在根目录【<strong>根目录</strong>】的_config.yml 添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">skip_render:</span><br><span class="line">    - &#39;dot&#x2F;*&#39;</span><br><span class="line">    - &#39;dot&#x2F;**&#39;</span><br></pre></td></tr></table></figure></li></ul><h3 id="文章中直接嵌入-HTML"><a href="#文章中直接嵌入-HTML" class="headerlink" title="文章中直接嵌入 HTML"></a>文章中直接嵌入 HTML</h3><ul><li><p>既然 md 最终会被渲染为 HTML，那直接写 HTML 当然是可以的，但只能以文章形式展示，而不是新的页面</p></li><li><p>例如我在这嵌入一个颜色表，HTML 代码完整，前后换行留空即可</p><table><thead><tr><th>颜色名</th><th>十六进制颜色值</th><th>颜色</th></tr></thead><tbody><tr><td>SteelBlue</td><td>#4682B4</td><td>rgb(70, 130, 180)</td></tr><tr><td>Tan</td><td>#D2B48C</td><td>rgb(210, 180, 140)</td></tr><tr><td>Teal</td><td>#008080</td><td>rgb(0, 128, 128)</td></tr><tr><td>Thistle</td><td>#D8BFD8</td><td>rgb(216, 191, 216)</td></tr><tr><td>Tomato</td><td>#FF6347</td><td>rgb(255, 99, 71)</td></tr><tr><td>Turquoise</td><td>#40E0D0</td><td>rgb(64, 224, 208)</td></tr><tr><td>Violet</td><td>#EE82EE</td><td>rgb(238, 130, 238)</td></tr><tr><td>VioletRed</td><td>#D02090</td><td>rgb(208, 32, 144)</td></tr><tr><td>Wheat</td><td>#F5DEB3</td><td>rgb(245, 222, 179)</td></tr><tr><td>White</td><td>#FFFFFF</td><td>rgb(255, 255, 255)</td></tr><tr><td>WhiteSmoke</td><td>#F5F5F5</td><td>rgb(245, 245, 245)</td></tr><tr><td>Yellow</td><td>#FFFF00</td><td>rgb(255, 255, 0)</td></tr><tr><td>YellowGreen</td><td>#9ACD32</td><td>rgb(154, 205, 50)</td></tr></tbody></table></li></ul><h2 id="永久链接"><a href="#永久链接" class="headerlink" title="永久链接"></a>永久链接</h2><h3 id="默认链接"><a href="#默认链接" class="headerlink" title="默认链接"></a>默认链接</h3><p>默认的链接格式为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br></pre></td></tr></table></figure><p>如果文章名是中文，由于编码生成的链接会很长，况且不利于 SEO</p><h3 id="利用字段替换链接"><a href="#利用字段替换链接" class="headerlink" title="利用字段替换链接"></a>利用字段替换链接</h3><p>根据官方文档 <a href="https://hexo.io/zh-cn/docs/permalinks">hexo.io/docs</a>，可以利用一个字段定义永久链接</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>:year</td><td>文章的发表年份（4 位数）</td></tr><tr><td>:month</td><td>文章的发表月份（2 位数）</td></tr><tr><td>:i_month</td><td>文章的发表月份（去掉开头的零）</td></tr><tr><td>:day</td><td>文章的发表日期 (2 位数)</td></tr><tr><td>:i_day</td><td>文章的发表日期（去掉开头的零）</td></tr><tr><td>:hour</td><td>文章发表时的小时 (2 位数)</td></tr><tr><td>:minute</td><td>文章发表时的分钟 (2 位数)</td></tr><tr><td>:title</td><td>文件名称</td></tr><tr><td>:post_title</td><td>文章标题</td></tr><tr><td>:id</td><td>文章 ID (not persistent across cache reset)</td></tr><tr><td>:category</td><td>分类。如果文章没有分类，则是 default_category 配置信息。</td></tr></tbody></table><p>例如：在 front matter 中加入 id：xxxx</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">---</span><br><span class="line">title: title</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">id: xxxx</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>在 hexo 根目录加入或修改 permalink</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">permalink: posts&#x2F;:id.html&#x2F;</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>这样文章地址就会变为 <code>https://xxx.com/posts/id.html</code>，无需插件也能设置永久链接。</p><h3 id="abbrlink-插件"><a href="#abbrlink-插件" class="headerlink" title="abbrlink 插件"></a>abbrlink 插件</h3><ul><li>项目地址：<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a></li><li>安装插件</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><ul><li>在根目录 <code>blog\scaffolds\post.md</code> 中添加 abbrlink 字段（不加也行）</li><li>根目录 config.yml 下设置</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">permalink: posts&#x2F;:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">alg: crc32  # crc16(default) and crc32</span><br><span class="line">rep: hex    # dec(default) and hex</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>hexo clean 之后本地预览时便可重新生成永久链接，文章 front matter 会多一个 abbrlink 字段</p><p>永久链接格式为 <code>https://xxx.com/posts/abbrlink.html</code></p><ul><li>插件参数</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">abbrlink:</span><br><span class="line">alg: crc32  #support crc16(default) and crc32</span><br><span class="line">rep: hex    #support dec(default) and hex</span><br><span class="line"></span><br><span class="line">crc16 &amp; hex</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;66c8.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;65535.html</span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;8ddf18fb.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;1690090958.html</span><br></pre></td></tr></table></figure><h3 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h3><ul><li>虽然 abbrlink 是自动生成的，可以在文章的 front matter 自定义修改。</li><li>以前用了 hexo 默认链接 <code>year/:month/:day/:title/</code>，安装插件插件后所有文章链接都会发生变化，那么评论怎么办？</li></ul><p><em>对于我这样的小破站，好不容易才有几条评论，就这样丢失了心有不甘啊</em></p><p>想到了几个解决方案：</p><ol><li><p>既然可以自定义 abbrlink，那只要将根目录配置改为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">permalink: :abbrlink</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>这样的话再把需要留下评论的页面 front matter 改回原来的链接格式 <code>year/:month/:day/:title/</code>，<strong>不仅仅是格式，日期名称也必须和原来保持一致</strong></p></li><li><p>群友提示，如果像我一样用的 valine 评论，可以直接在 leancloud 后台修改 URL，valine 绑定的相对路径，哪怕更换域名，只要保证文章链接一致，评论便可保留。<br><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/QQ%E6%88%AA%E5%9B%BE20200619095538.png"><img data-src="/205/QQ%E6%88%AA%E5%9B%BE20200619095538.png" alt="leancloud" loading="lazy"></a></p><p>leancloud</p></li></ol><h3 id="常用链接格式"><a href="#常用链接格式" class="headerlink" title="常用链接格式"></a>常用链接格式</h3><table><thead><tr><th>permalink</th><th>格式预览</th></tr></thead><tbody><tr><td>:abbrlink/</td><td>xxx.com/xxx</td></tr><tr><td>:abbrlink.html/</td><td>xxx.com/xxx.html</td></tr><tr><td>posts/:abbrlink.html/</td><td>xxx.com/posts/xxx.html</td></tr><tr><td>article/:abbrlink.html/</td><td>xxx.com/article/xxx.html</td></tr></tbody></table><h3 id="pinyin-插件"><a href="#pinyin-插件" class="headerlink" title="pinyin 插件"></a>pinyin 插件</h3><ul><li><p>将中文链接转拼音，安装插件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure></li><li><p>在 Hexo 根目录下的 _config.yml 文件中，修改以下的配置项：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">permalink: article&#x2F;:title.html</span><br><span class="line">permalink_pinyin:</span><br><span class="line">enable: true</span><br><span class="line">separator: &#39;-&#39;  # default: &#39;-&#39;</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>永久链接格式为</p></li></ul>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;xxx.com&#x2F;posts&#x2F;wen-zhang-ming.html</span><br></pre></td></tr></table></figure><ul><li>实用性不是很好，如果标题文字很多，链接依然会很长。</li></ul><h2 id="如何在页脚养鱼"><a href="#如何在页脚养鱼" class="headerlink" title="如何在页脚养鱼"></a>如何在页脚养鱼</h2><p>效果就在页脚，是不是很想要？这里简述 butterfly 主题的引入方法，其他主题类似，实在不行建议更换 butterfly 主题</p><p>！！！不要修改源码，若已修改请恢复原样<br>在主题配置的 <code>inject</code> 引入 js: <a href="https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fishes.js">https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fishes.js</a> <strong>即可</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">- &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;xiabo2&#x2F;CDN@latest&#x2F;fishes.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>调整页脚阴影透明度 <code>themes\butterfly\source\css\_layout\footer.styl</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">background-color: alpha($dark-black, .1)</span><br></pre></td></tr></table></figure><p>文章页页脚宽度多余导致出现横向滚动条，新建 <code>xxx.css</code>，添加以下 css 引入 <code>inject</code> 即可（若设置了全局背景去掉固定高度 <code>height: 160px</code> 引入即可）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&#x2F;* 鱼塘固定宽度 *&#x2F;</span><br><span class="line">canvas:not(#ribbon-canvas), #web_bg &#123;</span><br><span class="line">    margin-bottom: -0.5rem;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 160px</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><details green="" style="box-sizing: border-box; outline: none; margin: 0.5rem 0px; padding: 16px; display: block; border-radius: 4px; font-size: 0.7375rem; transition: all 0.28s ease 0s; border: 1px solid rgb(235, 249, 237); line-height: 1.3; background: rgb(255, 255, 255);"><summary style="box-sizing: border-box; outline: none; margin: -16px; padding: 16px; display: block; cursor: pointer; border-radius: 4px; color: rgb(85, 85, 85); font-size: 0.775rem; font-weight: 700; position: relative; background: rgb(235, 249, 237); line-height: normal;"><span>&nbsp;</span><p style="box-sizing: border-box; outline: none; margin: 0px 0px 0.5rem; padding: 0px 0px 0px 0.5rem; display: inline; border-bottom: none !important;">修改源码实现方法（其它主题可参考此处）</p></summary></details><iframe name="easyXDM_default8410_provider" id="easyXDM_default8410_provider" src="https://embed.widgetpack.com/widget/xdm/index.html?xdm_e=https%3A%2F%2Fxiabor.com&amp;xdm_c=default8410&amp;xdm_p=1" frameborder="0" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: absolute !important; top: -2000px !important; left: 0px !important;"></iframe><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://xiabor.com/714f.html">https://xiabor.com/714f.html</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>如何在页脚养鱼</title>
    <link href="https://weilining.github.io/204.html"/>
    <id>https://weilining.github.io/204.html</id>
    <published>2020-12-15T08:47:25.000Z</published>
    <updated>2020-12-15T08:47:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="butterfly-主题的引入方法"><a href="#butterfly-主题的引入方法" class="headerlink" title="butterfly 主题的引入方法"></a>butterfly 主题的引入方法</h2><p>效果就在页脚，是不是很想要？这里简述 butterfly 主题的引入方法，其他主题类似，实在不行建议更换 butterfly 主题</p><p>！！！不要修改源码，若已修改请恢复原样<br>在主题配置的 <code>inject</code> 引入 js: <a href="https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fishes.js">https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fishes.js</a> <strong>即可</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;xiabo2&#x2F;CDN@latest&#x2F;fishes.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>调整页脚阴影透明度 <code>themes\butterfly\source\css\_layout\footer.styl</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">background-color: alpha($dark-black, .1)</span><br></pre></td></tr></table></figure><p>文章页页脚宽度多余导致出现横向滚动条，新建 <code>xxx.css</code>，添加以下 css 引入 <code>inject</code> 即可（若设置了全局背景去掉固定高度 <code>height: 160px</code> 引入即可）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 鱼塘固定宽度 *&#x2F;</span><br><span class="line">canvas:not(#ribbon-canvas), #web_bg &#123;</span><br><span class="line">    margin-bottom: -0.5rem;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 160px</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="修改源码实现方法（其它主题可参考此处）"><a href="#修改源码实现方法（其它主题可参考此处）" class="headerlink" title="修改源码实现方法（其它主题可参考此处）"></a><strong>修改源码实现方法（其它主题可参考此处）</strong></h2><ol><li><p>先将扒来的 code 转为 pug</p><p><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/Snipaste_2020-07-05_10-36-45.png"><img data-src="/204/Snipaste_2020-07-05_10-36-45.png" alt="htmltopug" loading="lazy"></a></p><p>写进<code>\themes\butterfly\layout\includes\footer.pug</code>末尾</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#jsi-flying-fish-container.container</span><br><span class="line">   script(src&#x3D;&#39;js&#x2F;fish.js&#39;)</span><br><span class="line">style.</span><br><span class="line">   </span><br><span class="line">       @media only screen and (max-width: 767px)&#123;</span><br><span class="line">       #sidebar_search_box input[type&#x3D;text]&#123;width:calc(100% - 24px)&#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>然后在 <code>inject</code> 引入 js: <a href="https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fish.js">https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fish.js</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;xiabo2&#x2F;CDN@latest&#x2F;fish.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li><li><p>引入之后效果如下，页脚太高，<code>themes\butterfly\source\css\_layout\footer.styl</code> 调整下 css 即可 (补充：调整页脚阴影透明度为 0.1)<br><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/fish.gif"><img data-src="/204/fish.gif" alt="页脚跳动的鱼" loading="lazy"></a></p><p>页脚跳动的鱼</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#footer-wrap</span><br><span class="line">   position: absolute</span><br><span class="line">   padding: 1.2rem 1rem 1.4rem</span><br><span class="line">   color: $light-grey</span><br><span class="line">   text-align: center</span><br><span class="line">   left: 0</span><br><span class="line">   right: 0</span><br><span class="line">   top:0</span><br><span class="line">   bottom: 0</span><br><span class="line">   </span><br><span class="line">   #footer</span><br><span class="line">     if hexo-config(&#39;footer_bg&#39;) !&#x3D; false</span><br><span class="line">       &amp;:before</span><br><span class="line">       position: absolute</span><br><span class="line">       width: 100%</span><br><span class="line">       height: 100%</span><br><span class="line">       background-color: alpha($dark-black, .1)</span><br><span class="line">       content: &#39;&#39;</span><br></pre></td></tr></table></figure></li><li><p>另外，还是会出现报错，<br><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/fish20200702225229.png"><img data-src="/204/fish20200702225229.png" alt="报错" loading="lazy"></a></p><p>报错</p><p>引用 JS 报错 Uncaught ReferenceError: $ is not defined<br>原因一：未引用 jquery 库 jquery.min.js 文件，或者说路径错误；</p><p>解决办法：<br>很简单，引用 jquery-X.X.X.min.js 这个 js 路径文件到当前页面即可。</p><p><code>&lt;script src=&quot;https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js&quot;&gt;&lt;/script&gt; </code></p><p>建议将 js 保存到本地引用</p><p><code>&lt;script src=&quot;你的路径/jquery.min.js&quot;&gt;&lt;/script&gt;</code></p><p> 原因二：忽略了 HTML 中 <script> 引入 jQuery 文件的顺序，要把 JQuery 库的引用放到第一个 <script> 引用前面，这样顺序执行后面的 js 文件才能识别 $。</p></li></ol><p>（主题已经引入 jquery）调整了好久，还是没能解决报错，有人催更如何页脚养鱼就直接写出来了，报错交给各位解决吧。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://xiabor.com/714f.html#%E5%A6%82%E4%BD%95%E5%9C%A8%E9%A1%B5%E8%84%9A%E5%85%BB%E9%B1%BC">https://xiabor.com/714f.html#%E5%A6%82%E4%BD%95%E5%9C%A8%E9%A1%B5%E8%84%9A%E5%85%BB%E9%B1%BC</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>vscode 一行JavaScript格式化</title>
    <link href="https://weilining.github.io/203.html"/>
    <id>https://weilining.github.io/203.html</id>
    <published>2020-12-15T08:13:34.000Z</published>
    <updated>2020-12-15T08:13:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>使用<code>Prettier-Code- formatter</code>插件</p><a id="more"></a><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p><code>Command + ,</code>选择右上角<code>Open Settings</code>,复制以下代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;,</span><br><span class="line">  &quot;[javascript]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>css js html 前端在线编辑实时显示推荐</title>
    <link href="https://weilining.github.io/202.html"/>
    <id>https://weilining.github.io/202.html</id>
    <published>2020-12-14T08:50:23.000Z</published>
    <updated>2020-12-14T08:50:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jq22.com/code2630">https://www.jq22.com/code2630</a></p><p><a href="https://codepen.io/JavaScriptJunkie/pen/WgRBxw">https://codepen.io/JavaScriptJunkie/pen/WgRBxw</a></p><a id="more"></a><p> <a href="https://wow.techbrood.com/fiddle/2717">https://wow.techbrood.com/fiddle/2717</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>hexo 官方加水波纹特效</title>
    <link href="https://weilining.github.io/201.html"/>
    <id>https://weilining.github.io/201.html</id>
    <published>2020-12-13T18:01:19.000Z</published>
    <updated>2020-12-13T18:01:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官方"><a href="#官方" class="headerlink" title="官方"></a>官方</h2><p><a href="https://github.com/sirxemic/jquery.ripples">https://github.com/sirxemic/jquery.ripples</a></p><a id="more"></a><h2 id="特效样例"><a href="#特效样例" class="headerlink" title="特效样例"></a>特效样例</h2><p><a href="https://iiiii.cf/">https://iiiii.cf</a></p><p><a href="https://sirxemic.github.io/jquery.ripples/">https://sirxemic.github.io/jquery.ripples/</a></p><p><a href="http://home.ustc.edu.cn/~pscgylotti/blogs/">http://home.ustc.edu.cn/~pscgylotti/blogs/</a></p><h2 id="特效插件"><a href="#特效插件" class="headerlink" title="特效插件"></a>特效插件</h2><p><a href="https://github.com/sirxemic/jquery.ripples">https://github.com/sirxemic/jquery.ripples</a></p><h2 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h2><p>测试版本<code>butterfly v3.4.0</code></p><p><code>_config.butterfly.yml</code>对应位置修改</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YAML</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;script defer src&#x3D;&quot;https:&#x2F;&#x2F;rmt.dogedoge.com&#x2F;fetch&#x2F;~&#x2F;source&#x2F;jsdelivr&#x2F;npm&#x2F;jquery@latest&#x2F;dist&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    - &lt;script defer src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sirxemic&#x2F;jquery.ripples&#x2F;dist&#x2F;jquery.ripples.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    - &lt;script defer src&#x3D;&quot;https:&#x2F;&#x2F;iiiii.cf&#x2F;js&#x2F;ripples.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="其他主题"><a href="#其他主题" class="headerlink" title="其他主题"></a>其他主题</h2><p>都放在页脚</p><p>如果没有jq，必须先引入jq：<a href="https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js">https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</a></p><p>主js：<a href="https://cdn.jsdelivr.net/gh/sirxemic/jquery.ripples/dist/jquery.ripples.js">https://cdn.jsdelivr.net/gh/sirxemic/jquery.ripples/dist/jquery.ripples.js</a></p><p>配置自己写，可以用我的<a href="https://iiiii.cf/js/ripples.js">https://iiiii.cf/js/ripples.js</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(document).ready(function() &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        $(&#39;body&#39;).ripples(&#123;</span><br><span class="line">            resolution: 512,</span><br><span class="line">            dropRadius: 20, &#x2F;&#x2F;px</span><br><span class="line">            perturbance: 0.04,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    catch (e) &#123;</span><br><span class="line">        $(&#39;.error&#39;).show().text(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 官方加进度条</title>
    <link href="https://weilining.github.io/200.html"/>
    <id>https://weilining.github.io/200.html</id>
    <published>2020-12-13T17:12:39.000Z</published>
    <updated>2020-12-13T17:12:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官方"><a href="#官方" class="headerlink" title="官方"></a>官方</h2><p><a href="https://github.com/CodeByZach/pace">https://github.com/CodeByZach/pace</a></p><a id="more"></a><h2 id="Butterfly引入弹球"><a href="#Butterfly引入弹球" class="headerlink" title="Butterfly引入弹球"></a>Butterfly引入弹球</h2><p>Butterfly 3.4.0</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;CodeByZach&#x2F;pace&#x2F;themes&#x2F;pink&#x2F;pace-theme-bounce.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;script defer src&#x3D;&quot;https:&#x2F;&#x2F;rmt.dogedoge.com&#x2F;fetch&#x2F;~&#x2F;source&#x2F;jsdelivr&#x2F;gh&#x2F;CodeByZach&#x2F;pace&#x2F;pace.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="Butterfly引入加载转圈动画"><a href="#Butterfly引入加载转圈动画" class="headerlink" title="Butterfly引入加载转圈动画"></a>Butterfly引入加载转圈动画</h2><p>官方css：<a href="https://cdn.jsdelivr.net/gh/CodeByZach/pace@1.2.3/themes/pink/pace-theme-flash.css">https://cdn.jsdelivr.net/gh/CodeByZach/pace@1.2.3/themes/pink/pace-theme-flash.css</a></p><p>魔改css：<a href="https://cdn.jsdelivr.net/gh/xingjiahui/modify@2.0.0/pace/themes/pink/pace-theme-flash.css">https://cdn.jsdelivr.net/gh/xingjiahui/modify@2.0.0/pace/themes/pink/pace-theme-flash.css</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;xingjiahui&#x2F;modify@2.0.0&#x2F;pace&#x2F;themes&#x2F;pink&#x2F;pace-theme-flash.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;script defer src&#x3D;&quot;https:&#x2F;&#x2F;rmt.dogedoge.com&#x2F;fetch&#x2F;~&#x2F;source&#x2F;jsdelivr&#x2F;gh&#x2F;CodeByZach&#x2F;pace&#x2F;pace.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="Butterfly引入百分比"><a href="#Butterfly引入百分比" class="headerlink" title="Butterfly引入百分比"></a>Butterfly引入百分比</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;rmt.dogedoge.com&#x2F;fetch&#x2F;~&#x2F;source&#x2F;jsdelivr&#x2F;gh&#x2F;CodeByZach&#x2F;pace&#x2F;themes&#x2F;silver&#x2F;pace-theme-big-counter.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;script defer src&#x3D;&quot;https:&#x2F;&#x2F;rmt.dogedoge.com&#x2F;fetch&#x2F;~&#x2F;source&#x2F;jsdelivr&#x2F;gh&#x2F;CodeByZach&#x2F;pace&#x2F;pace.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="其他主题引入进度条"><a href="#其他主题引入进度条" class="headerlink" title="其他主题引入进度条"></a>其他主题引入进度条</h2><p>js必须引入，css任选其一</p><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><p><a href="https://cdn.jsdelivr.net/gh/CodeByZach/pace/pace.min.js">https://cdn.jsdelivr.net/gh/CodeByZach/pace/pace.min.js</a></p><h4 id="弹球的css"><a href="#弹球的css" class="headerlink" title="弹球的css"></a>弹球的css</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;CodeByZach&#x2F;pace&#x2F;themes&#x2F;pink&#x2F;pace-theme-bounce.css</span><br></pre></td></tr></table></figure><h3 id="其他进度条css"><a href="#其他进度条css" class="headerlink" title="其他进度条css"></a>其他进度条css</h3><p>这里找<a href="https://cdn.jsdelivr.net/gh/CodeByZach/pace/themes">https://cdn.jsdelivr.net/gh/CodeByZach/pace/themes</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>dogedoge 代替baidu和jsdelivr</title>
    <link href="https://weilining.github.io/199.html"/>
    <id>https://weilining.github.io/199.html</id>
    <published>2020-12-13T16:31:24.000Z</published>
    <updated>2020-12-13T16:31:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h2><p><a href="https://rmt.dogedoge.com/">https://rmt.dogedoge.com/</a></p><a id="more"></a><h2 id="GitHub-静态资源加速"><a href="#GitHub-静态资源加速" class="headerlink" title="GitHub 静态资源加速"></a>GitHub 静态资源加速</h2><p><a href="https://rmt.dogedoge.com/fetch/~/source/jsdelivr/gh/CodeByZach/pace/pace.min.js">https://rmt.dogedoge.com/fetch/~/source/jsdelivr/gh/CodeByZach/pace/pace.min.js</a></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    <category term="默认" scheme="https://weilining.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
    <category term="默认" scheme="https://weilining.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
</feed>
