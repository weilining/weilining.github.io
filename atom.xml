<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ln&#39;s Blog</title>
  
  <subtitle>有朋自远方来，不亦乐乎</subtitle>
  <link href="https://weilining.github.io/atom.xml" rel="self"/>
  
  <link href="https://weilining.github.io/"/>
  <updated>2021-10-29T07:28:53.000Z</updated>
  <id>https://weilining.github.io/</id>
  
  <author>
    <name>Lining Wei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python3 UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 0-3: ordinal not in range(128)</title>
    <link href="https://weilining.github.io/336.html"/>
    <id>https://weilining.github.io/336.html</id>
    <published>2021-10-29T07:28:53.000Z</published>
    <updated>2021-10-29T07:28:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="/336/image-20211029153001901.png" alt="image-20211029153001901" loading="lazy"></p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line">sys.stdout = codecs.getwriter(<span class="string">&quot;utf-8&quot;</span>)(sys.stdout.detach())</span><br></pre></td></tr></table></figure><h1 id="Python3报错处理：UnicodeEncodeError-39-ascii-39-codec-can-39-t-encode-characters-in-position-0-1-ordinal-not-in-range-128"><a href="#Python3报错处理：UnicodeEncodeError-39-ascii-39-codec-can-39-t-encode-characters-in-position-0-1-ordinal-not-in-range-128" class="headerlink" title="Python3报错处理：UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 0-1: ordinal not in range(128)"></a><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbHNkYi9wLzEyNDcwNzM5Lmh0bWw=">Python3报错处理：UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 0-1: ordinal not in range(128)<i class="fa fa-external-link-alt"></i></span></h1><h2 id="一、背景说明"><a href="#一、背景说明" class="headerlink" title="一、背景说明"></a>一、背景说明</h2><p>最开始不愿意使用Python，一大原因是因为Python2默认使用ASCII编码处理中文可以说是一件痛苦的事情。仅从更换默认编码一项变换，就可以说Python3和Python2不算同一门语言。</p><p>Python3更换为默认使用Unicode（utf-8）编码，一直使用下来再没有遇到编码问题带来的困挠，似乎编码问题在Python3时代就该完全消失的。但这两天遇到了一个问题。</p><p>在调用一个库时，出现了一个异常报错类似如UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 0-1: ordinal not in range(128)，几经排查之下发现只要该库返回结果包含中文，我这边使用print()打印该结果时就会出现该异常。</p><h2 id="二、原因分析"><a href="#二、原因分析" class="headerlink" title="二、原因分析"></a>二、原因分析</h2><h3 id="2-1-数据要经过编码才能传输"><a href="#2-1-数据要经过编码才能传输" class="headerlink" title="2.1 数据要经过编码才能传输"></a>2.1 数据要经过编码才能传输</h3><p>我们知道数据在网络上传输时，需要先编码；平时我们可能并不注意，但现在要明确，编码的原因不在于网络而在于传输。</p><p>print()相当于把字符串从内存传输到了tty上，所以print()是需要encode()动作的；平时我们print()时一般都不需要encode()，只是因为当print()检测到传来的参数是不是byte类型时自动进行了编码。</p><h3 id="2-2-print-使用何种编码"><a href="#2-2-print-使用何种编码" class="headerlink" title="2.2 print()使用何种编码"></a>2.2 print()使用何种编码</h3><p>Python3默认使用的是utf-8，这可以通过sys.getdefaultencoding()进行确认。但这只是默认，当系统配置了LC_ALL、LC_CTYPE、LANG等环境变量时（三者优先级从高到低），Python3采用这些变量配置的编码；如果这些变量配置的是utf-8那Python3用的就还是utf-8，但如果不是utf-8那Python3所用的也就不是utf-8了。</p><p>当前使用的编码可通过sys.getfilesystemencoding()获取。</p><h2 id="三、场景复现"><a href="#三、场景复现" class="headerlink" title="三、场景复现"></a>三、场景复现</h2><p>为简单起见，我们这里直接以打印一个中文字符串作为演示，示例代码如下（我这里保存成test_encode.py）：</p><p><a href="javascript:void(0);"><img data-src="/336/copycode.gif" alt="复制代码" loading="lazy"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">class TestEncode():</span><br><span class="line">    def __int__(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def main_logic(self):</span><br><span class="line">        # 打印语言默认编码</span><br><span class="line">        print(f&quot;defaultencoding--&#123;sys.getdefaultencoding()&#125;&quot;)</span><br><span class="line">        # 打印系统配置的编码</span><br><span class="line">        print(f&quot;filesystemencoding--&#123;sys.getfilesystemencoding()&#125;&quot;)</span><br><span class="line"></span><br><span class="line">        # 最后尝试打印中文</span><br><span class="line">        print(&quot;中文&quot;)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    obj &#x3D; TestEncode()</span><br><span class="line">    obj.main_logic()</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img data-src="/336/copycode.gif" alt="复制代码" loading="lazy"></a></p><p>shell依次执行如下命令：</p><p><a href="javascript:void(0);"><img data-src="/336/copycode.gif" alt="复制代码" loading="lazy"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前编码情况</span><br><span class="line">locale</span><br><span class="line"># 确认在utf-8情况下打印中文无误</span><br><span class="line">python3 test_encode.py</span><br><span class="line"></span><br><span class="line"># 设置LC_TYPE，C代表ASCII</span><br><span class="line">export LC_CTYPE&#x3D;&quot;C&quot;</span><br><span class="line"># 查看当前编码情况</span><br><span class="line">locale</span><br><span class="line"># 再次运行，确认系统编码已改变，并出现编码错误</span><br><span class="line">python3 test_encode.py</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img data-src="/336/copycode.gif" alt="复制代码" loading="lazy"></a></p><p>最终结果如下，在系统编码配置为utf-8时打印正常，在系统编码改为C（即ASCII）后打印报编码异常（不过我在root用户环境修改编码一直不成功，不懂我电脑有点问题还是什么原因）：</p><p><img data-src="/336/1116722-20200312193737562-1001792774.png" alt="img" loading="lazy"></p><h2 id="四、解决办法"><a href="#四、解决办法" class="headerlink" title="四、解决办法"></a>四、解决办法</h2><p>其实追根究底，打印报错本质原因就是标准输出的编码不支持要打印的字符，对中文而言就是不是utf8（当然要说的话还可以是gbk这些），那解决办法就是去把标准输出的编码给设成utf8就完事了。</p><p>那各语言的标准输出编码由什么决定呢，一般是语言底层根据一些自己的变量去设置标准输出（python是PYTHONENCODING等几个），如果没有那就取系统的LC_ALL等配置编码的值去设置标准输出。</p><p>那基于这个事实，我们就有了以下三种解决办法。</p><p>方法一：自己临时自行修改标准输出为utf-8</p><p>这种方法最保险，能确认自己不被覆盖；但如果是一个项目那得确保在一开始设置，不然每次print前设置一次也很麻烦。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import codecs</span><br><span class="line"></span><br><span class="line">sys.stdout &#x3D; codecs.getwriter(&quot;utf-8&quot;)(sys.stdout.detach())</span><br><span class="line">print(&quot;中文&quot;)</span><br></pre></td></tr></table></figure><p>方法二：设置语言会采用的的环境变量<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy91c2luZy9jbWRsaW5lLmh0bWwjZW52dmFyLVBZVEhPTklPRU5DT0RJTkc=">PYTHONIOENCODING<i class="fa fa-external-link-alt"></i></span></p><p>这种方法按理感觉有时有bug，该环境变量在一些解析器中没被采用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PYTHONIOENCODING&#x3D;utf-8 python test_encode.py</span><br></pre></td></tr></table></figure><p>方法三：设置语言会采用的系统环境变量值为utf-8</p><p>这种方法各种语言应该都通用。</p><p>如果配了变量仍有报错，那一般都是运行的代码没正确读取变量所致，可以在脚本中获取下这变量值确认，python是os.environ。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 优先级 LC_ALL &gt; LC_*（包括决定月分显示语言的LC_TIME等）&gt; LANG</span><br><span class="line">export LC_ALL&#x3D;&quot;en_US.utf8&quot;</span><br></pre></td></tr></table></figure><p>参考：</p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RoX251bS9hcnRpY2xlL2RldGFpbHMvODA2ODUzODk=">https://blog.csdn.net/th_num/article/details/80685389<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly90aW1vdGh5cWl1LmNvbS9hcmNoaXZlcy9zdXJyb2dhdGVlc2NhcGUtaW4tcHl0aG9uLTMv">https://timothyqiu.com/archives/surrogateescape-in-python-3/<i class="fa fa-external-link-alt"></i></span> </p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Freenom 代码申请域名</title>
    <link href="https://weilining.github.io/335.html"/>
    <id>https://weilining.github.io/335.html</id>
    <published>2021-10-29T06:37:29.000Z</published>
    <updated>2021-10-29T06:37:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3phZXZhbC9mcmVlbm9tLWRucy1tYW5hZ2UtbGlicmFyeQ==">freenom-dns-manage-library/fnml.py at master · zaeval/freenom-dns-manage-library (github.com)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JldGVwcy9mcmVlbm9tLXJlZ2lzdGVy">reteps/freenom-register: Register a freenom domain through the command line. (github.com)<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效获取当前IP</title>
    <link href="https://weilining.github.io/334.html"/>
    <id>https://weilining.github.io/334.html</id>
    <published>2021-10-29T06:32:42.000Z</published>
    <updated>2021-10-29T06:32:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">import codecs</span><br><span class="line"></span><br><span class="line">sys.stdout &#x3D; codecs.getwriter(&quot;utf-8&quot;)(sys.stdout.detach())</span><br><span class="line"></span><br><span class="line">#https:&#x2F;&#x2F;github.com&#x2F;zaeval&#x2F;freenom-dns-manage-library&#x2F;blob&#x2F;master&#x2F;fnml.py</span><br><span class="line">def get_my_public_ip():</span><br><span class="line">    ip_address &#x3D; requests.get(&quot;http:&#x2F;&#x2F;ipecho.net&#x2F;plain&quot;).text</span><br><span class="line">    print(ip_address)</span><br><span class="line">    # return ip_address</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"># 打印输出当前ip地址</span><br><span class="line">def print_my_ip():</span><br><span class="line">    api_url &#x3D; &#39;https:&#x2F;&#x2F;api.ipify.org&#x2F;&#39;</span><br><span class="line">    try:</span><br><span class="line">        res &#x3D; requests.get(url&#x3D;api_url)</span><br><span class="line">        res.raise_for_status()</span><br><span class="line">        res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">        # t&#x3D; &#39;当前使用 ip 地址：&#39; + res.text + &#39;\n&#39;</span><br><span class="line">        print(&#39;当前使用 ip 地址：&#39; + res.text)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        # text&#x3D;&#39;获取当前 ip 地址失败：&#39; + str(e) + &#39;\n&#39;</span><br><span class="line">        print(&#39;获取当前 ip 地址失败：&#39; + str(e))</span><br><span class="line">def main_handler(event, context):</span><br><span class="line">    get_my_public_ip()</span><br><span class="line">    print_my_ip()</span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    main_handler(&quot;&quot;,&quot;&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>可以在 GitHub.dev 做的十件有趣的事</title>
    <link href="https://weilining.github.io/333.html"/>
    <id>https://weilining.github.io/333.html</id>
    <published>2021-10-29T06:20:51.000Z</published>
    <updated>2021-10-29T06:20:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub 最近发布了 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldg==">github.dev<i class="fa fa-external-link-alt"></i></span>，它允许你在任何仓库下按下 <code>.</code> 然后直接用浏览器在 VS Code 中打开这个仓库。这个简单的操作显著的提高你在 GitHub 上阅读、编辑和分享代码的效率。包括在 iPad 上你也可以轻松的实现以上操作。</p><blockquote><p><strong>注意</strong>: 除 <code>.</code> 键，你也可以在网址栏中将域名后的 <code>.com</code> 改为 <code>.dev</code> 也可以达到同样的效果👍.</p></blockquote><p><img data-src="/333/bef1b77f914c4e79b1fbb2a2bdb840f1~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><p>然而，可能不是很明显的是 github.dev 实现了更扣人心弦的功能：一个定制和创建全新的 GitHub 原生工作流的机会。 无需依赖<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS9jb2xsZWN0aW9ucy9naXRodWItYnJvd3Nlci1leHRlbnNpb25z">浏览器扩展<i class="fa fa-external-link-alt"></i></span>或第三方服务来增强 github.com，你可以轻松地利用你喜爱的编辑器及其<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS92c2NvZGU=">丰富的生态系统<i class="fa fa-external-link-alt"></i></span>，直接增强 GitHub。 为了说明我的意思，让我们看一下 Github.dev 今天使之成为可能的 10 个例子🚀</p><h2 id="1-💄-个性化"><a href="#1-💄-个性化" class="headerlink" title="1. 💄 个性化"></a>1. 💄 个性化</h2><p>开发人员喜欢个性化他们的编辑器，以使其更高效、更符合人体工程学和视觉吸引力。由于 github.dev 基于 VS Code，因此您可以自定义键绑定、颜色主题、文件图标、片段等。 更酷的是，您可以启用 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vY29kZS52aXN1YWxzdHVkaW8uY29tL2RvY3MvZWRpdG9yL3NldHRpbmdzLXN5bmM=">设置同步<i class="fa fa-external-link-alt"></i></span> 并在 VS Code、github.dev 和 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS9mZWF0dXJlcy9jb2Rlc3BhY2Vz">Codespaces<i class="fa fa-external-link-alt"></i></span> 之间漫游你的设置。 这样，无论您在哪里阅读/编辑代码，您都会立即感到宾至如归💖</p><p><img data-src="/333/36bd8d81085f49f796e3683a6ae87666~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><h2 id="2-分享深层链接"><a href="#2-分享深层链接" class="headerlink" title="2.分享深层链接"></a>2.分享深层链接</h2><p>除了在仓库页面按下 <code>.</code>，您还可以在查看 GitHub.com 上的特定文件时按 <code>.</code>。 此外，如果您在当前打开的文件中选择一些文本，然后按 <code>.</code>，那么当 VS Code 被打开时，它将聚焦该文件并突出显示您的文本选择。 然后，您可以在浏览器中复制 URL，并将其发送给其他人，以便共享 <strong>完全相同的上下文</strong>。 这将开启全新且有趣的方式来交流代码🔥</p><p><img data-src="/333/3b02c9f93b4d418db58db44e88883612~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><blockquote><p><strong>演示：</strong> 点击 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldi9sb3N0aW50YW5nZW50L2dpdGRvYy9ibG9iL21hc3Rlci9zcmMvZXh0ZW5zaW9uLnRzJTIzTDI2LUwyNw==">这个链接<i class="fa fa-external-link-alt"></i></span> 查看 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2dpdGRvYw==">GitDoc 扩展<i class="fa fa-external-link-alt"></i></span> 如何订阅 VS Code 中的 repo 事件。</p></blockquote><h2 id="3-✅-拉取请求审查"><a href="#3-✅-拉取请求审查" class="headerlink" title="3. ✅ 拉取请求审查"></a>3. ✅ 拉取请求审查</h2><p>除了在 github.com 上的仓库或文件上点击 <code>.</code>，您还可以在查看拉取请求时按下它。 这使您能够使用丰富的多文件视图查看 PR，包括查看和回复评论、建议更改，甚至直接从编辑器批准/合并 PR 的能力。 这使得通过为开发人员提供更好的工具来减少“肤浅的评论”成为可能，而无需克隆或切换分支🙅‍♂️</p><p><img data-src="/333/cce81294938b4681a1dbdf36e8f5aeaa~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><blockquote><p><strong>演示：</strong> 单击<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldi9taWNyb3NvZnQvY29kZXRvdXIvcHVsbC8xNTM=">此链接<i class="fa fa-external-link-alt"></i></span>查看将正则表达式解析器添加到 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2NvZGV0b3Vy">CodeTour 扩展<i class="fa fa-external-link-alt"></i></span>的 PR。</p></blockquote><h2 id="4-📊-编辑图像和图表"><a href="#4-📊-编辑图像和图表" class="headerlink" title="4. 📊 编辑图像和图表"></a>4. 📊 编辑图像和图表</h2><p>除了编辑文本文件，VS Code 还允许添加扩展来<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vY29kZS52aXN1YWxzdHVkaW8uY29tL2FwaS9leHRlbnNpb24tZ3VpZGVzL2N1c3RvbS1lZGl0b3Jz">自定义编辑器<i class="fa fa-external-link-alt"></i></span>，这使您可以编辑项目中的任何文件类型。比如安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1oZWRpZXQudnNjb2RlLWRyYXdpbw==">Drawio 扩展<i class="fa fa-external-link-alt"></i></span>，就可以查看和编辑丰富的图表。</p><p><img data-src="/333/1a038e203ebe4904bd48c910e29bebf5~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><p>此外，如果您安装了 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1UeXJpYXIubHVuYS1wYWludA==">Luna Paint 扩展<i class="fa fa-external-link-alt"></i></span>，您可以编辑图像（PNG、JPG 等）。</p><p>在每种情况下，您的编辑都会自动保存，您可以通过 <code>Source Control</code> 选项卡将更改提交/推送回您的 GitHub 仓库。更酷的是，您可以与他人共享图像/图表的深层链接，只要他们安装必要的扩展程序，他们就可以通过完全相同的体验与您合作。 这有效地使 github.dev 成为存储在 GitHub 中的任何文件类型的可破解『画布』😎</p><h2 id="5-🗺-代码库演示"><a href="#5-🗺-代码库演示" class="headerlink" title="5. 🗺 代码库演示"></a>5. 🗺 代码库演示</h2><p>学习新的代码库很困难，因为通常不清楚从哪里开始，或者各种文件/文件夹如何相互关联。 使用 github.dev，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2NvZGV0b3Vy">CodeTour 扩展<i class="fa fa-external-link-alt"></i></span>，它允许您创建和播放代码库的指导演练。由于 github.dev 完全在浏览器中可用，因此团队中或社区中的任何人都可以轻松快速上手，而无需在本地安装任何东西。</p><blockquote><p><strong>演示：</strong> 打开 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldi9taWNyb3NvZnQvY29kZXRvdXI=">这个仓库<i class="fa fa-external-link-alt"></i></span> 并安装 CodeTour。 您将看到一个弹窗，询问您是否愿意参加<strong>入门</strong>之旅。</p></blockquote><h2 id="6-📕-代码片段和-Gists"><a href="#6-📕-代码片段和-Gists" class="headerlink" title="6. 📕 代码片段和 Gists"></a>6. 📕 代码片段和 Gists</h2><p><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2lzdC5naXRodWIuY29t">Gists<i class="fa fa-external-link-alt"></i></span> 是开发人员管理和共享代码片段、配置文件、注释等的流行方式。在 github.dev 中，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2dpc3RwYWQ=">GistPad 扩展<i class="fa fa-external-link-alt"></i></span> 并查看/编辑您的 Gists。这允许您跨多个存储库维护代码片段，并从桌面编辑器以及在 GitHub 上浏览/编辑代码时访问它们。</p><p><img data-src="/333/b4a359a5224340afba2bc28b1a7c65d5~tplv-k3u1fbpfcp-watermark.awebp" alt="img" loading="lazy"></p><h2 id="7-🎢-Web-游乐场和教程"><a href="#7-🎢-Web-游乐场和教程" class="headerlink" title="7. 🎢 Web 游乐场和教程"></a>7. 🎢 Web 游乐场和教程</h2><p>编码游乐场（例如 CodePen、JSFiddle）是一种流行的学习编程语言/库，然后与他人分享的方式。 使用 github.dev，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL2NvZGVzd2luZw==">CodeSwing 扩展<i class="fa fa-external-link-alt"></i></span> 并开始创建 Web Playground，使用您现有的编辑器设置，并将您的文件保存回 GitHub。</p><blockquote><p><strong>演示：</strong> 打开<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmRldi9sb3N0aW50YW5nZW50L3JvY2stcGFwZXItc2Npc3NvcnM=">这个仓库<i class="fa fa-external-link-alt"></i></span> 并安装 CodeSwing 和 CodeTour。 几秒钟后，您将看到 Playground 环境。</p></blockquote><h2 id="8-✏️-笔记和知识库"><a href="#8-✏️-笔记和知识库" class="headerlink" title="8. ✏️ 笔记和知识库"></a>8. ✏️ 笔记和知识库</h2><p>VS Code 是世界一流的 Markdown 编辑器，因此，您可以开始使用 github.dev 来编辑和预览您的所有个人笔记/文档。 更酷的是，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL3dpa2lsZW5z">WikiLens 扩展<i class="fa fa-external-link-alt"></i></span> 以获得类似 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vcm9hbXJlc2VhcmNoLmNvbS8=">Roam<i class="fa fa-external-link-alt"></i></span> 或 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vb2JzaWRpYW4ubWQv">obsidian<i class="fa fa-external-link-alt"></i></span> 的编辑体验，来维护一个知识库，不仅能将其存储在 GitHub 中而且能从 VS Code 的扩展/个性化生态系统受益。</p><h2 id="9-📓-Jupyter-Notebooks"><a href="#9-📓-Jupyter-Notebooks" class="headerlink" title="9. 📓 Jupyter Notebooks"></a>9. 📓 Jupyter Notebooks</h2><p>除了编码 playgrounds 之外，另一种流行的学习和共享代码的方式是 Jupyter 笔记本。 如果你在 github.dev 中打开一个 <code>.ipynb</code> 文件，你可以立即查看笔记本的单元格和缓存输出。 更好的是，您可以安装 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1qb3ljZWVyaGwudnNjb2RlLXB5b2RpZGU=">Pyodide 扩展<i class="fa fa-external-link-alt"></i></span>，以便实际运行 Python 代码，且是完全在您的浏览器中运行的！</p><h2 id="10-🛠-创建您自己的扩展！"><a href="#10-🛠-创建您自己的扩展！" class="headerlink" title="10. 🛠 创建您自己的扩展！"></a>10. 🛠 创建您自己的扩展！</h2><p>您可能已经注意到，上面的大多数功能都是通过扩展启用的，这是别人创建并发布到市场的。由于 VS Code <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vY29kZS52aXN1YWxzdHVkaW8uY29tL2FwaS9yZWZlcmVuY2VzL3ZzY29kZS1hcGk=">完全可扩展<i class="fa fa-external-link-alt"></i></span>，使用简单的 JavaScript API，您可以创建自己的扩展，不仅支持 VS Code 桌面，而且还支持 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvdnNjb2RlLWRvY3MvYmxvYi92bmV4dC9hcGkvZXh0ZW5zaW9uLWd1aWRlcy93ZWItZXh0ZW5zaW9ucy5tZA==">github.dev<i class="fa fa-external-link-alt"></i></span>。所以，如果你有一个很棒的想法，关于如何使在 GitHub 上编码更高效和有趣，那么你现在已经拥有起步所需的一切🏃</p><h2 id="🔮-期待"><a href="#🔮-期待" class="headerlink" title="🔮 期待"></a>🔮 期待</h2><p>虽然 GitHub.dev 已经有大量用法，但它仍处于早期阶段，因此随着生态系统的不断创新，这是一个值得关注的领域。例如，我很高兴看到这样一个激动人心的时刻🙌 ，那就是<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vYWthLm1zL3ZzbHM=">实时协作<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1HaXRIdWIuY2xhc3Nyb29t">课堂作业<i class="fa fa-external-link-alt"></i></span> 和 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVtcz9pdGVtTmFtZT1tYXJwLXRlYW0ubWFycC12c2NvZGU=">在线演讲<i class="fa fa-external-link-alt"></i></span> 可以很快成为能在浏览器中执行的并建立在 GitHub 存储库之上的场景示例💯</p><blockquote><p>如果发现译文存在错误或其他需要改进的地方，欢迎到 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS94aXR1L2dvbGQtbWluZXI=">掘金翻译计划<i class="fa fa-external-link-alt"></i></span> 对译文进行修改并 PR，也可获得相应奖励积分。文章开头的 <strong>本文永久链接</strong> 即为本文在 GitHub 上的 MarkDown 链接。</p></blockquote>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Github Action 的简单使用</title>
    <link href="https://weilining.github.io/332.html"/>
    <id>https://weilining.github.io/332.html</id>
    <published>2021-10-29T04:14:35.000Z</published>
    <updated>2021-10-29T04:14:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub Action 是 GitHub 于 2019 年 11 月正式推出的一个 CI CD 服务。</p><h3 id="CI-CD-的一些解释"><a href="#CI-CD-的一些解释" class="headerlink" title="CI/CD 的一些解释"></a>CI/CD 的一些解释</h3><p>CI/CD 是什么？如何理解持续集成、持续交付和持续部署。</p><p>CI/CD 是一种通过在应用开发阶段引入自动化来频繁向客户交付应用的方法。CI/CD 的核心概念是持续集成、持续交付和持续部署。作为一个面向开发和运营团队的解决方案，CI/CD 主要针对在集成新代码时所引发的问题（亦称：“集成地狱”）。</p><p>具体而言，CI/CD 可让持续自动化和持续监控贯穿于应用的整个生命周期（从集成和测试阶段，到交付和部署）。这些关联的事务通常被统称为“CI/CD 管道”，由开发和运维团队以敏捷方式协同支持。</p><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>如果你仅仅是想体验一下 Github Action 那么阅读下面的步骤就可以（可能需要对GitHub有些基础）。</p><p>强烈建议访问官网了解详情 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZG9jcy5naXRodWIuY29tL2NuL2FjdGlvbnM=">官方文档<i class="fa fa-external-link-alt"></i></span></p><h3 id="部署python的定时任务"><a href="#部署python的定时任务" class="headerlink" title="部署python的定时任务"></a>部署python的定时任务</h3><h4 id="1-GitHub中创建项目"><a href="#1-GitHub中创建项目" class="headerlink" title="1. GitHub中创建项目"></a>1. GitHub中创建项目</h4><p>创建步骤可以自行搜索，没有特殊的要求</p><h5 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h5><p>这里注意 <code>.github/workflows/run.yaml</code> 该文件为具体任务的定义 包含 <strong>环境 任务 触发条件</strong> 等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">├── .github</span><br><span class="line">    ├── workflows</span><br><span class="line">        ├── run.yaml</span><br><span class="line">├── README.md</span><br><span class="line">├── main.py</span><br><span class="line">├── requeirments.txt</span><br><span class="line"></span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h5 id="主要文件内容"><a href="#主要文件内容" class="headerlink" title="主要文件内容"></a>主要文件内容</h5><ol><li>run.yaml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Python</span> <span class="string">package</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="number">00</span> <span class="number">02</span> <span class="string">*</span> <span class="string">*</span> <span class="string">*</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Python</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-python@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">python-version:</span> <span class="string">&#x27;3.x&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">python</span> <span class="string">-m</span> <span class="string">pip</span> <span class="string">install</span> <span class="string">--upgrade</span> <span class="string">pip</span></span><br><span class="line">          <span class="string">pip</span> <span class="string">install</span> <span class="string">-r</span> <span class="string">requeirments.txt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">execute</span> <span class="string">py</span> <span class="string">script</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">FM_USERNAME:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.USERNAME</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">python</span> <span class="string">main.py</span></span><br><span class="line"></span><br><span class="line"><span class="string">复制代码</span></span><br></pre></td></tr></table></figure><ol><li>main.py</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    print(<span class="string">&quot;执行github action&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h4 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2. 配置环境变量"></a>2. 配置环境变量</h4><p>如果需要配置，没有则跳过</p><p><img data-src="/332/90cb8c091e1d457ca5c93f791109378f~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h4 id="3-上传代码-查看-actions"><a href="#3-上传代码-查看-actions" class="headerlink" title="3. 上传代码 查看 actions"></a>3. 上传代码 查看 actions</h4><p>因为我在 <code>.github/workflows/run.yaml</code> 文件中配置 main 分支推送的时候会执行任务，这里会自动执行</p><p><img data-src="/332/e2b2a29d7f3e47bc8c7ad761a257e5f4~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h4 id="4-查看执行结果"><a href="#4-查看执行结果" class="headerlink" title="4. 查看执行结果"></a>4. 查看执行结果</h4><p>这里可以点进每一步查看每一步的执行情况；如果有错误会显示具体的错误内容</p><p><img data-src="/332/dad38587450342f2b9d85ad11aef9958~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h4 id="5-我的执行结果"><a href="#5-我的执行结果" class="headerlink" title="5. 我的执行结果"></a>5. 我的执行结果</h4><p>因为我配置每天2点自动执行任务，所以我这边会有很多执行任务</p><p><img data-src="/332/aa383d9cf6bf4247bc689c8743c8a3b0~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h4 id="6-一些解释"><a href="#6-一些解释" class="headerlink" title="6. 一些解释"></a>6. 一些解释</h4><ul><li><strong>name :</strong> job 的名称 （后续在GitHub的Actions会显示）</li><li><strong>on.push.branches :</strong> 在代码合并/推送到此分支后自动执行当前job</li><li><strong>on.schedule :</strong> 计划任务 符合cron的表达式</li><li><strong>jobs.build.runs-on :</strong>  运行环境的选择</li><li><strong>jobs.build.steps :</strong>  job的具体执行步骤，可以定义多个步骤按顺序执行</li><li><strong>jobs.build.steps :</strong>  job的具体执行步骤，可以定义多个步骤按顺序执行</li><li><strong>jobs.build.steps.env :</strong>  获取配置的环境变量对应的为 github.settings.secrets (注意不是 environment secrets )</li></ul><p>详细的配置查看 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZG9jcy5naXRodWIuY29tL2NuL2FjdGlvbnMvcmVmZXJlbmNlL3dvcmtmbG93LXN5bnRheC1mb3ItZ2l0aHViLWFjdGlvbnM=">GitHub Actions 的工作流程语法 <i class="fa fa-external-link-alt"></i></span> 这里只展示常见的解释</p><h4 id="7-问题思考"><a href="#7-问题思考" class="headerlink" title="7. 问题思考"></a>7. 问题思考</h4><ol><li><p>关于 Environment secrets 与 Repository secrets 的区别 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzY1OTU3MTk3L2RpZmZlcmVuY2UtYmV0d2Vlbi1naXRodWJzLWVudmlyb25tZW50LWFuZC1yZXBvc2l0b3J5LXNlY3JldHM=">参考链接<i class="fa fa-external-link-alt"></i></span></p><p>简单的说 Repository secrets 是在任何地方都可以使用的变量 Environment secrets 需要配合 yaml 文件中的 environment 变量具体使用。</p></li><li><p>聪明的你是不是觉得可以想到白嫖，对此关于使用计费问题可以 查看 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZG9jcy5naXRodWIuY29tL2NuL2FjdGlvbnMvcmVmZXJlbmNlL3VzYWdlLWxpbWl0cy1iaWxsaW5nLWFuZC1hZG1pbmlzdHJhdGlvbg==">关于 GitHub Actions 的计费<i class="fa fa-external-link-alt"></i></span></p><p>下图为部分限制内容 （如果你有合适的搭配方式欢迎推荐给我）</p></li></ol><p><img data-src="/332/83cdba3144ea4ad3a80e8513b035fcb9~tplv-k3u1fbpfcp-watermark.awebp" alt="关于Github Action的使用限制" loading="lazy"></p><ol><li><p>cron的表达式 的时间问题</p><p>因为 Github Action标准的时间为UTC时间，如果需要符合北京时间需要手动处理对应的时间。</p></li></ol><h3 id="其他可能的用处"><a href="#其他可能的用处" class="headerlink" title="其他可能的用处"></a>其他可能的用处</h3><ul><li>将静态网页发布到 GitHub Pages</li><li>自动部署你的代码到服务器</li><li>执行定时任务获取天气信息</li><li>执行定时任务给你的小宝贝聊天</li><li>爬虫执行签到以及任务打卡</li></ul><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZG9jcy5naXRodWIuY29tL2NuL2FjdGlvbnM=">官方文档<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZ2l0aHViLmNvbS9tYXJrZXRwbGFjZT90eXBlPWFjdGlvbnM=">GitHub Action 官方市场<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vd3d3LnJ1YW55aWZlbmcuY29tL2Jsb2cvMjAxOS8wOS9nZXR0aW5nLXN0YXJ0ZWQtd2l0aC1naXRodWItYWN0aW9ucy5odG1s">GitHub Actions 入门教程 阮一峰<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效 Freenom 账号申请域名注册</title>
    <link href="https://weilining.github.io/331.html"/>
    <id>https://weilining.github.io/331.html</id>
    <published>2021-10-29T04:12:23.000Z</published>
    <updated>2021-10-29T04:12:23.000Z</updated>
    
    <content type="html"><![CDATA[<p> 域名简介</p><blockquote><p>域名（英语：Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）。由于IP地址具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过网域名称系统（DNS，Domain Name System）来将域名和IP地址相互映射，使人更方便地访问互联网，而不用去记住能够被机器直接读取的IP地址数串。</p></blockquote><p>国内比较有名的域名代理商有阿里云、腾讯云等，这些代理商会提供较为全面的域名服务，包括域名注册、续费、HTTPS证书、DNS 解析、全站加速等。优点就是一应俱全，开箱即用。缺点就是收费且申请麻烦。今天就介绍一款国外免费域名提供商 <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vd3d3LmZyZWVub20uY29tLw=="> Freenom <i class="fa fa-external-link-alt"></i></span>。</p><h2 id="申请你的域名"><a href="#申请你的域名" class="headerlink" title="申请你的域名"></a>申请你的域名</h2><p><span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vd3d3LmZyZWVub20uY29tLw=="> Freenom <i class="fa fa-external-link-alt"></i></span></p><blockquote><p>Freenom 是世界上第一个也是唯一的免费域名提供商。 我们的使命是帮助各国人在网上发展自己的数字经济。 免费域名的工作机制与任何其他域名完全一致。 你可以用它作为您的网站，博客，电子邮件帐户或其他！ 您可以选择运行免费域名与网址转发，免费 Freenom DNS服务或您自己的 DNS（域名服务器）。</p></blockquote><h3 id="1-查询可用域名"><a href="#1-查询可用域名" class="headerlink" title="1. 查询可用域名"></a>1. 查询可用域名</h3><p>打开官网后输入自己想要的域名，例如我输入的是 abandon ，然后会提示出后缀 tk、ml、ga、cf、gq这五个后缀的域名是免费的，这里显示只有 ml、cf、gq 可用。</p><p><img data-src="/331/cc6eb509cc9e4814870d56d0c9eeae30~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h3 id="2-注册账号"><a href="#2-注册账号" class="headerlink" title="2. 注册账号"></a>2. 注册账号</h3><p>由于某些原因的限制 Freenom 对于用户并不友好。没有注册用户的入口，不是用户就这册不了新的域名。恶性循环没有结果。所有因为没有明确的注册入口，这里采用特殊手段注册账号。</p><p><img data-src="/331/2c5b2d739c9a4fd48b6916ef9de4f4ce~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p><img data-src="/331/c39ed4ac9fd04a568c5cb047cc14a90d~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>在此处输入邮箱，验证成功后会给你邮箱发送一封邮件，点击跳转之后就会让你完善用户信息了。</p><p><img data-src="/331/1e48482ccf694daf8f7c7ef37612c7fa~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>至此你已经有了账号，那么就可以为所欲了。</p><h3 id="3-申请域名"><a href="#3-申请域名" class="headerlink" title="3. 申请域名"></a>3. 申请域名</h3><p>此步骤是在你登录成功之后才能正常操作</p><p><img data-src="/331/f66dbae6a3f444f48fa371c39f78f758~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>两次继续操作你会收获一个错误</p><p><img data-src="/331/8b5060fb16834f9ebee91ea4058f1ae8~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>此时需要修改你的个人信息，修改地址与国家</p><p><img data-src="/331/c2b55074b1974b3590353311b31d664c~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>然后再来一次就可以申请完成了。</p><p><img data-src="/331/4d116efa3219400685960e6152d07b0b~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><p>点击我的域名就可以查看到刚刚申请到的域名了。</p><p><img data-src="/331/7f8723488d6f42a089c6a31c35b41819~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h3 id="4-配置域名解析"><a href="#4-配置域名解析" class="headerlink" title="4. 配置域名解析"></a>4. 配置域名解析</h3><p>如果自己有服务器而去绑定了公网域名，那么就可以将此域名映射到你的主机上了。这里只要输入你对应的服务器对应的公网 IP 就可以自动解析域名了（注意配置生效需要时间请耐心等待，短则几个小时长则一天）。</p><p><img data-src="/331/1699a8b5726a4ebe962f9f59b8bd872b~tplv-k3u1fbpfcp-watermark.awebp" alt="image.png" loading="lazy"></p><h3 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5. 注意事项"></a>5. 注意事项</h3><ul><li>很多域名在登录的状态才会显示可用，所以最好是在登录状态下选择域名。</li><li>域名默认是3个月的免费使用时间，但是你可以直接勾选12个月的免费使用。</li><li>最好设置浏览器的语言为英文，全程在英文页面操作。</li><li>如果卡在某一步没有反应，你需要查看是否是网络问题。</li></ul><p><strong>在正常提交注册域名最后一步的时候，因网页代码中有一步会用到 <code>google/grecaptcha</code> <span class="exturl" data-url="aHR0cHM6Ly9saW5rLmp1ZWppbi5jbi8/dGFyZ2V0PWh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY24vcmVjYXB0Y2hhLz9obD16aC1jbg==">谷歌人机身份验证<i class="fa fa-external-link-alt"></i></span>。所以正常情况下是访问不了，这里需要配置网络，因为提交注册的时候会校验 IP 地址，所以真实的注册地址依旧是访问者真实的 IP 。</strong></p><h2 id="域名能干嘛"><a href="#域名能干嘛" class="headerlink" title="域名能干嘛"></a>域名能干嘛</h2><ul><li>可以用来提升你网络的可靠性，emm ～～～。</li><li>可以为你的博客提供一个专属域名，方便记忆。</li><li>域名是一个投资，未来的某位大佬看上你的域名，那么你就直接走向人生巅峰。</li></ul>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>白嫖腾讯云「云函数」，实现多平台自动签到</title>
    <link href="https://weilining.github.io/330.html"/>
    <id>https://weilining.github.io/330.html</id>
    <published>2021-10-29T03:37:50.000Z</published>
    <updated>2021-10-29T03:37:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>不过很不巧的是：由于有人滥用 Actions 功能在 GitHub 服务器上植入挖矿软件来挖矿</p><p>导致 Github 开始大量封锁各种 Actions 项目，自动签到类项目不幸躺枪</p><p><img data-src="/330/e51188642b2799bcfca50d5b5112d5e3fe145f7b.png@90w_78h_progressive.webp" alt="img" loading="lazy"></p><p>之前阿虚介绍的不少 Actions 签到项目现在都被封掉了</p><p><img data-src="/330/1194904770aa4763164dcb29a81822f47a283156.jpg@942w_453h_progressive.webp" alt="img" loading="lazy"></p><p>不过除了 Github，其实我们还可以白嫖<strong>腾讯云的云函数</strong>来实现自动签到</p><p><img data-src="/330/9cee7364816bcfa644b426537dfab9b458056c13.png@90w_78h_progressive.webp" alt="img" loading="lazy"></p><p>和上次教的 Github 一样，代码大佬都帮忙写好了，大家并不需要任何编程知识，基本只需要会复制粘贴即可</p><p>那详细步骤就下面跟着阿虚来操作~</p><h1 id="▍1-DailyCheckin"><a href="#▍1-DailyCheckin" class="headerlink" title="▍1 DailyCheckin"></a>▍1 DailyCheckin</h1><p>每日签到聚合：<span class="exturl" data-url="aHR0cHM6Ly9zaXRvaS5naXRlZS5pby9kYWlseWNoZWNraW4v">https://sitoi.gitee.io/dailycheckin/<i class="fa fa-external-link-alt"></i></span></p><p>在众多的腾讯云函数签到项目中，阿虚比较推荐的的就是这个了，本文也将以此项目做演示来介绍腾讯云函数的基本用法</p><p><img data-src="/330/74c1e6cb1dccfec0a12b72aa06c69bbefdb8448a.jpg@942w_470h_progressive.webp" alt="img" loading="lazy"></p><p>这个大佬聚合了爱奇艺、全民K歌、腾讯视频、有道云笔记、网易云音乐、一加手机论坛、百度贴吧、BiliBili、V2EX、咔叽网单、什么值得买、天翼云盘、吾爱破解、MEIZU社区、智友邦、CSDN、AcFun的签到</p><p>大多数能用腾讯云函数来实现的自动签到项目基本都包含了</p><p><img data-src="/330/8393ac7c16124920643df0e7b1a9f2868e55b2c2.png@90w_78h_progressive.webp" alt="img" loading="lazy"></p><blockquote><p>另外还支持：Fa米家、芒果TV、微博、多看阅读、王者营地、联通沃邮箱公众号这些的签到，不过这些需要进行数据抓包，过程相对复杂，本文就不涉及了</p></blockquote><p>具体部署的方法，还是打开你的腾讯云：<span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tLw==">https://console.cloud.tencent.com/<i class="fa fa-external-link-alt"></i></span></p><p>打开以上网页自行扫码登录，登录后找到网页左上角<strong>云产品 » 云函数</strong></p><p><img data-src="/330/80d88709d7daa0fa4f20c0ce6faa8a21133030b1.jpg@930w_1130h_progressive.webp" alt="img" loading="lazy"></p><p>然后如果是第一次开通云函数功能，会弹出一个「服务授权」，点击前往访问管理，点击确定授权，然后微信扫码确认即可</p><p><img data-src="/330/47288f57947f16bab301f12151db3d8582f9733d.jpg@942w_336h_progressive.webp" alt="img" loading="lazy"></p><h1 id="●-1-1-创建云函数"><a href="#●-1-1-创建云函数" class="headerlink" title="● 1.1 创建云函数"></a>● 1.1 创建云函数</h1><p>然后点击新建，我们来创建一个函数</p><p><img data-src="/330/7bce2742cfa0638e20b03aaf9a8d3bafdcc836b8.jpg@942w_425h_progressive.webp" alt="img" loading="lazy"></p><p>创建方式改为「自定义创建」然后选「事件函数」，函数名称填写「dailycheckin」，地区则随便选择，部署方式选择「代码部署」，运行环境则选择「Python3.6」</p><p><img data-src="/330/5975b37e322c4bf4036d711de9b873b22441cd3d.jpg@942w_702h_progressive.webp" alt="img" loading="lazy"></p><p>然后往下滑，在下方删掉默认的代码，改填入以下代码</p><p>``</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> dailycheckin.main <span class="keyword">import</span> checkin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main_handler</span>(<span class="params">event, context</span>):</span></span><br><span class="line">    checkin()</span><br></pre></td></tr></table></figure><p>``</p><p><img data-src="/330/836143c373e1a2597abecba463e3199b144e9689.jpg@942w_513h_progressive.webp" alt="▲填好之后是这样" loading="lazy">▲填好之后是这样</p><p>再往下，展开「高级配置」，将执行超时时间改为900，其他则保持默认</p><p><img data-src="/330/ef8d3e259c5d2908d6ddecc2e929222c0089fdc3.jpg@891w_378h_progressive.webp" alt="img" loading="lazy"></p><p>再往下滑，展开「触发器配置」，切换到自定义创建，定时任务的名称填「checkin」，然后触发周期改为「自定义触发周期」，在Cron表达式处填入：<code>45 8 * * *</code></p><p><img data-src="/330/8821ef5f0796a38cdc2a0ef3f033b3d2d0dff9d3.jpg@942w_1110h_progressive.webp" alt="▲这个表达式=每天的8点45分执行函数" loading="lazy">▲这个表达式=每天的8点45分执行函数</p><p>确认没问题后点击最下方的完成即可</p><h1 id="●-1-2-安装依赖"><a href="#●-1-2-安装依赖" class="headerlink" title="● 1.2 安装依赖"></a>● 1.2 安装依赖</h1><p>短暂等待函数创建完成，我们现在需要给函数安装运行依赖</p><p><img data-src="/330/52a2ed234423e495dced9b3e395e83fb5f4e9742.png@90w_78h_progressive.webp" alt="img" loading="lazy"></p><p>在「函数管理」中切换到「函数代码」标签，再找到终端 » 新终端</p><p><img data-src="/330/02e3dec5feca36589c889623eebe652355bba9c2.jpg@942w_579h_progressive.webp" alt="img" loading="lazy"></p><p>然后把页面往下拉，在终端那里先输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd src</span><br></pre></td></tr></table></figure><p>然后回车</p><p><img data-src="/330/de425e0b297d89447f95fb3a0b1db3573b2638b9.jpg@942w_303h_progressive.webp" alt="img" loading="lazy"></p><p>接着再输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install dailycheckin --upgrade -t .</span><br></pre></td></tr></table></figure><p>然后回车</p><p><img data-src="/330/4078324d84a3156468b4a103c2c08af750080500.jpg@942w_299h_progressive.webp" alt="img" loading="lazy"></p><p>然后稍微等待一会它自动安装依赖，下图就是安装完了</p><p><img data-src="/330/c8613b743d53ae21b6008306117446ea70fe591d.jpg@942w_318h_progressive.webp" alt="img" loading="lazy"></p><h1 id="●-1-3-参数配置"><a href="#●-1-3-参数配置" class="headerlink" title="● 1.3 参数配置"></a>● 1.3 参数配置</h1><p>最后一步就是进行参数配置了，这是唯一比较复杂的步骤</p><p><img data-src="/330/a69c73b9db8067f9e5ec954966fbcd24febe77a3.png@90w_78h_progressive.webp" alt="img" loading="lazy"></p><p>在src目录下创建config文件夹</p><p><img data-src="/330/d948037a193eb8b9521298bcd284d0d030c536ca.jpg@942w_620h_progressive.webp" alt="img" loading="lazy"></p><p>接着在config文件夹下面创建config.json文件</p><p><img data-src="/330/ba294a4b79ee9c0c9e35139067042172e440ad0b.jpg@783w_1011h_progressive.webp" alt="img" loading="lazy"></p><p>然后打开此网址：<span class="exturl" data-url="aHR0cHM6Ly9zaXRvaS5naXRlZS5pby9kYWlseWNoZWNraW4vc2V0dGluZ3Mv">https://sitoi.gitee.io/dailycheckin/settings/<i class="fa fa-external-link-alt"></i></span></p><p>翻到网页底部，可以看到作者给出的配置模板代码（为防止网站失效，阿虚也把代码贴在下面）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;DINGTALK_SECRET&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;DINGTALK_ACCESS_TOKEN&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SCKEY&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SENDKEY&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BARK_URL&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;QMSG_KEY&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;QMSG_TYPE&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;TG_BOT_TOKEN&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;TG_USER_ID&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;TG_API_HOST&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;TG_PROXY&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;COOLPUSHSKEY&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;COOLPUSHQQ&quot;</span>: true,</span><br><span class="line">  <span class="string">&quot;COOLPUSHWX&quot;</span>: true,</span><br><span class="line">  <span class="string">&quot;COOLPUSHEMAIL&quot;</span>: true,</span><br><span class="line">  <span class="string">&quot;QYWX_KEY&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;QYWX_CORPID&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;QYWX_AGENTID&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;QYWX_CORPSECRET&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;QYWX_TOUSER&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;PUSHPLUS_TOKEN&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;PUSHPLUS_TOPIC&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;CITY_NAME_LIST&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;上海&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;MOTTO&quot;</span>: true,</span><br><span class="line">  <span class="string">&quot;IQIYI_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;iqiyi_cookie&quot;</span>: <span class="string">&quot;__dfp=xxxxxx; QP0013=xxxxxx; QP0022=xxxxxx; QYABEX=xxxxxx; P00001=xxxxxx; P00002=xxxxxx; P00003=xxxxxx; P00007=xxxxxx; QC163=xxxxxx; QC175=xxxxxx; QC179=xxxxxx; QC170=xxxxxx; P00010=xxxxxx; P00PRU=xxxxxx; P01010=xxxxxx; QC173=xxxxxx; QC180=xxxxxx; P00004=xxxxxx; QP0030=xxxxxx; QC006=xxxxxx; QC007=xxxxxx; QC008=xxxxxx; QC010=xxxxxx; nu=xxxxxx; __uuid=xxxxxx; QC005=xxxxxx;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;iqiyi_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;VQQ_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;auth_refresh&quot;</span>: <span class="string">&quot;https://access.video.qq.com/user/auth_refresh?vappid=xxxxxx&amp;vsecret=xxxxxx&amp;type=qq&amp;g_tk=&amp;g_vstk=xxxxxx&amp;g_actk=xxxxxx&amp;callback=xxxxxx&amp;_=xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;vqq_cookie&quot;</span>: <span class="string">&quot;pgv_pvid=xxxxxx; pac_uid=xxxxxx; RK=xxxxxx; ptcz=xxxxxx; tvfe_boss_uuid=xxxxxx; video_guid=xxxxxx; video_platform=xxxxxx; pgv_info=xxxxxx; main_login=xxxxxx; vqq_access_token=xxxxxx; vqq_appid=xxxxxx; vqq_openid=xxxxxx; vqq_vuserid=xxxxxx; vqq_refresh_token=xxxxxx; login_time_init=xxxxxx; uid=xxxxxx; vqq_vusession=xxxxxx; vqq_next_refresh_time=xxxxxx; vqq_login_time_init=xxxxxx; login_time_last=xxxxxx;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;auth_refresh&quot;</span>: <span class="string">&quot;多账号 refresh url，请参考上面，以实际获取为准&quot;</span>,</span><br><span class="line">      <span class="string">&quot;vqq_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;YOUDAO_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;youdao_cookie&quot;</span>: <span class="string">&quot;JSESSIONID=xxxxxx; __yadk_uid=xxxxxx; OUTFOX_SEARCH_USER_ID_NCOO=xxxxxx; YNOTE_SESS=xxxxxx; YNOTE_PERS=xxxxxx; YNOTE_LOGIN=xxxxxx; YNOTE_CSTK=xxxxxx; _ga=xxxxxx; _gid=xxxxxx; _gat=xxxxxx; PUBLIC_SHARE_18a9dde3de846b6a69e24431764270c4=xxxxxx;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;youdao_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;KGQQ_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;kgqq_cookie&quot;</span>: <span class="string">&quot;muid=xxxxxx; uid=xxxxxx; userlevel=xxxxxx; openid=xxxxxx; openkey=xxxxxx; opentype=xxxxxx; qrsig=xxxxxx; pgv_pvid=xxxxxx;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;kgqq_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;MUSIC163_ACCOUNT_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;music163_phone&quot;</span>: <span class="string">&quot;18888xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;music163_password&quot;</span>: <span class="string">&quot;Sitoi&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;music163_phone&quot;</span>: <span class="string">&quot;多账号 手机号&quot;</span>,</span><br><span class="line">      <span class="string">&quot;music163_password&quot;</span>: <span class="string">&quot;多账号 密码&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;ONEPLUSBBS_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;oneplusbbs_cookie&quot;</span>: <span class="string">&quot;acw_tc=xxxxxx; qKc3_0e8d_saltkey=xxxxxx; qKc3_0e8d_lastvisit=xxxxxx; bbs_avatar=xxxxxx; qKc3_0e8d_sendmail=xxxxxx; opcid=xxxxxx; opcct=xxxxxx; oppt=xxxxxx; opsid=xxxxxx; opsct=xxxxxx; opbct=xxxxxx; UM_distinctid=xxxxxx; CNZZDATA1277373783=xxxxxx; www_clear=xxxxxx; ONEPLUSID=xxxxxx; qKc3_0e8d_sid=xxxxxx; bbs_uid=xxxxxx; bbs_uname=xxxxxx; bbs_grouptitle=xxxxxx; opuserid=xxxxxx; bbs_sign=xxxxxx; bbs_formhash=xxxxxx; qKc3_0e8d_ulastactivity=xxxxxx; opsertime=xxxxxx; qKc3_0e8d_lastact=xxxxxx; qKc3_0e8d_checkpm=xxxxxx; qKc3_0e8d_noticeTitle=xxxxxx; optime_browser=xxxxxx; opnt=xxxxxx; opstep=xxxxxx; opstep_event=xxxxxx; fp=xxxxxx;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;oneplusbbs_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;BAIDU_URL_SUBMIT_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;data_url&quot;</span>: <span class="string">&quot;https://cdn.jsdelivr.net/gh/Sitoi/Sitoi.github.io/baidu_urls.txt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;submit_url&quot;</span>: <span class="string">&quot;http://data.zz.baidu.com/urls?site=https://sitoi.cn&amp;token=xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;times&quot;</span>: <span class="number">10</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;data_url&quot;</span>: <span class="string">&quot;多账号 data_url 链接地址，以实际获取为准&quot;</span>,</span><br><span class="line">      <span class="string">&quot;submit_url&quot;</span>: <span class="string">&quot;多账号 submit_url 链接地址，以实际获取为准&quot;</span>,</span><br><span class="line">      <span class="string">&quot;times&quot;</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;FMAPP_ACCOUNT_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;fmapp_token&quot;</span>: <span class="string">&quot;xxxxxx.xxxxxx-xxxxxx-xxxxxx.xxxxxx-xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_cookie&quot;</span>: <span class="string">&quot;sensorsdata2015jssdkcross=xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_blackbox&quot;</span>: <span class="string">&quot;eyJlcnJxxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_device_id&quot;</span>: <span class="string">&quot;xxxxxx-xxxx-xxxx-xxxx-xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_fmversion&quot;</span>: <span class="string">&quot;xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_os&quot;</span>: <span class="string">&quot;xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_useragent&quot;</span>: <span class="string">&quot;xxxxxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;fmapp_token&quot;</span>: <span class="string">&quot;多账号 token 填写，请参考上面，以实际获取为准&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_blackbox&quot;</span>: <span class="string">&quot;多账号 blackbox 填写，请参考上面，blackbox 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_device_id&quot;</span>: <span class="string">&quot;多账号 device_id 填写，请参考上面，以实际获取为准&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_fmversion&quot;</span>: <span class="string">&quot;多账号 fmVersion 填写，请参考上面，以实际获取为准&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_os&quot;</span>: <span class="string">&quot;多账号 os 填写，请参考上面，以实际获取为准&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmapp_useragent&quot;</span>: <span class="string">&quot;多账号 User-Agent 填写，请参考上面，以实际获取为准&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;TIEBA_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;tieba_cookie&quot;</span>: <span class="string">&quot;BIDUPSID=xxxxxx; PSTM=xxxxxx; BAIDUID=xxxxxx; BAIDUID_BFESS=xxxxxx; delPer=xxxxxx; PSINO=xxxxxx; H_PS_PSSID=xxxxxx; BA_HECTOR=xxxxxx; BDORZ=xxxxxx; TIEBA_USERTYPE=xxxxxx; st_key_id=xxxxxx; BDUSS=xxxxxx; BDUSS_BFESS=xxxxxx; STOKEN=xxxxxx; TIEBAUID=xxxxxx; ab_sr=xxxxxx; st_data=xxxxxx; st_sign=xxxxxx;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;tieba_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;BILIBILI_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;bilibili_cookie&quot;</span>: <span class="string">&quot;_uuid=xxxxxx; rpdid=xxxxxx; LIVE_BUVID=xxxxxx; PVID=xxxxxx; blackside_state=xxxxxx; CURRENT_FNVAL=xxxxxx; buvid3=xxxxxx; fingerprint3=xxxxxx; fingerprint=xxxxxx; buivd_fp=xxxxxx; buvid_fp_plain=xxxxxx; DedeUserID=xxxxxx; DedeUserID__ckMd5=xxxxxx; SESSDATA=xxxxxx; bili_jct=xxxxxx; bsource=xxxxxx; finger=xxxxxx; fingerprint_s=xxxxxx;&quot;</span>,</span><br><span class="line">      <span class="string">&quot;coin_num&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;coin_type&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="string">&quot;silver2coin&quot;</span>: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;bilibili_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span>,</span><br><span class="line">      <span class="string">&quot;coin_num&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;coin_type&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="string">&quot;silver2coin&quot;</span>: true</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;V2EX_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;v2ex_cookie&quot;</span>: <span class="string">&quot;_ga=xxxxxx; __cfduid=xxxxxx; PB3_SESSION=xxxxxx; A2=xxxxxx; V2EXSETTINGS=xxxxxx; V2EX_REFERRER=xxxxxx; V2EX_LANG=xxxxxx; _gid=xxxxxx; V2EX_TAB=xxxxxx;&quot;</span>,</span><br><span class="line">      <span class="string">&quot;v2ex_proxy&quot;</span>: <span class="string">&quot;使用代理的信息，无密码例子: http://127.0.0.1:1080 有密码例子: http://username:password@127.0.0.1:1080&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;v2ex_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span>,</span><br><span class="line">      <span class="string">&quot;v2ex_proxy&quot;</span>: <span class="string">&quot;使用代理的信息，无密码例子: http://127.0.0.1:1080 有密码例子: http://username:password@127.0.0.1:1080&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;WWW2NZZ_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;www2nzz_cookie&quot;</span>: <span class="string">&quot;YPx9_2132_saltkey=xxxxxx; YPx9_2132_lastvisit=xxxxxx; YPx9_2132_sendmail=xxxxxx; YPx9_2132_con_request_uri=xxxxxx; YPx9_2132_sid=xxxxxx; YPx9_2132_client_created=xxxxxx; YPx9_2132_client_token=xxxxxx; YPx9_2132_ulastactivity=xxxxxx; YPx9_2132_auth=xxxxxx; YPx9_2132_connect_login=xxxxxx; YPx9_2132_connect_is_bind=xxxxxx; YPx9_2132_connect_uin=xxxxxx; YPx9_2132_stats_qc_login=xxxxxx; YPx9_2132_checkpm=xxxxxx; YPx9_2132_noticeTitle=xxxxxx; YPx9_2132_nofavfid=xxxxxx; YPx9_2132_lastact=xxxxxx;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;www2nzz_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;SMZDM_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;smzdm_cookie&quot;</span>: <span class="string">&quot;__jsluid_s=xxxxxx; __ckguid=xxxxxx; device_id=xxxxxx; homepage_sug=xxxxxx; r_sort_type=xxxxxx; _zdmA.vid=xxxxxx; sajssdk_2015_cross_new_user=xxxxxx; sensorsdata2015jssdkcross=xxxxxx; footer_floating_layer=xxxxxx; ad_date=xxxxxx; ad_json_feed=xxxxxx; zdm_qd=xxxxxx; sess=xxxxxx; user=xxxxxx; _zdmA.uid=xxxxxx; smzdm_id=xxxxxx; userId=xxxxxx; bannerCounter=xxxxxx; _zdmA.time=xxxxxx;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;smzdm_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;MIMOTION_ACCOUNT_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;mimotion_phone&quot;</span>: <span class="string">&quot;18888xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;mimotion_password&quot;</span>: <span class="string">&quot;Sitoi&quot;</span>,</span><br><span class="line">      <span class="string">&quot;mimotion_min_step&quot;</span>: <span class="string">&quot;10000&quot;</span>,</span><br><span class="line">      <span class="string">&quot;mimotion_max_step&quot;</span>: <span class="string">&quot;20000&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;mimotion_phone&quot;</span>: <span class="string">&quot;多账号 手机号填写，请参考上面&quot;</span>,</span><br><span class="line">      <span class="string">&quot;mimotion_password&quot;</span>: <span class="string">&quot;多账号 密码填写，请参考上面&quot;</span>,</span><br><span class="line">      <span class="string">&quot;mimotion_min_step&quot;</span>: <span class="string">&quot;多账号 最小步数填写，请参考上面&quot;</span>,</span><br><span class="line">      <span class="string">&quot;mimotion_max_step&quot;</span>: <span class="string">&quot;多账号 最大步数填写，请参考上面&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;ACFUN_ACCOUNT_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;acfun_phone&quot;</span>: <span class="string">&quot;18888xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;acfun_password&quot;</span>: <span class="string">&quot;Sitoi&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;acfun_phone&quot;</span>: <span class="string">&quot;多账号 手机号填写，请参考上面&quot;</span>,</span><br><span class="line">      <span class="string">&quot;acfun_password&quot;</span>: <span class="string">&quot;多账号 密码填写，请参考上面&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;CLOUD189_ACCOUNT_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;cloud189_phone&quot;</span>: <span class="string">&quot;18888xxxxxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;cloud189_password&quot;</span>: <span class="string">&quot;Sitoi&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;cloud189_phone&quot;</span>: <span class="string">&quot;多账号 手机号填写，请参考上面&quot;</span>,</span><br><span class="line">      <span class="string">&quot;cloud189_password&quot;</span>: <span class="string">&quot;多账号 密码填写，请参考上面&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;POJIE_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;pojie_cookie&quot;</span>: <span class="string">&quot;htVD_2132_client_token=xxxxxx; htVD_2132_connect_is_bind=xxxxxx; htVD_2132_connect_uin=xxxxxx; htVD_2132_nofavfid=xxxxxx; htVD_2132_smile=xxxxxx; Hm_lvt_46d556462595ed05e05f009cdafff31a=xxxxxx; htVD_2132_saltkey=xxxxxx; htVD_2132_lastvisit=xxxxxx; htVD_2132_client_created=xxxxxx; htVD_2132_auth=xxxxxx; htVD_2132_connect_login=xxxxxx; htVD_2132_home_diymode=xxxxxx; htVD_2132_visitedfid=xxxxxx; htVD_2132_viewid=xxxxxx; KF4=xxxxxx; htVD_2132_st_p=xxxxxx; htVD_2132_lastcheckfeed=xxxxxx; htVD_2132_sid=xxxxxx; htVD_2132_ulastactivity=xxxxxx; htVD_2132_noticeTitle=xxxxxx;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;pojie_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;MGTV_PARAMS_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;mgtv_params&quot;</span>: <span class="string">&quot;uuid=xxxxxx&amp;uid=xxxxxx&amp;ticket=xxxxxx&amp;token=xxxxxx&amp;device=iPhone&amp;did=xxxxxx&amp;deviceId=xxxxxx&amp;appVersion=6.8.2&amp;osType=ios&amp;platform=iphone&amp;abroad=0&amp;aid=xxxxxx&amp;nonce=xxxxxx&amp;timestamp=xxxxxx&amp;appid=xxxxxx&amp;type=1&amp;sign=xxxxxx&amp;callback=xxxxxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;mgtv_params&quot;</span>: <span class="string">&quot;多账号 请求参数填写，请参考上面&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;PICACOMIC_ACCOUNT_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;picacomic_email&quot;</span>: <span class="string">&quot;Sitoi&quot;</span>,</span><br><span class="line">      <span class="string">&quot;picacomic_password&quot;</span>: <span class="string">&quot;xxxxxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;picacomic_email&quot;</span>: <span class="string">&quot;多账号 账号填写，请参考上面&quot;</span>,</span><br><span class="line">      <span class="string">&quot;picacomic_password&quot;</span>: <span class="string">&quot;多账号 密码填写，请参考上面&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;MEIZU_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;meizu_cookie&quot;</span>: <span class="string">&quot;aliyungf_tc=xxxxxx; logined_uid=xxxxxx; acw_tc=xxxxxx; LT=xxxxxx; MZBBS_2132_saltkey=xxxxxx; MZBBS_2132_lastvisit=xxxxxx; MZBBSUC_2132_auth=xxxxxx; MZBBSUC_2132_loginmember=xxxxxx; MZBBSUC_2132_ticket=xxxxxx; MZBBS_2132_sid=xxxxxx; MZBBS_2132_ulastactivity=xxxxxx; MZBBS_2132_auth=xxxxxx; MZBBS_2132_loginmember=xxxxxx; MZBBS_2132_lastcheckfeed=xxxxxx; MZBBS_2132_checkfollow=xxxxxx; MZBBS_2132_lastact=xxxxxx;&quot;</span>,</span><br><span class="line">      <span class="string">&quot;draw_count&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;meizu_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span>,</span><br><span class="line">      <span class="string">&quot;draw_count&quot;</span>: <span class="string">&quot;多账号 抽奖次数设置&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;ZHIYOO_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;zhiyoo_cookie&quot;</span>: <span class="string">&quot;ikdQ_9242_saltkey=xxxxxx; ikdQ_9242_lastvisit=xxxxxx; ikdQ_9242_onlineusernum=xxxxxx; ikdQ_9242_sendmail=1; ikdQ_9242_seccode=xxxxxx; ikdQ_9242_ulastactivity=xxxxxx; ikdQ_9242_auth=xxxxxx; ikdQ_9242_connect_is_bind=xxxxxx; ikdQ_9242_nofavfid=xxxxxx; ikdQ_9242_checkpm=xxxxxx; ikdQ_9242_noticeTitle=1; ikdQ_9242_sid=xxxxxx; ikdQ_9242_lip=xxxxxx; ikdQ_9242_lastact=xxxxxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;zhiyoo_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;WEIBO_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;weibo_show_url&quot;</span>: <span class="string">&quot;https://api.weibo.cn/2/users/show?wm=xxxxxx&amp;launchid=xxxxxx&amp;b=xxxxxx&amp;from=xxxxxx&amp;c=xxxxxx&amp;networktype=xxxxxx&amp;v_p=xxxxxx&amp;skin=xxxxxx&amp;v_f=xxxxxx&amp;lang=xxxxxx&amp;sflag=xxxxxx&amp;ua=xxxxxx&amp;ft=xxxxxx&amp;aid=xxxxxx&amp;has_extend=xxxxxx&amp;uid=xxxxxx&amp;gsid=xxxxxx&amp;sourcetype=&amp;get_teenager=xxxxxx&amp;s=xxxxxx&amp;has_profile=xxxxxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;weibo_show_url&quot;</span>: <span class="string">&quot;多账号 show_url 填写，请参考上面，show_url 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;DUOKAN_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;duokan_cookie&quot;</span>: <span class="string">&quot;user_id=xxxxxx; token=xxxxxx; user_gender=xxxxxx; device_id=xxxxxx; app_id=xxxxxx; build=xxxxxx; short_version=xxxxxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;duokan_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;CSDN_COOKIE_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;csdn_cookie&quot;</span>: <span class="string">&quot;uuid_tt_dd=xxxxxx; _ga=xxxxxx; UserName=xxxxxx; UserInfo=xxxxxx; UserToken=xxxxxx; UserNick=xxxxxx; AU=768; UN=xxxxxx; BT=xxxxxx; p_uid=xxxxxx; Hm_up_6bcd52f51e9b3dce32bec4a3997715ac=xxxxxx; Hm_ct_6bcd52f51e9b3dce32bec4a3997715ac=xxxxxx; Hm_lvt_6bcd52f51e9b3dce32bec4a3997715ac=xxxxxx dc_sid=xxxxxx; c_segment=xxxxxx; dc_session_id=xxxxxx; csrfToken=xxxxxx; c_first_ref=xxxxxx; c_first_page=xxxxxx; c_page_id=xxxxxx; announcement-new=xxxxxx; log_Id_click=xxxxxx; c_pref=xxxxxx; c_ref=xxxxxx; dc_tos=xxxxxx; log_Id_pv=xxxxxx; log_Id_view=xxxxxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;csdn_cookie&quot;</span>: <span class="string">&quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;WZYD_DATA_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;wzyd_data&quot;</span>: <span class="string">&quot;areaId=xxxxxx&amp;roleId=xxxxxx&amp;gameId=xxxxxx&amp;serverId=xxxxxx&amp;gameOpenid=xxxxxx&amp;userId=xxxxxx&amp;appVersion=xxxxxx&amp;cClientVersionName=xxxxxx&amp;platid=xxxxxx&amp;source=xxxxxx&amp;algorithm=xxxxxx&amp;version=xxxxxx&amp;timestamp=xxxxxx&amp;appid=xxxxxx&amp;openid=xxxxxx&amp;sig=xxxxxx&amp;encode=2&amp;msdkEncodeParam=xxxxxx&amp;cSystem=xxxxxx&amp;h5Get=xxxxxx&amp;msdkToken=&amp;appOpenid=xxxxxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;wzyd_data&quot;</span>: <span class="string">&quot;多账号 data 填写，请参考上面，data 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;WOMAIL_URL_LIST&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;womail_url&quot;</span>: <span class="string">&quot;https://nyan.mail.wo.cn/cn/sign/index/index?mobile=xxxxxx&amp;userName=&amp;openId=xxxxxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;womail_url&quot;</span>: <span class="string">&quot;多账号 url 填写，请参考上面，url 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后翻到网页顶部，你可以看到每个参数需要填入的具体内容是什么：</p><p><img data-src="/330/d1acfe259499094650f64af755ad8f8869dccbf2.jpg@942w_2289h_progressive.webp" alt="img" loading="lazy"></p><p>挑其中一部分来解释一下</p><p><img data-src="/330/e99d5c16bdaa7d01a10dd0266e38469334a7dbf6.png@90w_84h_progressive.webp" alt="img" loading="lazy"></p><p>比如下图这段代码，就是签到天翼云盘需要填入「手机号」和「对应的密码」</p><p>如果你想签到1个账号，就上下两处任选其一填入；如果想签到2个账号，就填入2份；如果你还想签到第3个账号，还可以按照下图的格式继续增加<code>（注意&#123;&#125;与，的规范）</code></p><p><img data-src="/330/7a31267990739d8cc51b5b2911f54f5db9c32af1.jpg@942w_561h_progressive.webp" alt="img" loading="lazy"></p><p>你可以选择将上面那部分代码<strong>全部复制并粘贴到config.json</strong>，然后仅填写自己需要的部分</p><p>实际执行的时候会自动跳过你没填参数的签到项目</p><p>不过如果你追求代码简介，也可以像阿虚这样，仅保留你需要签到项目部分的代码（下图我仅保留了签到有道云笔记和天翼云网盘需要传入的参数）</p><p><img data-src="/330/aa325e70181448b0091c07b0ebefd0190b330959.jpg@942w_402h_progressive.webp" alt="▲注意最外层的{}" loading="lazy">▲注意最外层的{}</p><p>除了部分项目是简单填入账号密码就可以进行签到，多数是需要填入Cookies信息才行</p><blockquote><p>Cookies你可以简单理解为二次加密后的账号密码</p></blockquote><p>怎么获取Cookies请看本文的第２部分</p><p><img data-src="/330/32fac4c12a9768a57435076f06a6e9dacbd43f36.png@90w_77h_progressive.webp" alt="img" loading="lazy"></p><p>需要注意的是，默认配置代码模板里面，给了Cookies的参考样式，但你无需把获取到的Cookies一定按模板那样排序</p><p>举例有道云笔记的Cookies模板是下图这样：</p><p><img data-src="/330/6982fc6c6b164c0f27b3b96cdabcc6096ca8e53e.jpg@942w_177h_progressive.webp" alt="img" loading="lazy"></p><p>这意味着正确的Cookies中应该包含JSESSIONID、__yadk_uid等参数</p><p>但你<strong>无需去调整</strong>获取到的Cookies和模板里的<strong>排序一样</strong>，你获取到的Cookies是什么你就填入什么</p><p><img data-src="/330/32fac4c12a9768a57435076f06a6e9dacbd43f36.png@90w_77h_progressive.webp" alt="img" loading="lazy"></p><p>填写好之后，点击左下角的测试，会提示你是否进行部署并测试，点击「是」</p><p><img data-src="/330/969404feaf57ee8c1201e025ec18463f52f7bdf8.jpg@942w_528h_progressive.webp" alt="img" loading="lazy"></p><p>耐心等待返回结果，如果显示测试成功，那就可以确定你以上的操作都是正常的</p><p><img data-src="/330/120f97f31240fd0b70951e69117a9e53e3d7f77b.jpg@924w_462h_progressive.webp" alt="img" loading="lazy"></p><p>测试成功的话，那就再点击一下「测试」按钮左边的「部署」就行了</p><p>GIF</p><p><img data-src="/330/ea4ec75f9fc2367dd3d182bfcccd5483bad53264.gif@1s.webp" alt="img" loading="lazy"></p><h1 id="●-1-4-关于推送"><a href="#●-1-4-关于推送" class="headerlink" title="● 1.4 关于推送"></a>● 1.4 关于推送</h1><p>这个项目还支持用以下方式进行签到结果推送到手机：</p><ul><li>dingtalk（钉钉）</li><li>企业微信群机器人（企业微信）</li><li>企业微信应用消息（企业微信）</li><li>telegram（TG）</li><li>Bark（iOS）</li><li>server 酱（微信）</li><li>server 酱 TURBO（微信）</li><li>pushplus（微信）</li><li>Cool Push（QQ,微信,邮箱）</li><li>qmsg 酱（QQ）</li></ul><p>但这个挨着讲可就太费篇幅了，大家如果有这方面的需求，只能上项目官方配置页面看简短的说明＋自己百度来进行配置了（其实基本上就是注册对应平台获取Key来填入）</p><p>建议可以考虑配置server 酱（微信）、qmsg 酱（QQ）、Bark（iOS）、dingtalk（钉钉），这些配置起来是比较简单的</p><p>阿虚自己是利用 Bark 推送签到结果到手机的（Bark的用法正好我原来也写过，👉点击查看），我的参数配置页面如下</p><p><img data-src="/330/67e905fad7488a5628deac2a6ac515fdd88cf938.jpg@942w_414h_progressive.webp" alt="img" loading="lazy"></p><p>iOS上收到签到结果的效果则如下，</p><p><img data-src="/330/89d33c6e668515cb4aa9b94ed40c0fd9fd037d6f.jpg@665w_1419h_progressive.webp" alt="img" loading="lazy"></p><h1 id="●-1-5-关于费用"><a href="#●-1-5-关于费用" class="headerlink" title="● 1.5 关于费用"></a>● 1.5 关于费用</h1><p>腾讯云的云函数<strong>目前是完全免费的</strong>，虽然可能还是会产生一点外网出流量，但是量特别低！大约110天左右产生一次计费，国内地区差不多是8毛钱左右</p><p>GIF</p><p><img data-src="/330/a18d1f442afa0598a62ca5bcdcb7d0e693c54be1.gif@1s.webp" alt="img" loading="lazy"></p><h1 id="▍2-怎么获取Cookies"><a href="#▍2-怎么获取Cookies" class="headerlink" title="▍2 怎么获取Cookies"></a>▍2 怎么获取Cookies</h1><p>这部分内容在上篇发过，但为了文章整体流畅度，还是再发一遍</p><p>GIF</p><p><img data-src="/330/4904fd8a74f96925b74ed0d6219481dd0b94378f.gif@1s.webp" alt="img" loading="lazy"></p><p>打开网页，先登录你的账号，然后按F12调出浏览器的开发者模式，接着按F5刷新一下网页</p><p>然后找到「网络（network）」选项卡，跟着下图的路径，便能在「标头（Headers）」中找到cookie信息了</p><p><img data-src="/330/f1f839261618559bebfc272cb00e38484e61205e.jpg@942w_717h_progressive.webp" alt="img" loading="lazy"></p><p>对着cookie这部分右键，就能复制其值了</p><h1 id="▍3-其他同类签到项目"><a href="#▍3-其他同类签到项目" class="headerlink" title="▍3 其他同类签到项目"></a>▍3 其他同类签到项目</h1><p>最后再顺便整理了一下Github上基于腾讯云函数的其他的一些签到项目：</p><p>不过以下这些项目并不一定完全能参考本文所述的部署方式，一些作者也另外专门写了部署方式，这里就留给觉得有需要的粉丝自行研究了</p><ol><li>超星学习通：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3l1YmFuMTA3MDMvY2hhb3hpbmdzaWdu">https://github.com/yuban10703/chaoxingsign<i class="fa fa-external-link-alt"></i></span></li><li>BiliBili抽奖／葫芦侠／吾爱破解／EduCoder／学习通－健康上报&amp;课堂签到／小One易统计打卡：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21rZGlyNzAwL3NpZ25faW4=">https://github.com/mkdir700/sign_in<i class="fa fa-external-link-alt"></i></span></li><li>京东签到合集：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2x1a2VzeXkvamRfeXVu">https://github.com/lukesyy/jd_yun<i class="fa fa-external-link-alt"></i></span></li><li>和彩云：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2x1a2VzeXkvamRfeXVu">https://github.com/lukesyy/jd_yun<i class="fa fa-external-link-alt"></i></span></li><li>爱奇艺／腾讯视频／芒果TV／网易云音乐／天翼云盘／52破解论坛／精易论坛／乐易论坛：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0Rpbmd1Z3UvU0NGX1NpZ24=">https://github.com/Dingugu/SCF_Sign<i class="fa fa-external-link-alt"></i></span></li><li>天翼云盘／最终幻想14／什么值得买／52破解论坛／网易云音乐／有道云笔记／V2EX／恩山论坛／智友邦：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lbmdzaG91ZXIvQ2hlY2tpbkJveA==">https://github.com/mengshouer/CheckinBox<i class="fa fa-external-link-alt"></i></span></li><li>完美校园每日定时自动打卡：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZOREhTVEQvV2FueGlhb0hlYWx0aHlDaGVja09uVGVuY2VudENsb3Vk">https://github.com/FNDHSTD/WanxiaoHealthyCheckOnTencentCloud<i class="fa fa-external-link-alt"></i></span></li><li>米游社原神签到：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JhaW5lcm9zaW9uL3l1YW5zaGVuLXNjZg==">https://github.com/rainerosion/yuanshen-scf<i class="fa fa-external-link-alt"></i></span></li></ol><blockquote><p>Github目前处于半墙状态，建议了解《Github加速下载教程》<span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvWkhaVDVxUFQxM2FUUWV5SGstb3pLZw==">https://mp.weixin.qq.com/s/ZHZT5qPT13aTQeyHk-ozKg<i class="fa fa-external-link-alt"></i></span></p></blockquote><p><img data-src="/330/93dcce95faba5d0a1b4993ccc840c0024c9a98e1.gif" alt="img" loading="lazy"></p><p>最后说一下，除了<strong>京东</strong>和<strong>B站</strong>似乎在打击云服务器自动签到这个事，多数签到项目都是能放心用的</p><p><img data-src="/330/8a7cf68b944be5ecfadf022136765b60df27a50e.png@90w_81h_progressive.webp" alt="img" loading="lazy"></p><p>之前用 Github Actions 来自动签到出问题也<strong>不是签到项目的问题</strong>，而是有人利用 Github Actions 来挖矿，微软不得已大力清扫整个 Github Actions 项目而已——等于说签到类项目是躺枪</p><p><img data-src="/330/e51188642b2799bcfca50d5b5112d5e3fe145f7b.png@90w_78h_progressive.webp" alt="img" loading="lazy"></p><p>所以基于腾讯云函数的自动签到基本上是可以放心长时间使用的</p><p><img data-src="/330/03ac9e82ca6d4c30131e1237f5984b6ed4e165bf.gif" alt="img" loading="lazy"></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Edge Chrome 区别</title>
    <link href="https://weilining.github.io/329.html"/>
    <id>https://weilining.github.io/329.html</id>
    <published>2021-10-29T03:33:50.000Z</published>
    <updated>2021-10-29T03:33:50.000Z</updated>
    
    <content type="html"><![CDATA[<p> 对比</p><table><thead><tr><th>Edge</th><th>Chrome</th></tr></thead><tbody><tr><td>右键搜索可以在右侧边栏显示结果</td><td>只能在新标签显示</td></tr><tr><td>下载任务还是在左下角显示</td><td>只有瞬间消失的通知</td></tr><tr><td>网页自动隐藏书签栏</td><td>刚刚跟进</td></tr><tr><td>集锦网页保存</td><td>无</td></tr><tr><td>网页截图自带</td><td>无</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>单反无反区别</title>
    <link href="https://weilining.github.io/328.html"/>
    <id>https://weilining.github.io/328.html</id>
    <published>2021-10-28T08:58:24.000Z</published>
    <updated>2021-10-28T08:58:24.000Z</updated>
    
    <content type="html"><![CDATA[<p> 单反相机：单镜头反光相机</p><p><img data-src="/328/30aff098f7114ff3b764b4712442f014.jpeg" alt="img" loading="lazy"></p><p>无反相机</p><p><img data-src="/328/1e06c000680fa6cdf89ad.jpeg" alt="img" loading="lazy"></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly93dWtvbmcudG91dGlhby5jb20vcXVlc3Rpb24vNjcwMTE4ODczNzc2MzYzOTU2NS8=">你知道单反相机为什么叫单反吗？和无反相机有什么大的区别？-头条问答 (toutiao.com)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUs1NDExUDdkaC8=">2分钟了解单反、无反和手机相机之间的区别_哔哩哔哩_bilibili<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JThEJTk1JUU5JTk1JTlDJUU1JThGJThEJUU1JTg1JTg5JUU3JTlCJUI4JUU2JTlDJUJB">单镜头反光相机 - 维基百科，自由的百科全书 (wikipedia.org)<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效贴代码网站</title>
    <link href="https://weilining.github.io/327.html"/>
    <id>https://weilining.github.io/327.html</id>
    <published>2021-10-27T17:16:14.000Z</published>
    <updated>2021-10-27T17:16:14.000Z</updated>
    
    <content type="html"><![CDATA[<p> <span class="exturl" data-url="aHR0cHM6Ly9wYXN0ZWJpbi5jb20v">https://pastebin.com<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hey. Please post code or tracebacks using a pastebin rather then as plain text or. https:&#x2F;&#x2F;pastebin.com&#x2F; is quite popular, but there are many alternatives out there. Of course, for very short snippets, text is fine. Please at least format it as monospace in that case.</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效python镜像源</title>
    <link href="https://weilining.github.io/326.html"/>
    <id>https://weilining.github.io/326.html</id>
    <published>2021-10-27T16:20:33.000Z</published>
    <updated>2021-10-27T16:20:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>以<code>python-telegram-bot</code></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install  -i https:&#x2F;&#x2F;pypi.python.org&#x2F;simple python-telegram-bot&#x3D;&#x3D;13.7 -t .</span><br><span class="line">#官方</span><br><span class="line">python3 -m pip install  -i https:&#x2F;&#x2F;pypi.python.org&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">#清华大学</span><br><span class="line">python3 -m pip install -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">#腾讯</span><br><span class="line">python3 -m pip install -i http:&#x2F;&#x2F;mirrors.cloud.tencent.com&#x2F;pypi&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">#豆瓣</span><br><span class="line">python3 -m pip install -i http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">#阿里云</span><br><span class="line">python3 -m pip install  -i http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">#华中理工大学</span><br><span class="line">python3 -m pip install  -i http:&#x2F;&#x2F;pypi.hustunique.com&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">#山东理工大学</span><br><span class="line">python3 -m pip install  -i http:&#x2F;&#x2F;pypi.sdutlinux.org&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">#中国科学技术大学</span><br><span class="line">python3 -m pip install  -i http:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdpbmcucHl0aG9uLm9yZy90dXRvcmlhbHMvaW5zdGFsbGluZy1wYWNrYWdlcy8jaW5zdGFsbGluZy1mcm9tLW90aGVyLXNvdXJjZXM=">Installing Packages — Python Packaging User Guide<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效python包版本查看</title>
    <link href="https://weilining.github.io/325.html"/>
    <id>https://weilining.github.io/325.html</id>
    <published>2021-10-27T13:54:54.000Z</published>
    <updated>2021-10-27T13:54:54.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. pip list</span><br><span class="line"></span><br><span class="line">2. pip freeze</span><br><span class="line"></span><br><span class="line">3. pip show [package-name]</span><br></pre></td></tr></table></figure><h2 id="源中包版本"><a href="#源中包版本" class="headerlink" title="源中包版本"></a>源中包版本</h2><h3 id="本机源"><a href="#本机源" class="headerlink" title="本机源"></a>本机源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install python-telegram-bot&#x3D;&#x3D;</span><br><span class="line">python3 -m pip install python-telegram-bot</span><br></pre></td></tr></table></figure><h3 id="官方源"><a href="#官方源" class="headerlink" title="官方源"></a>官方源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https:&#x2F;&#x2F;pypi.python.org&#x2F;simple python-telegram-bot&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h2 id="参考文件"><a href="#参考文件" class="headerlink" title="参考文件"></a>参考文件</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS93M2Nub3RlL3B5dGhvbi1waXAtaW5zdGFsbC11c2FnZS5odG1s">Python pip 安装与使用 | 菜鸟教程 (runoob.com)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdpbmcucHl0aG9uLm9yZy90dXRvcmlhbHMvaW5zdGFsbGluZy1wYWNrYWdlcy8=">Installing Packages — Python Packaging User Guide<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>已知的 Telegram 的限制</title>
    <link href="https://weilining.github.io/324.html"/>
    <id>https://weilining.github.io/324.html</id>
    <published>2021-10-27T12:17:53.000Z</published>
    <updated>2021-10-27T12:17:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9weXRob24tdGVsZWdyYW0tYm90LnJlYWR0aGVkb2NzLmlvL2VuL3N0YWJsZS90ZWxlZ3JhbS5jb25zdGFudHMuaHRtbCN0ZWxlZ3JhbS5jb25zdGFudHMuTUFYX01FU1NBR0VfTEVOR1RI">telegram.constants.MAX_MESSAGE_LENGTH<i class="fa fa-external-link-alt"></i></span></p><p>Bot发送信息长度4096个字节</p><p>● 账户</p><blockquote><p>用户名：形如 @TGgeek，5~32字符。</p></blockquote><p>相关内容：</p><ul><li><p>用户名(username)有什么用？一定要设置吗？如何设置？</p></li><li><p>如果我想使用的用户名（username）已被占用怎么办？</p></li><li><p>Telegram 账号 id 介绍说明</p></li><li><p>Telegram &quot;user id link&quot; 介绍说明</p></li><li><p>修改用户名(username)或者群组ID有次数限制吗？</p></li></ul><blockquote><p>签名：最多70字符。</p></blockquote><blockquote><p>名字长度：1~64字符。</p></blockquote><blockquote><p>姓氏长度：0~64字符。</p></blockquote><blockquote><p>账号自毁时限：如果账号在一定时间内不上线，到时限后会自动删除账号和所有资料，删除后不可找回，只能重新注册。默认时限为6个月，可以选择1个月、3个月、6个月或12个月。</p></blockquote><blockquote><p>滥发垃圾消息封禁：3天或更久。</p></blockquote><p>注：封禁时间与封禁次数有关，次数越多时间越久，最终会导致永久禁止主动发起私聊和在公开群组发言。</p><p>相关内容：</p><ul><li><p>发骚扰信息会怎么样？</p></li><li><p>TG使用 +86 手机号注册，无法私聊其他人？</p></li><li><p>为什么我发消息不成功并且消息右下角有红色感叹号？</p></li></ul><blockquote><p>一个账号可以加入的频道和超级群组数量：包括您拥有的频道和群组在内，一共可以加入最多500个。</p></blockquote><blockquote><p>可保存的 GIF 数量：最多200个。</p></blockquote><blockquote><p>视频头像时长：最多10秒。</p></blockquote><blockquote><p>群组和频道创建数量：一天最多50个。</p></blockquote><p>注：一个账号所拥有的公开群组和公开频道的总数量最多10个。</p><blockquote><p>官方客户端可登录账户数：最多三个。</p></blockquote><p>相关内容：电脑版 Telegram 多开/登录多账号</p><p>● 对话和群组</p><blockquote><p>群组成员：最多20万人。</p></blockquote><blockquote><p>群组内管理员数量：最多50个。</p></blockquote><blockquote><p>群组内机器人数量：最多20个。</p></blockquote><blockquote><p>聊天主列表可置顶的对话数量：最多5个对话或频道+5个加密对话。</p></blockquote><blockquote><p>群组名称和简介：最多255字符。</p></blockquote><blockquote><p>照片和视频自毁时限：可设置1~60秒。</p></blockquote><blockquote><p>近期操作可查看的时间范围：近2日。</p></blockquote><blockquote><p>单条消息可at成员总数：最多50个，超过则不会发出通知。</p></blockquote><blockquote><p>群组内可见消息数量：最多100万。</p></blockquote><p>注：在群组搜索框输入 + 或 - 可以查看群组中现有消息数。</p><blockquote><p>置顶消息数量：无上限。</p></blockquote><blockquote><p>查看群组统计数据的最低人数：500人。</p></blockquote><blockquote><p>群组用户名更改保留时限：约15~30分钟。</p></blockquote><blockquote><p>设置群组贴纸的最低人数：100人以上。</p></blockquote><p>● 语音聊天</p><blockquote><p>参与人数：无上限。</p></blockquote><blockquote><p>视频功能（相机及屏幕共享）：只有前30个参与者可以开启相机及屏幕共享，之后的参与者只能进行语音聊天。</p></blockquote><p>注：Telegram 承诺此后更新会增加此数量。</p><blockquote><p>标题长度：最多64字符。</p></blockquote><blockquote><p>预定时间范围：最多7天。</p></blockquote><p>● 频道</p><blockquote><p>可拥有的公开群组和公开频道数量：最多10个。</p></blockquote><blockquote><p>用户名长度：5~32字符。</p></blockquote><blockquote><p>频道名称和简介：最多255字符。</p></blockquote><blockquote><p>频道管理员数量：包括机器人管理员在内，最多50个。</p></blockquote><blockquote><p>帖子编辑时限：无限制，但如果频道链接了讨论组，则不会在群组中更新超过2周的帖子。</p></blockquote><blockquote><p>频道订阅者数量：无限制。</p></blockquote><blockquote><p>频道管理员可见的订阅者：200个。</p></blockquote><blockquote><p>频道注销：超过1k订阅者的频道只能被 Telegram 官方删除。</p></blockquote><blockquote><p>不订阅的情况下对私密频道访问：一天最多5分钟。</p></blockquote><p>相关内容：在不加入私密频道时访问频道内容。</p><blockquote><p>可邀请用户：最多200个。</p></blockquote><blockquote><p>查看频道统计数据的最低人数：50人。</p></blockquote><blockquote><p>频道用户名更改保留时限：约15~30分钟。</p></blockquote><p>● 消息</p><blockquote><p>单条消息长度：最多4096字符。</p></blockquote><blockquote><p>媒体消息描述：最多1024字符。</p></blockquote><p>注：即发送照片或视频等媒体文件时，附加的文本描述内容。</p><blockquote><p>上传文件大小：最多2G。</p></blockquote><blockquote><p>视频消息时长：最多1分钟。</p></blockquote><blockquote><p>单条消息使用相册模式发布图片或视频数量：最多10个。</p></blockquote><blockquote><p>预定消息数量：最多100个。</p></blockquote><blockquote><p>预定时间范围：最多365天。</p></blockquote><p>● 文件夹</p><blockquote><p>文件夹数量：最多10个。</p></blockquote><blockquote><p>文件夹内置顶对话数量：最多100个。</p></blockquote><p>● 附近的人</p><blockquote><p>可见范围：约12km。</p></blockquote><blockquote><p>可见用户数量：最多100人。</p></blockquote><blockquote><p>可见基于地理位置的聊天：最多10个最近的聊天。</p></blockquote><p>● 机器人</p><blockquote><p>可由 @BotFather 生成的机器人数量：最多20个。</p></blockquote><p>相关内容：我能创建多少机器人？ </p><blockquote><p>机器人用户名长度：5~32字符。</p></blockquote><blockquote><p>机器人信息长度：最多120字符。</p></blockquote><p>注：机器人信息即初始和机器人对话时显示的提示框内容。</p><blockquote><p>机器人简介长度：最多512字符。</p></blockquote><p>注：简介和普通账号的签名类似。</p><blockquote><p>使用 BotAPI 的文件限制：上传最大50MB，下载最大20MB。</p></blockquote><blockquote><p>转发消息数量：最多每小时2000条。</p></blockquote><blockquote><p>键盘按钮数量：最多100个。</p></blockquote><blockquote><p>消息格式数据：最多10KB。</p></blockquote><blockquote><p>消息频率：每秒最多30条；对于公开群组和频道的机器人来说，每分钟最多20条。可由 @BotSupport 提升该数量。</p></blockquote><blockquote><p>API 请求频率：每秒最多30次请求，可由 @BotSupport 提升该数量。</p></blockquote><blockquote><p>机器人命令数量：最多100个。指在 @BotFather 中可设置在命令列表显示出的命令，而不是代码中的命令数量。</p></blockquote><blockquote><p>机器人命令长度：1~32字符。</p></blockquote><blockquote><p>机器人命令描述长度：2~256字符。</p></blockquote><blockquote><p>机器人 /start 命令 payload 长度：最多64字符。</p></blockquote><blockquote><p>机器人警告消息长度：最多200字符。</p></blockquote><blockquote><p>机器人用户名更改保留时限：最多每天200个，且同时包括账户用户名和机器人用户名在内。</p></blockquote><blockquote><p>inline 命令结果数量：最多50个。</p></blockquote><p>相关内容：机器人 inline 模式是什么？怎么使用？</p><p>● 搜索</p><blockquote><p>全局搜索结果：最多10个，在 Android 上是3个。</p></blockquote><blockquote><p>全局搜索最小搜索长度：至少4字符。</p></blockquote><p>● 贴纸</p><blockquote><p>添加的贴纸包数量：最多200个。</p></blockquote><blockquote><p>收藏的贴纸数量：最多5个。</p></blockquote><blockquote><p>贴纸包中的贴纸数量：静态最多120个，动态最多50个。</p></blockquote><blockquote><p>贴纸尺寸：对于静态来说，一边等于512像素，另一边等于或小于512像素；对于动态来说需严格为512*512像素。</p></blockquote><blockquote><p>动态贴纸时长：最多3秒。</p></blockquote><blockquote><p>贴纸大小：静态最大512KB，动态最大64KB。</p></blockquote><blockquote><p>FPS：30或60。</p></blockquote><blockquote><p>贴纸包名称长度：最大64字符。</p></blockquote><p>● Telegraph</p><blockquote><p>账号数量：最多5个。</p></blockquote><p>注：指使用 @telegraph 创建的账户。若直接使用 <span class="exturl" data-url="aHR0cHM6Ly90ZWxlZ3JhLnBoLw==">https://telegra.ph<i class="fa fa-external-link-alt"></i></span> 可以匿名发表文章，但是删除 cookie 后不可再编辑。</p><blockquote><p>文章大小：最多64KiB。</p></blockquote><p>● 其他</p><blockquote><p>视频头像属性：800*800像素，最大2MB。</p></blockquote><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly9weXRob24tdGVsZWdyYW0tYm90LnJlYWR0aGVkb2NzLmlvL2VuL3N0YWJsZS90ZWxlZ3JhbS5jb25zdGFudHMuaHRtbCN0ZWxlZ3JhbS5jb25zdGFudHMuTUFYX01FU1NBR0VfTEVOR1RI">telegram.constants Module — python-telegram-bot 13.7 documentation<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效TG推送不显示解决办法</title>
    <link href="https://weilining.github.io/323.html"/>
    <id>https://weilining.github.io/323.html</id>
    <published>2021-10-27T05:12:06.000Z</published>
    <updated>2021-10-27T05:12:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>TGBOT不显示<code>.</code>把点用逗号<code>,</code>代替即可</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>python3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result=result.replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;,&#x27;</span>) + <span class="string">&#x27;\n&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLzYyMzUyNDcxOC9Ib3N0bG9jQXV0b0dldFBvaW50cw==">623524718/HostlocAutoGetPoints (github.com)<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效腾讯云Python3推送TG之Hello World</title>
    <link href="https://weilining.github.io/322.html"/>
    <id>https://weilining.github.io/322.html</id>
    <published>2021-10-27T03:29:50.000Z</published>
    <updated>2021-10-27T03:29:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Python模块不用考虑未知BUG，源码有很多BUG要踩，推荐<code>python-telegram-bot</code>模块。腾讯无服务器云函数 Serverless Cloud Function (SCF)官网<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9wcm9kdWN0L3NjZg==">https://cloud.tencent.com/product/scf<i class="fa fa-external-link-alt"></i></span></p><h2 id="Python模块"><a href="#Python模块" class="headerlink" title="Python模块"></a>Python模块</h2><h3 id="创建SCF"><a href="#创建SCF" class="headerlink" title="创建SCF"></a>创建SCF</h3><p><span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL3NjZi9saXN0">https://console.cloud.tencent.com/scf/list<i class="fa fa-external-link-alt"></i></span></p><p>自定义创建</p><p>事件函数</p><p>代码部署</p><p>Python3.6</p><h3 id="python-telegram-bot"><a href="#python-telegram-bot" class="headerlink" title="python-telegram-bot"></a>python-telegram-bot</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B5dGhvbi10ZWxlZ3JhbS1ib3QvcHl0aG9uLXRlbGVncmFtLWJvdA==">python-telegram-bot/python-telegram-bot: We have made you a wrapper you can&#39;t refuse (github.com)<i class="fa fa-external-link-alt"></i></span></p><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd src</span><br><span class="line">python3 -m pip install  -i https:&#x2F;&#x2F;pypi.python.org&#x2F;simple python-telegram-bot&#x3D;&#x3D;13.7 -t .</span><br></pre></td></tr></table></figure><p>ps:只有清华源<code>https://pypi.python.org/simple</code>和官方源有<code>python-telegram-bot</code></p><h4 id="index-py代码"><a href="#index-py代码" class="headerlink" title="index.py代码"></a>index.py代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf8 -*-</span><br><span class="line">import telegram</span><br><span class="line"></span><br><span class="line">def main_handler(event, context):</span><br><span class="line">    TOKEN&#x3D;&#39;ssss&#39;</span><br><span class="line">    text&#x3D;&#39;Hello World&#39;</span><br><span class="line">    chat_id&#x3D;&#39;2222&#39;</span><br><span class="line">    bot &#x3D; telegram.Bot(token&#x3D;TOKEN)</span><br><span class="line">    try:</span><br><span class="line">        bot.send_message(text&#x3D;text, chat_id&#x3D;chat_id)</span><br><span class="line">        text&#x3D;&#39;a&#39; * telegram.constants.MAX_MESSAGE_LENGTH</span><br><span class="line">        bot.send_message(text&#x3D;text, chat_id&#x3D;chat_id)</span><br><span class="line">        text&#x3D;&#39;a&#39; * (telegram.constants.MAX_MESSAGE_LENGTH+1)</span><br><span class="line">        bot.send_message(text&#x3D;text, chat_id&#x3D;chat_id)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        err &#x3D; str(e)</span><br><span class="line">        bot.send_message(text&#x3D;err, chat_id&#x3D;chat_id)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    main_handler(&quot;&quot;,&quot;&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="telepot"><a href="#telepot" class="headerlink" title="telepot"></a>telepot</h3><p><strong>什么是 Telepot ？</strong></p><p>Telepot 是由 Nike Lee （github ID nickoala）开发的整合所有了telegram API并方便开发者使用的python packge，通过安装 telepot我们可以直接在python中使用telegram API的功能。</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pY2tvYWxhL3RlbGVwb3Q=">nickoala/telepot: Python framework for Telegram Bot API (github.com)<i class="fa fa-external-link-alt"></i></span></p><h4 id="安装依赖-1"><a href="#安装依赖-1" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd src</span><br><span class="line">pip install telepot -t .</span><br></pre></td></tr></table></figure><h4 id="index-py"><a href="#index-py" class="headerlink" title="index.py"></a>index.py</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf8 -*-</span><br><span class="line">import telepot #将telepot这个模组导入到Python中来</span><br><span class="line"></span><br><span class="line">def main_handler(event, context):</span><br><span class="line">bot_api&#x3D;jsljfaljdf</span><br><span class="line">    bot &#x3D; telepot.Bot(bot_api) #将bot这个在程序中使用的variable和你的bot token联系起来，在之后的程序中，每当要命令bot的时候可以直接call bot的instance</span><br><span class="line">    print(bot.getMe())</span><br><span class="line">    chat_id&#x3D;&#39;jaljflajslkjfl&#39;</span><br><span class="line">    text&#x3D;&#39;Hello World&#39;</span><br><span class="line">    bot.sendMessage(chat_id, text)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    main_handler(&quot;&quot;,&quot;&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><h3 id="创建SCF-1"><a href="#创建SCF-1" class="headerlink" title="创建SCF"></a>创建SCF</h3><p><span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL3NjZi9saXN0">https://console.cloud.tencent.com/scf/list<i class="fa fa-external-link-alt"></i></span></p><p>自定义创建</p><p>事件函数</p><p>代码部署</p><p>Python3.6</p><p> 代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"><span class="comment"># TG推送</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">TGPost</span>(<span class="params">bot_api, chat_id, text</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;开始推送&#x27;</span>)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36&#x27;</span>&#125;</span><br><span class="line">    text = parse.quote(text)</span><br><span class="line">    <span class="comment"># 修改为自己的bot api token</span></span><br><span class="line">    post_url = <span class="string">&#x27;https://api.telegram.org/bot&#123;&#125;/sendMessage&#x27;</span> \</span><br><span class="line">                <span class="string">&#x27;?parse_mode=MarkdownV2&amp;chat_id=&#123;&#125;&amp;text=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(bot_api, chat_id, text)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        requests.get(post_url, headers=headers)</span><br><span class="line">        print(<span class="string">&#x27;推送成功&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        print(<span class="string">&quot;推送失败&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="comment"># 避免推送死循环</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            requests.get(post_url, headers=headers)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main_handler</span>(<span class="params">event, context</span>):</span></span><br><span class="line">    print(<span class="string">&quot;Received event: &quot;</span> + json.dumps(event, indent = <span class="number">2</span>)) </span><br><span class="line">    print(<span class="string">&quot;Received context: &quot;</span> + <span class="built_in">str</span>(context))</span><br><span class="line">    bot_api = os.environ[<span class="string">&#x27;BOT_TOKEN&#x27;</span>]</span><br><span class="line">    chat_id = os.environ[<span class="string">&#x27;CHAT_ID&#x27;</span>]</span><br><span class="line">    TGPost(bot_api,chat_id,<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;Hello world&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span>(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main_handler(<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><h4 id="TGtoken获取方式"><a href="#TGtoken获取方式" class="headerlink" title="TGtoken获取方式"></a>TGtoken获取方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BOT_TOKEN 在@BotFather申请，</span><br><span class="line">CHAT_ID可以通过机器人@userinfobot发送任意消息获取，返回的id即是CHAT_ID</span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BOT_TOKEN</span><br><span class="line">CHAT_ID</span><br></pre></td></tr></table></figure><h4 id="编辑方法"><a href="#编辑方法" class="headerlink" title="编辑方法"></a>编辑方法</h4><p><img data-src="/322/image-20211027115103684.png" alt="image-20211027115103684" loading="lazy"></p><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>TG成功<code>Hello World</code></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效腾讯云函数python __main__ 运行</title>
    <link href="https://weilining.github.io/321.html"/>
    <id>https://weilining.github.io/321.html</id>
    <published>2021-10-27T03:13:53.000Z</published>
    <updated>2021-10-27T03:13:53.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最有效腾讯云函数if __name__ &#x3D;&#x3D; &quot;__main__&quot;:运行</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main_handler</span>(<span class="params">event, context</span>):</span></span><br><span class="line">    print(<span class="string">&quot;Received event: &quot;</span> + json.dumps(event, indent = <span class="number">2</span>)) </span><br><span class="line">    print(<span class="string">&quot;Received context: &quot;</span> + <span class="built_in">str</span>(context))</span><br><span class="line">    print(<span class="string">&quot;Hello world&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span>(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main_handler(<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效腾讯云函数修改环境变量</title>
    <link href="https://weilining.github.io/320.html"/>
    <id>https://weilining.github.io/320.html</id>
    <published>2021-10-27T02:03:41.000Z</published>
    <updated>2021-10-27T02:03:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9wcm9kdWN0L3NjZg==">https://cloud.tencent.com/product/scf<i class="fa fa-external-link-alt"></i></span></p><h2 id="腾讯无服务器云函数-Serverless-Cloud-Function-SCF"><a href="#腾讯无服务器云函数-Serverless-Cloud-Function-SCF" class="headerlink" title="腾讯无服务器云函数 Serverless Cloud Function (SCF)"></a>腾讯无服务器云函数 Serverless Cloud Function (SCF)</h2><p><span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL3NjZi9saXN0">https://console.cloud.tencent.com/scf/list<i class="fa fa-external-link-alt"></i></span></p><p><img data-src="/320/image-20211027100414279.png" alt="image-20211027100414279" loading="lazy"></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效Freenom域名自动续期</title>
    <link href="https://weilining.github.io/319.html"/>
    <id>https://weilining.github.io/319.html</id>
    <published>2021-10-26T17:46:20.000Z</published>
    <updated>2021-10-26T17:46:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>Freenom 域名自动续期。Freenom domain name renews automatically.</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="腾讯云函数python"><a href="#腾讯云函数python" class="headerlink" title="腾讯云函数python"></a>腾讯云函数python</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1N1bll1ZmVpL2ZyZWVub20=">SunYufei/freenom: Freenom 域名自动续期 Python 版本 (github.com)<i class="fa fa-external-link-alt"></i></span></p><p><code>GitHub Action</code>用做<code>CI</code>工具，修改下用在腾讯云函数上。</p><h4 id="创建腾讯云函数"><a href="#创建腾讯云函数" class="headerlink" title="创建腾讯云函数"></a>创建腾讯云函数</h4><p>直接访问腾讯云函数控制台创建云函数： <span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL3NjZi9saXN0LWNyZWF0ZQ==">https://console.cloud.tencent.com/scf/list-create<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">自定义创建</span><br><span class="line">事件函数</span><br><span class="line">代码部署</span><br><span class="line">Python3.6</span><br></pre></td></tr></table></figure><h4 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h4><ol><li>在“函数管理”页面中，选择<strong>函数代码</strong> &gt; <strong>代码编辑</strong>，查看并编辑函数。</li><li>在 IDE 顶部的菜单栏<strong>终端</strong>中选择<strong>新终端</strong>，打开终端窗口。</li><li>在终端中执行如下命令，安装依赖库 ：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd src # 依赖库需要安装在与函数入口文件同一级的目录下，即需要进入&#96;src&#96;目录后再执行依赖安装操作。</span><br><span class="line">pip3 install requests  -t .</span><br><span class="line">python -m pip install --upgrade requests pyaes -t .</span><br><span class="line">pip install python-telegram-bot --upgrade -t .</span><br><span class="line">pip3 install python-telegram-bot --upgrade -t .</span><br></pre></td></tr></table></figure><h4 id="configuration"><a href="#configuration" class="headerlink" title="configuration"></a>configuration</h4><p>env</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FREENOM_USERNAME&#x3D;username1,username2... </span><br><span class="line">FREENOM_PASSWORD&#x3D;password1,password2...</span><br><span class="line">BOT_API</span><br><span class="line">CHAT_ID</span><br></pre></td></tr></table></figure><p>cron</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 15 9 * * * *</span><br></pre></td></tr></table></figure><h4 id="index-py"><a href="#index-py" class="headerlink" title="index.py"></a>index.py</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf8 -*-</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">from freenom import FreeNom</span><br><span class="line">import time</span><br><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line">from urllib import parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class FreenomDomainNameRenewsAutomaticallys():</span><br><span class="line"></span><br><span class="line">    tg_text &#x3D; &#39;&#39;</span><br><span class="line">    # 打印输出当前ip地址</span><br><span class="line">    def print_my_ip(self):</span><br><span class="line">        api_url &#x3D; &#39;https:&#x2F;&#x2F;api.ipify.org&#x2F;&#39;</span><br><span class="line">        try:</span><br><span class="line">            res &#x3D; requests.get(url&#x3D;api_url)</span><br><span class="line">            res.raise_for_status()</span><br><span class="line">            res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;当前使用 ip 地址：&#39; + res.text.replace(&#39;.&#39;, &#39;,&#39;) + &#39;\n&#39;</span><br><span class="line">            print(&#39;当前使用 ip 地址：&#39; + res.text)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;获取当前 ip 地址失败：&#39; + str(e) + &#39;\n&#39;</span><br><span class="line">            print(&#39;获取当前 ip 地址失败：&#39; + str(e))</span><br><span class="line"></span><br><span class="line">    # TG推送</span><br><span class="line">    def post(self, bot_api, chat_id, text):</span><br><span class="line">        print(&#39;开始推送&#39;)</span><br><span class="line">        headers &#x3D; &#123;</span><br><span class="line">            &#39;user-agent&#39;: &#39;Mozilla&#x2F;5.0 (Linux; Android 6.0; Nexus 5 Build&#x2F;MRA58N) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;46.0.2490.76 Mobile Safari&#x2F;537.36&#39;&#125;</span><br><span class="line">        text &#x3D; parse.quote(text)</span><br><span class="line">        # 修改为自己的bot api token</span><br><span class="line">        post_url &#x3D; &#39;https:&#x2F;&#x2F;api.telegram.org&#x2F;bot&#123;&#125;&#x2F;sendMessage&#39; \</span><br><span class="line">                   &#39;?parse_mode&#x3D;MarkdownV2&amp;chat_id&#x3D;&#123;&#125;&amp;text&#x3D;&#123;&#125;&#39;.format(bot_api, chat_id, text)</span><br><span class="line">        try:</span><br><span class="line">            requests.get(post_url, headers&#x3D;headers)</span><br><span class="line">            print(&#39;推送成功&#39;)</span><br><span class="line">        except Exception:</span><br><span class="line">            print(&quot;推送失败&quot;)</span><br><span class="line">            time.sleep(3)</span><br><span class="line">            # 避免推送死循环</span><br><span class="line">            try:</span><br><span class="line">                requests.get(post_url, headers&#x3D;headers)</span><br><span class="line">            except Exception:</span><br><span class="line">                pass</span><br><span class="line"></span><br><span class="line">    def domainNameRenewsAutomaticallys(self, usernames, passwords, bot_api, chat_id):</span><br><span class="line">        # 分割用户名和密码为列表</span><br><span class="line">        user_list &#x3D; usernames.split(&#39;,&#39;)</span><br><span class="line">        passwd_list &#x3D; passwords.split(&#39;,&#39;)</span><br><span class="line">        if not usernames or not passwords:</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;未检测到用户名或密码，请检查环境变量是否设置正确！\n&#39;</span><br><span class="line">            print(&#39;未检测到用户名或密码，请检查环境变量是否设置正确！&#39;)</span><br><span class="line">        elif len(user_list) !&#x3D; len(passwd_list):</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;用户名与密码个数不匹配，请检查环境变量设置是否错漏！\n&#39;</span><br><span class="line">            print(&#39;用户名与密码个数不匹配，请检查环境变量设置是否错漏！&#39;)</span><br><span class="line">        else:</span><br><span class="line">            self.print_my_ip()</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;共检测到&#123;&#125;个帐户，开始域名自动续期\n&#39;.format(len(user_list))</span><br><span class="line">            print(&#39;共检测到&#39;, len(user_list), &#39;个帐户，开始域名自动续期&#39;)</span><br><span class="line">            print(&#39;*&#39; * 30)</span><br><span class="line">            # 依次登录帐户获取积分，出现错误时不中断程序继续尝试下一个帐户</span><br><span class="line">            for i in range(len(user_list)):</span><br><span class="line">                try:</span><br><span class="line">                    t&#x3D;&#39;&#39;</span><br><span class="line">                    instance &#x3D; FreeNom(user_list[i], passwd_list[i])</span><br><span class="line">                    t&#x3D;instance.renew()</span><br><span class="line">                    self.tg_text&#x3D;self.tg_text+t</span><br><span class="line">                    # print(self.tg_text)</span><br><span class="line">                    i&#x3D;i+1</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    self.tg_text &#x3D; self.tg_text + &#39;程序执行异常：&#39;</span><br><span class="line">                    print(&#39;程序执行异常：&#39; + str(e))</span><br><span class="line">                    print(&#39;*&#39; * 30)</span><br><span class="line">                continue</span><br><span class="line">            self.tg_text &#x3D; self.tg_text.replace(&#39;.&#39;, &#39;,&#39;) + &#39;\n程序执行完毕，域名自动续期过程结束&#39;</span><br><span class="line">            print(&#39;程序执行完毕，域名自动续期过程结束&#39;)</span><br><span class="line">        print(self.tg_text)</span><br><span class="line">        self.post(bot_api, chat_id, self.tg_text)</span><br><span class="line"></span><br><span class="line">def main_handler(event, context):</span><br><span class="line">    usernames &#x3D; os.environ[&#39;username&#39;]</span><br><span class="line">    passwords &#x3D; os.environ[&#39;password&#39;]</span><br><span class="line">    bot_api &#x3D; os.environ[&#39;BOT_API&#39;]</span><br><span class="line">    chat_id &#x3D; os.environ[&#39;CHAT_ID&#39;]</span><br><span class="line">    f &#x3D; FreenomDomainNameRenewsAutomaticallys()</span><br><span class="line">    f.domainNameRenewsAutomaticallys(usernames, passwords, bot_api, chat_id)</span><br><span class="line">    return(&quot;Hello World&quot;)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main_handler(&quot;&quot;,&quot;&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="freedom-py"><a href="#freedom-py" class="headerlink" title="freedom.py"></a>freedom.py</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line"># 登录地址</span><br><span class="line">LOGIN_URL &#x3D; &#39;https:&#x2F;&#x2F;my.freenom.com&#x2F;dologin.php&#39;</span><br><span class="line"></span><br><span class="line"># 域名状态地址</span><br><span class="line">DOMAIN_STATUS_URL &#x3D; &#39;https:&#x2F;&#x2F;my.freenom.com&#x2F;domains.php?a&#x3D;renewals&#39;</span><br><span class="line"></span><br><span class="line"># 域名续期地址</span><br><span class="line">RENEW_DOMAIN_URL &#x3D; &#39;https:&#x2F;&#x2F;my.freenom.com&#x2F;domains.php?submitrenewals&#x3D;true&#39;</span><br><span class="line"></span><br><span class="line"># token 正则</span><br><span class="line">token_ptn &#x3D; re.compile(&#39;name&#x3D;&quot;token&quot; value&#x3D;&quot;(.*?)&quot;&#39;, re.I)</span><br><span class="line"></span><br><span class="line"># 域名信息正则</span><br><span class="line">domain_info_ptn &#x3D; re.compile(</span><br><span class="line">    r&#39;&lt;tr&gt;&lt;td&gt;(.*?)&lt;&#x2F;td&gt;&lt;td&gt;[^&lt;]+&lt;&#x2F;td&gt;&lt;td&gt;[^&lt;]+&lt;span class&#x3D;&quot;[^&lt;]+&gt;(\d+?).Days&lt;&#x2F;span&gt;[^&amp;]+&amp;domain&#x3D;(\d+?)&quot;&gt;.*?&lt;&#x2F;tr&gt;&#39;,</span><br><span class="line">    re.I)</span><br><span class="line"></span><br><span class="line"># 登录状态正则</span><br><span class="line">login_status_ptn &#x3D; re.compile(&#39;&lt;a href&#x3D;&quot;logout.php&quot;&gt;Logout&lt;&#x2F;a&gt;&#39;, re.I)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class FreeNom:</span><br><span class="line">    def __init__(self, username: str, password: str):</span><br><span class="line">        self._u &#x3D; username</span><br><span class="line">        self._p &#x3D; password</span><br><span class="line"></span><br><span class="line">        self._s &#x3D; requests.Session()</span><br><span class="line">        self._s.headers.update(&#123;</span><br><span class="line">            &#39;user-agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) Chrome&#x2F;79.0.3945.130 Safari&#x2F;537.36&#39;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    def _login(self) -&gt; bool:</span><br><span class="line">        self._s.headers.update(&#123;</span><br><span class="line">            &#39;content-type&#39;: &#39;application&#x2F;x-www-form-urlencoded&#39;,</span><br><span class="line">            &#39;referer&#39;: &#39;https:&#x2F;&#x2F;my.freenom.com&#x2F;clientarea.php&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">        r &#x3D; self._s.post(LOGIN_URL, data&#x3D;&#123;&#39;username&#39;: self._u, &#39;password&#39;: self._p&#125;)</span><br><span class="line">        return r.status_code &#x3D;&#x3D; 200</span><br><span class="line"></span><br><span class="line">    def renew(self):</span><br><span class="line">        # login</span><br><span class="line">        ok &#x3D; self._login()</span><br><span class="line">        if not ok:</span><br><span class="line">            print(&#39;login failed&#39;)</span><br><span class="line">            return</span><br><span class="line"></span><br><span class="line">        # check domain status</span><br><span class="line">        self._s.headers.update(&#123;&#39;referer&#39;: &#39;https:&#x2F;&#x2F;my.freenom.com&#x2F;clientarea.php&#39;&#125;)</span><br><span class="line">        r &#x3D; self._s.get(DOMAIN_STATUS_URL)</span><br><span class="line"></span><br><span class="line">        # login status check</span><br><span class="line">        if not re.search(login_status_ptn, r.text):</span><br><span class="line">            print(&#39;get login status failed&#39;)</span><br><span class="line">            return</span><br><span class="line"></span><br><span class="line">        # page token</span><br><span class="line">        match &#x3D; re.search(token_ptn, r.text)</span><br><span class="line">        if not match:</span><br><span class="line">            print(&#39;get page token failed&#39;)</span><br><span class="line">            return</span><br><span class="line">        token &#x3D; match.group(1)</span><br><span class="line"></span><br><span class="line">        # domains</span><br><span class="line">        domains &#x3D; re.findall(domain_info_ptn, r.text)</span><br><span class="line"></span><br><span class="line">        # renew domains</span><br><span class="line">        text&#x3D;&#39;&#39;</span><br><span class="line">        for domain, days, renewal_id in domains:</span><br><span class="line">            days &#x3D; int(days)</span><br><span class="line">            if days &lt; 14:</span><br><span class="line">                self._s.headers.update(&#123;</span><br><span class="line">                    &#39;referer&#39;: f&#39;https:&#x2F;&#x2F;my.freenom.com&#x2F;domains.php?a&#x3D;renewdomain&amp;domain&#x3D;&#123;renewal_id&#125;&#39;,</span><br><span class="line">                    &#39;content-type&#39;: &#39;application&#x2F;x-www-form-urlencoded&#39;</span><br><span class="line">                &#125;)</span><br><span class="line">                r &#x3D; self._s.post(RENEW_DOMAIN_URL, data&#x3D;&#123;</span><br><span class="line">                    &#39;token&#39;: token,</span><br><span class="line">                    &#39;renewalid&#39;: renewal_id,</span><br><span class="line">                    f&#39;renewalperiod[&#123;renewal_id&#125;]&#39;: &#39;12M&#39;,</span><br><span class="line">                    &#39;paymentmethod&#39;: &#39;credit&#39;</span><br><span class="line">                &#125;)</span><br><span class="line">                print(domain, &#39;续期成功&#39; if r.text.find(&#39;Order Confirmation&#39;) !&#x3D; -1 else &#39;续期失败&#39;)</span><br><span class="line">                # domain&#x3D;domain.replace(&quot;,&quot;, &quot;.&quot;);</span><br><span class="line">            # print(f&#39;&#123;domain&#125; 还有 &#123;days&#125; 天续期&#39;)</span><br><span class="line">            text+&#x3D;f&#39;&#123;domain&#125; 还有 &#123;days&#125; 天续期\n&#39;</span><br><span class="line">        # print(text)</span><br><span class="line">        return text</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><img data-src="/319/image-20211027105113815.png" alt="image-20211027105113815" loading="lazy"></p><h3 id="通过腾讯云函数（SCF）部署php版"><a href="#通过腾讯云函数（SCF）部署php版" class="headerlink" title="通过腾讯云函数（SCF）部署php版"></a>通过腾讯云函数（SCF）部署php版</h3><p>使用腾讯云函数 </p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2x1b2xvbmdmZWkvZnJlZW5vbQ==">luolongfei/freenom: Freenom 域名自动续期。Freenom domain name renews automatically. (github.com)<i class="fa fa-external-link-alt"></i></span></p><h4 id="1、下载-SCF-版本的压缩包"><a href="#1、下载-SCF-版本的压缩包" class="headerlink" title="1、下载 SCF 版本的压缩包"></a>1、下载 SCF 版本的压缩包</h4><p>此版本为特别版，支持通过腾讯云函数部署，并且将与主分支同步维护更新，推荐没有自己 VPS 服务器的用户使用，最新版本号为<code>v0.3.1_scf</code>。下载地址： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2x1b2xvbmdmZWkvZnJlZW5vbS9yZWxlYXNlcy9kb3dubG9hZC92MC4zLjFfc2NmL2ZyZWVub20tMC4zLjFfc2NmLnppcA==">https://github.com/luolongfei/freenom/releases/download/v0.3.1_scf/freenom-0.3.1_scf.zip<i class="fa fa-external-link-alt"></i></span></p><p>下载后你将得到一个 zip 文件，将 zip 文件放到你能找到的任意目录，后面我们将以 zip 文件的形式上传到腾讯云函数。</p><h4 id="2、创建腾讯云函数"><a href="#2、创建腾讯云函数" class="headerlink" title="2、创建腾讯云函数"></a>2、创建腾讯云函数</h4><p>直接访问腾讯云函数控制台创建云函数： <span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL3NjZi9saXN0LWNyZWF0ZQ==">https://console.cloud.tencent.com/scf/list-create<i class="fa fa-external-link-alt"></i></span> ， 按照下图所示的说明进行创建。如果无法看清图片，可访问： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2x1b2xvbmdmZWkvZnJlZW5vbS9ibG9iL21haW4vcmVzb3VyY2VzL3NjcmVlbnNob3Qvc2NmLnBuZw==">https://github.com/luolongfei/freenom/blob/main/resources/screenshot/scf.png<i class="fa fa-external-link-alt"></i></span> 或者 <span class="exturl" data-url="aHR0cHM6Ly96My5heDF4LmNvbS8yMDIxLzEwLzE0LzVsTXdlVS5wbmc=">https://z3.ax1x.com/2021/10/14/5lMweU.png<i class="fa fa-external-link-alt"></i></span> 查看原图。</p><p><a href="https://z3.ax1x.com/2021/10/14/5lMweU.png"><img data-src="/319/68747470733a2f2f7a332e617831782e636f6d2f323032312f31302f31342f356c4d7765552e706e67.png" alt="scf01" loading="lazy"></a></p><p>按照上图所示部署完成后，可以点击云函数的名称进入云函数管理画面，管理画面点击函数代码，然后往下翻可看到<code>部署</code>与<code>测试</code>按钮，点击<code>测试</code>，稍等几秒钟，即可看到输出日志， 根据输出日志判断配置以及部署是否正确。</p><p><a href="https://z3.ax1x.com/2021/10/14/5l3oHf.png"><img data-src="/319/68747470733a2f2f7a332e617831782e636f6d2f323032312f31302f31342f356c336f48662e706e67.png" alt="scf02" loading="lazy"></a></p><p><em>有关腾讯云函数部署的内容结束。</em></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效hostloc自动签到</title>
    <link href="https://weilining.github.io/318.html"/>
    <id>https://weilining.github.io/318.html</id>
    <published>2021-10-26T07:31:38.000Z</published>
    <updated>2021-10-26T07:31:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实测"><a href="#实测" class="headerlink" title="实测"></a>实测</h2><h3 id="腾讯云函数"><a href="#腾讯云函数" class="headerlink" title="腾讯云函数"></a>腾讯云函数</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLzYyMzUyNDcxOC9Ib3N0bG9jQXV0b0dldFBvaW50cw==">https://github.com/623524718/HostlocAutoGetPoints<i class="fa fa-external-link-alt"></i></span></p><p>通过上面仓库转过来，有问题直接找上面仓库。</p><h4 id="创建腾讯云函数"><a href="#创建腾讯云函数" class="headerlink" title="创建腾讯云函数"></a>创建腾讯云函数</h4><p>直接访问腾讯云函数控制台创建云函数： <span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL3NjZi9saXN0LWNyZWF0ZQ==">https://console.cloud.tencent.com/scf/list-create<i class="fa fa-external-link-alt"></i></span> </p><p>图中<code>index.py</code>代码在下面</p><p><img data-src="/318/image-20211027020540650.png" alt="image-20211027020540650" loading="lazy"></p><h4 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h4><ol><li>在“函数管理”页面中，选择<strong>函数代码</strong> &gt; <strong>代码编辑</strong>，查看并编辑函数。</li><li>在 IDE 顶部的菜单栏<strong>终端</strong>中选择<strong>新终端</strong>，打开终端窗口。</li><li>在终端中执行如下命令，安装依赖库 ：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd src # 依赖库需要安装在与函数入口文件同一级的目录下，即需要进入&#96;src&#96;目录后再执行依赖安装操作。</span><br><span class="line">python -m pip install --upgrade requests pyaes -t .</span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><p><img data-src="/318/image-20211027100328805.png" alt="image-20211027100328805" loading="lazy"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HOSTLOC_USERNAME # hostloc账户</span><br><span class="line">HOSTLOC_PASSWORD # hostloc密码 </span><br><span class="line">#API 在@BotFather申请，chat_id可以通过机器人@userinfobot发送任意消息获取，返回的id即是chat_id</span><br><span class="line">BOT_API # TG机器人的API</span><br><span class="line">CHAT_ID # 你自己的chat_id</span><br></pre></td></tr></table></figure><h4 id="index-py"><a href="#index-py" class="headerlink" title="index.py"></a>index.py</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf8 -*-</span><br><span class="line">import os</span><br><span class="line">import time</span><br><span class="line">import random</span><br><span class="line">import re</span><br><span class="line">import textwrap</span><br><span class="line">import requests</span><br><span class="line">from urllib import parse</span><br><span class="line">from pyaes import AESModeOfOperationCBC</span><br><span class="line">from requests import Session as req_Session</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class HostlocGetPoints():</span><br><span class="line"></span><br><span class="line">    tg_text &#x3D; &#39;&#39;</span><br><span class="line"></span><br><span class="line">    # 随机生成用户空间链接</span><br><span class="line">    def randomly_gen_uspace_url(self) -&gt; list:</span><br><span class="line">        url_list &#x3D; []</span><br><span class="line">        # 访问小黑屋用户空间不会获得积分、生成的随机数可能会重复，这里多生成几个链接用作冗余</span><br><span class="line">        for i in range(13):</span><br><span class="line">            uid &#x3D; random.randint(10000, 50000)</span><br><span class="line">            url &#x3D; &#39;https:&#x2F;&#x2F;hostloc.com&#x2F;space-uid-&#123;&#125;.html&#39;.format(str(uid))</span><br><span class="line">            url_list.append(url)</span><br><span class="line">        return url_list</span><br><span class="line"></span><br><span class="line">    # 使用Python实现防CC验证页面中JS写的的toNumbers函数</span><br><span class="line">    def toNumbers(self, secret: str) -&gt; list:</span><br><span class="line">        text &#x3D; []</span><br><span class="line">        for value in textwrap.wrap(secret, 2):</span><br><span class="line">            text.append(int(value, 16))</span><br><span class="line">        return text</span><br><span class="line"></span><br><span class="line">    # 不带Cookies访问论坛首页，检查是否开启了防CC机制，将开启状态、AES计算所需的参数全部放在一个字典中返回</span><br><span class="line">    def check_anti_cc(self) -&gt; dict:</span><br><span class="line">        result_dict &#x3D; &#123;&#125;</span><br><span class="line">        headers &#x3D; &#123;</span><br><span class="line">            &#39;user-agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36&#39;</span><br><span class="line">        &#125;</span><br><span class="line">        home_page &#x3D; &#39;https:&#x2F;&#x2F;hostloc.com&#x2F;forum.php&#39;</span><br><span class="line">        res &#x3D; requests.get(home_page, headers&#x3D;headers)</span><br><span class="line">        aes_keys &#x3D; re.findall(&#39;toNumbers\(&quot;(.*?)&quot;\)&#39;, res.text)</span><br><span class="line">        cookie_name &#x3D; re.findall(&#39;cookie&#x3D;&quot;(.*?)&#x3D;&quot;&#39;, res.text)</span><br><span class="line"></span><br><span class="line">        if len(aes_keys) !&#x3D; 0:  # 开启了防CC机制</span><br><span class="line">            print(&#39;检测到防 CC 机制开启！&#39;)</span><br><span class="line">            if len(aes_keys) !&#x3D; 3 or len(cookie_name) !&#x3D; 1:  # 正则表达式匹配到了参数，但是参数个数不对（不正常的情况）</span><br><span class="line">                result_dict[&#39;ok&#39;] &#x3D; 0</span><br><span class="line">            else:  # 匹配正常时将参数存到result_dict中</span><br><span class="line">                result_dict[&#39;ok&#39;] &#x3D; 1</span><br><span class="line">                result_dict[&#39;cookie_name&#39;] &#x3D; cookie_name[0]</span><br><span class="line">                result_dict[&#39;a&#39;] &#x3D; aes_keys[0]</span><br><span class="line">                result_dict[&#39;b&#39;] &#x3D; aes_keys[1]</span><br><span class="line">                result_dict[&#39;c&#39;] &#x3D; aes_keys[2]</span><br><span class="line">        else:</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line">        return result_dict</span><br><span class="line"></span><br><span class="line">    # 在开启了防CC机制时使用获取到的数据进行AES解密计算生成一条Cookie（未开启防CC机制时返回空Cookies）</span><br><span class="line">    def gen_anti_cc_cookies(self) -&gt; dict:</span><br><span class="line">        cookies &#x3D; &#123;&#125;</span><br><span class="line">        anti_cc_status &#x3D; self.check_anti_cc()</span><br><span class="line"></span><br><span class="line">        if anti_cc_status:  # 不为空，代表开启了防CC机制</span><br><span class="line">            if anti_cc_status[&#39;ok&#39;] &#x3D;&#x3D; 0:</span><br><span class="line">                print(&#39;防 CC 验证过程所需参数不符合要求，页面可能存在错误！&#39;)</span><br><span class="line">            else:  # 使用获取到的三个值进行AES Cipher-Block Chaining解密计算以生成特定的Cookie值用于通过防CC验证</span><br><span class="line">                print(&#39;自动模拟计算尝试通过防 CC 验证&#39;)</span><br><span class="line">                a &#x3D; bytes(self.toNumbers(anti_cc_status[&#39;a&#39;]))</span><br><span class="line">                b &#x3D; bytes(self.toNumbers(anti_cc_status[&#39;b&#39;]))</span><br><span class="line">                c &#x3D; bytes(self.toNumbers(anti_cc_status[&#39;c&#39;]))</span><br><span class="line">                cbc_mode &#x3D; AESModeOfOperationCBC(a, b)</span><br><span class="line">                result &#x3D; cbc_mode.decrypt(c)</span><br><span class="line"></span><br><span class="line">                name &#x3D; anti_cc_status[&#39;cookie_name&#39;]</span><br><span class="line">                cookies[name] &#x3D; result.hex()</span><br><span class="line">        else:</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line">        return cookies</span><br><span class="line"></span><br><span class="line">    # 登录帐户</span><br><span class="line">    def login(self, username: str, password: str) -&gt; req_Session:</span><br><span class="line">        headers &#x3D; &#123;</span><br><span class="line">            &#39;user-agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36&#39;,</span><br><span class="line">            &#39;origin&#39;: &#39;https:&#x2F;&#x2F;hostloc.com&#39;,</span><br><span class="line">            &#39;referer&#39;: &#39;https:&#x2F;&#x2F;hostloc.com&#x2F;forum.php&#39;,</span><br><span class="line">        &#125;</span><br><span class="line">        login_url &#x3D; &#39;https:&#x2F;&#x2F;hostloc.com&#x2F;member.php?mod&#x3D;logging&amp;action&#x3D;login&amp;loginsubmit&#x3D;yes&amp;infloat&#x3D;yes&amp;lssubmit&#x3D;yes&amp;inajax&#x3D;1&#39;</span><br><span class="line">        login_data &#x3D; &#123;</span><br><span class="line">            &#39;fastloginfield&#39;: &#39;username&#39;,</span><br><span class="line">            &#39;username&#39;: username,</span><br><span class="line">            &#39;password&#39;: password,</span><br><span class="line">            &#39;quickforward&#39;: &#39;yes&#39;,</span><br><span class="line">            &#39;handlekey&#39;: &#39;ls&#39;,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        s &#x3D; req_Session()</span><br><span class="line">        s.headers.update(headers)</span><br><span class="line">        s.cookies.update(self.gen_anti_cc_cookies())</span><br><span class="line">        res &#x3D; s.post(url&#x3D;login_url, data&#x3D;login_data)</span><br><span class="line">        res.raise_for_status()</span><br><span class="line">        return s</span><br><span class="line"></span><br><span class="line">    # 通过抓取用户设置页面的标题检查是否登录成功</span><br><span class="line">    def check_login_status(self, s: req_Session, number_c: int) -&gt; bool:</span><br><span class="line">        test_url &#x3D; &#39;https:&#x2F;&#x2F;hostloc.com&#x2F;home.php?mod&#x3D;spacecp&#39;</span><br><span class="line">        res &#x3D; s.get(test_url)</span><br><span class="line">        res.raise_for_status()</span><br><span class="line">        res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">        test_title &#x3D; re.findall(&quot;&lt;title&gt;(.*?)&lt;\&#x2F;title&gt;&quot;, res.text)</span><br><span class="line"></span><br><span class="line">        if len(test_title) !&#x3D; 0:  # 确保正则匹配到了内容，防止出现数组索引越界的情况</span><br><span class="line">            if test_title[0] !&#x3D; &#39;个人资料 -  全球主机交流论坛 -  Powered by Discuz!&#39;:</span><br><span class="line">                self.tg_text &#x3D; self.tg_text + &#39;\n第&#123;&#125;个帐户登录失败！\n&#39;.format(number_c)</span><br><span class="line">                print(&#39;第&#123;&#125;个帐户登录失败！&#39;.format(number_c))</span><br><span class="line">                return False</span><br><span class="line">            else:</span><br><span class="line">                self.tg_text &#x3D; self.tg_text + &#39;\n第&#123;&#125;个帐户登录成功！\n&#39;.format(number_c)</span><br><span class="line">                print(&#39;第&#123;&#125;个帐户登录成功！&#39;.format(number_c))</span><br><span class="line"></span><br><span class="line">                # 获取并打印当前账户名</span><br><span class="line">                test_url &#x3D; &#39;https:&#x2F;&#x2F;hostloc.com&#x2F;forum.php&#39;</span><br><span class="line">                res &#x3D; s.get(test_url)</span><br><span class="line">                res.raise_for_status()</span><br><span class="line">                res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">                name &#x3D; re.findall(&#39;title&#x3D;&quot;访问我的空间&quot;&gt;([\s\S]&#123;,20&#125;)&lt;&#x2F;a&gt;&#39;, res.text)[0]</span><br><span class="line">                self.tg_text &#x3D; self.tg_text + &#39;当前账户：&#39; + name + &#39;\n&#39;</span><br><span class="line">                print(&#39;当前账户：&#39; + name)</span><br><span class="line">                return True</span><br><span class="line">        else:</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;无法在用户设置页面找到标题，该页面存在错误或被防 CC 机制拦截！\n&#39;</span><br><span class="line">            print(&#39;无法在用户设置页面找到标题，该页面存在错误或被防 CC 机制拦截！&#39;)</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">    # 抓取并打印输出帐户当前积分</span><br><span class="line">    def print_current_points(self, s: req_Session):</span><br><span class="line">        test_url &#x3D; &#39;https:&#x2F;&#x2F;hostloc.com&#x2F;forum.php&#39;</span><br><span class="line">        res &#x3D; s.get(test_url)</span><br><span class="line">        res.raise_for_status()</span><br><span class="line">        res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">        points &#x3D; re.findall(&quot;积分: (\d+)&quot;, res.text)</span><br><span class="line"></span><br><span class="line">        if len(points) !&#x3D; 0:  # 确保正则匹配到了内容，防止出现数组索引越界的情况</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;帐户当前积分：&#39; + points[0] +&#39;\n&#39;</span><br><span class="line">            print(&#39;帐户当前积分：&#39; + points[0])</span><br><span class="line">        else:</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;无法获取帐户积分，可能页面存在错误或者未登录！&#39; + &#39;\n&#39;</span><br><span class="line">            print(&#39;无法获取帐户积分，可能页面存在错误或者未登录！&#39;)</span><br><span class="line">        time.sleep(5)</span><br><span class="line"></span><br><span class="line">    # 依次访问随机生成的用户空间链接获取积分</span><br><span class="line">    def get_points(self, s: req_Session, number_c: int):</span><br><span class="line">        success &#x3D; 0</span><br><span class="line">        fail &#x3D; 0</span><br><span class="line">        if self.check_login_status(s, number_c):</span><br><span class="line">            self.print_current_points(s)  # 打印帐户当前积分</span><br><span class="line">            url_list &#x3D; self.randomly_gen_uspace_url()</span><br><span class="line">            # 依次访问用户空间链接获取积分，出现错误时不中断程序继续尝试访问下一个链接</span><br><span class="line">            for i in range(len(url_list)):</span><br><span class="line">                url &#x3D; url_list[i]</span><br><span class="line">                try:</span><br><span class="line">                    res &#x3D; s.get(url)</span><br><span class="line">                    res.raise_for_status()</span><br><span class="line">                    print(&#39;第&#39;, i + 1, &#39;个用户空间链接访问成功&#39;)</span><br><span class="line">                    success +&#x3D; 1</span><br><span class="line">                    time.sleep(5)  # 每访问一个链接后休眠5秒，以避免触发论坛的防CC机制</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    fail +&#x3D; 1</span><br><span class="line">                    print(&#39;链接访问异常：&#39; + str(e))</span><br><span class="line">                continue</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;用户空间成功访问&#123;&#125;个，访问失败&#123;&#125;个\n&#39;.format(success, fail)</span><br><span class="line">            self.print_current_points(s)  # 再次打印帐户当前积分</span><br><span class="line">        else:</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;请检查你的帐户是否正确！\n&#39;</span><br><span class="line">            print(&#39;请检查你的帐户是否正确！&#39;)</span><br><span class="line"></span><br><span class="line">    # 打印输出当前ip地址</span><br><span class="line">    def print_my_ip(self):</span><br><span class="line">        api_url &#x3D; &#39;https:&#x2F;&#x2F;api.ipify.org&#x2F;&#39;</span><br><span class="line">        try:</span><br><span class="line">            res &#x3D; requests.get(url&#x3D;api_url)</span><br><span class="line">            res.raise_for_status()</span><br><span class="line">            res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;当前使用 ip 地址：&#39; + res.text.replace(&#39;.&#39;, &#39;,&#39;) + &#39;\n&#39;</span><br><span class="line">            print(&#39;当前使用 ip 地址：&#39; + res.text)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;获取当前 ip 地址失败：&#39; + str(e) + &#39;\n&#39;</span><br><span class="line">            print(&#39;获取当前 ip 地址失败：&#39; + str(e))</span><br><span class="line"></span><br><span class="line">    # TG推送</span><br><span class="line">    def post(self, bot_api, chat_id, text):</span><br><span class="line">        print(&#39;开始推送&#39;)</span><br><span class="line">        headers &#x3D; &#123;</span><br><span class="line">            &#39;user-agent&#39;: &#39;Mozilla&#x2F;5.0 (Linux; Android 6.0; Nexus 5 Build&#x2F;MRA58N) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;46.0.2490.76 Mobile Safari&#x2F;537.36&#39;&#125;</span><br><span class="line">        text &#x3D; parse.quote(text)</span><br><span class="line">        # 修改为自己的bot api token</span><br><span class="line">        post_url &#x3D; &#39;https:&#x2F;&#x2F;api.telegram.org&#x2F;bot&#123;&#125;&#x2F;sendMessage&#39; \</span><br><span class="line">                   &#39;?parse_mode&#x3D;MarkdownV2&amp;chat_id&#x3D;&#123;&#125;&amp;text&#x3D;&#123;&#125;&#39;.format(bot_api, chat_id, text)</span><br><span class="line">        try:</span><br><span class="line">            requests.get(post_url, headers&#x3D;headers)</span><br><span class="line">            print(&#39;推送成功&#39;)</span><br><span class="line">        except Exception:</span><br><span class="line">            print(&quot;推送失败&quot;)</span><br><span class="line">            time.sleep(3)</span><br><span class="line">            # 避免推送死循环</span><br><span class="line">            try:</span><br><span class="line">                requests.get(post_url, headers&#x3D;headers)</span><br><span class="line">            except Exception:</span><br><span class="line">                pass</span><br><span class="line"></span><br><span class="line">    def hostloc_get_points(self, usernames, passwords, bot_api, chat_id,):</span><br><span class="line">        # 分割用户名和密码为列表</span><br><span class="line">        user_list &#x3D; usernames.split(&#39;,&#39;)</span><br><span class="line">        passwd_list &#x3D; passwords.split(&#39;,&#39;)</span><br><span class="line">        if not usernames or not passwords:</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;未检测到用户名或密码，请检查环境变量是否设置正确！\n&#39;</span><br><span class="line">            print(&#39;未检测到用户名或密码，请检查环境变量是否设置正确！&#39;)</span><br><span class="line">        elif len(user_list) !&#x3D; len(passwd_list):</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;用户名与密码个数不匹配，请检查环境变量设置是否错漏！\n&#39;</span><br><span class="line">            print(&#39;用户名与密码个数不匹配，请检查环境变量设置是否错漏！&#39;)</span><br><span class="line">        else:</span><br><span class="line">            self.print_my_ip()</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;共检测到&#123;&#125;个帐户，开始获取积分\n&#39;.format(len(user_list))</span><br><span class="line">            print(&#39;共检测到&#39;, len(user_list), &#39;个帐户，开始获取积分&#39;)</span><br><span class="line">            print(&#39;*&#39; * 30)</span><br><span class="line">            # 依次登录帐户获取积分，出现错误时不中断程序继续尝试下一个帐户</span><br><span class="line">            for i in range(len(user_list)):</span><br><span class="line">                try:</span><br><span class="line">                    s &#x3D; self.login(user_list[i], passwd_list[i])</span><br><span class="line">                    self.get_points(s, i + 1)</span><br><span class="line">                    print(&#39;*&#39; * 30)</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    self.tg_text &#x3D; self.tg_text + &#39;程序执行异常：&#39;</span><br><span class="line">                    print(&#39;程序执行异常：&#39; + str(e))</span><br><span class="line">                    print(&#39;*&#39; * 30)</span><br><span class="line">                continue</span><br><span class="line">            self.tg_text &#x3D; self.tg_text + &#39;\n程序执行完毕，获取积分过程结束&#39;</span><br><span class="line">            print(&#39;程序执行完毕，获取积分过程结束&#39;)</span><br><span class="line">#         print(self.tg_text)</span><br><span class="line">        self.post(bot_api, chat_id, self.tg_text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    usernames &#x3D; os.environ[&#39;HOSTLOC_USERNAME&#39;]</span><br><span class="line">    passwords &#x3D; os.environ[&#39;HOSTLOC_PASSWORD&#39;]</span><br><span class="line">    bot_api &#x3D; os.environ[&#39;BOT_API&#39;]</span><br><span class="line">    chat_id &#x3D; os.environ[&#39;CHAT_ID&#39;]</span><br><span class="line"></span><br><span class="line">    h &#x3D; HostlocGetPoints()</span><br><span class="line">    h.hostloc_get_points(usernames, passwords, bot_api, chat_id)</span><br></pre></td></tr></table></figure><p><img data-src="/318/image-20211027100250873.png" alt="image-20211027100250873" loading="lazy"></p><h3 id="油猴脚本"><a href="#油猴脚本" class="headerlink" title="油猴脚本"></a>油猴脚本</h3><p><span class="exturl" data-url="aHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzQxNDAwNQ==">https://greasyfork.org/zh-CN/scripts/414005<i class="fa fa-external-link-alt"></i></span></p><h3 id="私有GitHub-Action"><a href="#私有GitHub-Action" class="headerlink" title="私有GitHub Action"></a>私有GitHub Action</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLzYyMzUyNDcxOC9Ib3N0bG9jQXV0b0dldFBvaW50cw==">623524718/HostlocAutoGetPoints (github.com)<i class="fa fa-external-link-alt"></i></span></p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>看完这帖才知道原来 cronjob 也可以白女票<img data-src="/318/007.gif" alt="img" loading="lazy"></p><p>现已加入 hostloc 签到脚本豪华午餐：</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS90aHJlYWQtODQ2NjkyLTEtMS5odG1s">hostloc签到Python脚本 之 小鸡部署篇<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS9mb3J1bS5waHA/bW9kPXJlZGlyZWN0JmdvdG89ZmluZHBvc3QmcHRpZD04NDY1MjAmcGlkPTEwMzk3MTAx">hostloc签到Python脚本 之 docker 篇<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2p6bDEvaG9zdGxvYy1hdXRvLWdldC1wb2ludHMtZG9ja2VyL2Jsb2IvbWFpbi9Eb2NrZXJmaWxl">https://github.com/jzl1/hostloc- ... lob/main/Dockerfile<i class="fa fa-external-link-alt"></i></span>[/url]</li><li><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS9mb3J1bS5waHA/bW9kPXJlZGlyZWN0JmdvdG89ZmluZHBvc3QmcHRpZD04NDY1MjAmcGlkPTEwMzk4NTEw">hostloc签到Python脚本 之 Heroku 篇<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xhb2d1aTIwMDgvaGVyb2t1X2hvc3Rsb2NfZ2V0X3BvaW50czI=">https://github.com/laogui2008/heroku_hostloc_get_points2<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS90aHJlYWQtODQ3MDA1LTEtMS5odG1s">hostloc签到脚本 之 HTML+JS 及 PHP 篇<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lkZGRkZy9ob3N0bG9j">https://github.com/iddddg/hostloc<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS90aHJlYWQtODQ3NTY3LTEtMS5odG1s">hostloc签到Python脚本 之 云函数 篇<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3VrdXEvaG9zdGxvYy1hdXRvLWdldC1wb2ludHMtc2Nm">https://github.com/ukuq/hostloc-auto-get-points-scf<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS90aHJlYWQtODQ4OTE2LTEtMS5odG1s">hostloc签到Go脚本 之 云函数 篇<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS90aHJlYWQtODQ3NjAxLTEtMS5odG1s">hostloc签到脚本 之 油猴脚本 篇<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1hJVTIvVXNlclNjcmlwdA==">https://github.com/XIU2/UserScript<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzQxNDAwNQ==">https://greasyfork.org/zh-CN/scripts/414005<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS90aHJlYWQtODQ4Nzg5LTEtMS5odG1s">hostloc签到JS脚本 之 浏览器 篇<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS90aHJlYWQtODQ4ODIyLTEtMS5odG1s">hostloc签到脚本 之 phantomjscloud 篇<i class="fa fa-external-link-alt"></i></span></li></ul><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly9ob3N0bG9jLmNvbS90aHJlYWQtODQ4ODIyLTEtMS5odG1s">【0527更新】不需要VPS、不需要开电脑，无感知自动定时签到~-美国VPS综合讨论-全球主机交流论坛 - Powered by Discuz! (hostloc.com)<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>最有效硬件信息查看</title>
    <link href="https://weilining.github.io/317.html"/>
    <id>https://weilining.github.io/317.html</id>
    <published>2021-10-26T03:24:10.000Z</published>
    <updated>2021-10-26T03:24:10.000Z</updated>
    
    <content type="html"><![CDATA[<p> <span class="exturl" data-url="aHR0cHM6Ly93d3cuaHdpbmZvLmNvbS8=">https://www.hwinfo.com/<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9wZWNtZC5uZXQvdGhyZWFkLTE4MC5odG0=">https://pecmd.net/thread-180.htm<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">默认</summary>
    
    
    
    
  </entry>
  
</feed>
